import{_ as n,r as s,c as a,a as e,w as t,f as o,e as p,b as l,o as c}from"./app.74c3daae.js";const r='{"title":"XSS 和 CSRF","description":"","frontmatter":{},"headers":[{"level":2,"title":"XSS","slug":"xss"},{"level":3,"title":"反射型","slug":"反射型"},{"level":3,"title":"存储型","slug":"存储型"},{"level":3,"title":"基于DOM","slug":"基于dom"},{"level":2,"title":"XSS 攻击的防范","slug":"xss-攻击的防范"},{"level":3,"title":"HttpOnly 防止劫取 Cookie","slug":"httponly-防止劫取-cookie"},{"level":3,"title":"输入检查","slug":"输入检查"},{"level":3,"title":"输出检查","slug":"输出检查"},{"level":2,"title":"CSRF","slug":"csrf"},{"level":2,"title":"浏览器的 Cookie 策略","slug":"浏览器的-cookie-策略"},{"level":2,"title":"CSRF 攻击的防范","slug":"csrf-攻击的防范"},{"level":3,"title":"验证码","slug":"验证码"},{"level":3,"title":"Referer Check","slug":"referer-check"},{"level":3,"title":"添加 token 验证","slug":"添加-token-验证"},{"level":2,"title":"总结","slug":"总结"}],"relativePath":"learns/security/xss-and-csrf.md","lastUpdated":1635388499005}',i={},u=o('<p><div class="table-of-contents"><ul><li><a href="#xss">XSS</a><ul><li><a href="#反射型">反射型</a></li><li><a href="#存储型">存储型</a></li><li><a href="#基于dom">基于DOM</a></li></ul></li><li><a href="#xss-攻击的防范">XSS 攻击的防范</a><ul><li><a href="#httponly-防止劫取-cookie">HttpOnly 防止劫取 Cookie</a></li><li><a href="#输入检查">输入检查</a></li><li><a href="#输出检查">输出检查</a></li></ul></li><li><a href="#csrf">CSRF</a></li><li><a href="#浏览器的-cookie-策略">浏览器的 Cookie 策略</a></li><li><a href="#csrf-攻击的防范">CSRF 攻击的防范</a><ul><li><a href="#验证码">验证码</a></li><li><a href="#referer-check">Referer Check</a></li><li><a href="#添加-token-验证">添加 token 验证</a></li></ul></li><li><a href="#总结">总结</a></li></ul></div></p><h1 id="xss-和-csrf" tabindex="-1">XSS 和 CSRF <a class="header-anchor" href="#xss-和-csrf" aria-hidden="true">#</a></h1><p>在 Web 安全领域中，XSS 和 CSRF 是最常见的攻击方式。本文将会简单介绍 XSS 和 CSRF 的攻防问题。</p><h2 id="xss" tabindex="-1">XSS <a class="header-anchor" href="#xss" aria-hidden="true">#</a></h2><p>XSS，即 Cross Site Script，中译是跨站脚本攻击；其原本缩写是 CSS，但为了和层叠样式表(Cascading Style Sheet)有所区分，因而在安全领域叫做 XSS。</p><p>XSS 攻击是指攻击者在网站上注入恶意的客户端代码，通过恶意脚本对客户端网页进行篡改，从而在用户浏览网页时，对用户浏览器进行控制或者获取用户隐私数据的一种攻击方式。</p><p>攻击者对客户端网页注入的恶意脚本一般包括 JavaScript，有时也会包含 HTML 和 Flash。有很多种方式进行 XSS 攻击，但它们的共同点为：将一些隐私数据像 cookie、session 发送给攻击者，将受害者重定向到一个由攻击者控制的网站，在受害者的机器上进行一些恶意操作。</p><p>XSS攻击可以分为3类：反射型（非持久型）、存储型（持久型）、基于DOM。</p><h3 id="反射型" tabindex="-1">反射型 <a class="header-anchor" href="#反射型" aria-hidden="true">#</a></h3><p>反射型 XSS 只是简单地把用户输入的数据 “反射” 给浏览器，这种攻击方式往往需要攻击者诱使用户点击一个恶意链接，或者提交一个表单，或者进入一个恶意网站时，注入脚本进入被攻击者的网站。</p>',10),k=p("div",{class:"language-html line-numbers-mode"},[p("pre",null,[p("code",null,[l("恶意链接的地址指向了 localhost:8001/?q=111&p=222。然后，我再启一个简单的 Node 服务处理恶意链接的请求：\n\nconst http = require('http');\nfunction handleReequest(req, res) {\n  res.setHeader('Access-Control-Allow-Origin', '*');\n  res.writeHead(200, {'Content-Type': 'text/html; charset=UTF-8'});\n  res.write('"),p("span",{class:"token tag"},[p("span",{class:"token tag"},[p("span",{class:"token punctuation"},"<"),l("script")]),p("span",{class:"token punctuation"},">")]),p("span",{class:"token script"},[p("span",{class:"token language-javascript"},[p("span",{class:"token function"},"alert"),p("span",{class:"token punctuation"},"("),p("span",{class:"token string"},'"反射型 XSS 攻击"'),p("span",{class:"token punctuation"},")")])]),p("span",{class:"token tag"},[p("span",{class:"token tag"},[p("span",{class:"token punctuation"},"</"),l("script")]),p("span",{class:"token punctuation"},">")]),l("');\n  res.end();\n}\n\nconst server = new http.Server();\nserver.listen(8001, '127.0.0.1');\nserver.on('request', handleReequest);\n\n当用户点击恶意链接时，页面跳转到攻击者预先准备的页面，会发现在攻击者的页面执行了 js 脚本：\n\n这样就产生了反射型 XSS 攻击。攻击者可以注入任意的恶意脚本进行攻击，可能注入恶作剧脚本，或者注入能获取用户隐私数据(如cookie)的脚本，这取决于攻击者的目的。\n")])]),p("div",{class:"line-numbers-wrapper"},[p("span",{class:"line-number"},"1"),p("br"),p("span",{class:"line-number"},"2"),p("br"),p("span",{class:"line-number"},"3"),p("br"),p("span",{class:"line-number"},"4"),p("br"),p("span",{class:"line-number"},"5"),p("br"),p("span",{class:"line-number"},"6"),p("br"),p("span",{class:"line-number"},"7"),p("br"),p("span",{class:"line-number"},"8"),p("br"),p("span",{class:"line-number"},"9"),p("br"),p("span",{class:"line-number"},"10"),p("br"),p("span",{class:"line-number"},"11"),p("br"),p("span",{class:"line-number"},"12"),p("br"),p("span",{class:"line-number"},"13"),p("br"),p("span",{class:"line-number"},"14"),p("br"),p("span",{class:"line-number"},"15"),p("br"),p("span",{class:"line-number"},"16"),p("br"),p("span",{class:"line-number"},"17"),p("br")])],-1),b=p("h3",{id:"存储型",tabindex:"-1"},[l("存储型 "),p("a",{class:"header-anchor",href:"#存储型","aria-hidden":"true"},"#")],-1),d=p("p",null,'存储型 XSS 会把用户输入的数据 "存储" 在服务器端，当浏览器请求数据时，脚本从服务器上传回并执行。这种 XSS 攻击具有很强的稳定性。',-1),m=p("p",null,"比较常见的一个场景是攻击者在社区或论坛上写下一篇包含恶意 JavaScript 代码的文章或评论，文章或评论发表后，所有访问该文章或评论的用户，都会在他们的浏览器中执行这段恶意的 JavaScript 代码。",-1),h=p("p",null,"举一个示例。",-1),g=p("div",{class:"language-js line-numbers-mode"},[p("pre",null,[p("code",null,[p("span",{class:"token operator"},"<"),l("input type"),p("span",{class:"token operator"},"="),p("span",{class:"token string"},'"text"'),l(" id"),p("span",{class:"token operator"},"="),p("span",{class:"token string"},'"input"'),p("span",{class:"token operator"},">"),l("\n"),p("span",{class:"token operator"},"<"),l("button id"),p("span",{class:"token operator"},"="),p("span",{class:"token string"},'"btn"'),p("span",{class:"token operator"},">"),l("Submit"),p("span",{class:"token operator"},"<"),p("span",{class:"token operator"},"/"),l("button"),p("span",{class:"token operator"},">"),l("\n\n"),p("span",{class:"token operator"},"<"),l("script"),p("span",{class:"token operator"},">"),l("\n  "),p("span",{class:"token keyword"},"const"),l(" input "),p("span",{class:"token operator"},"="),l(" document"),p("span",{class:"token punctuation"},"."),p("span",{class:"token function"},"getElementById"),p("span",{class:"token punctuation"},"("),p("span",{class:"token string"},"'input'"),p("span",{class:"token punctuation"},")"),p("span",{class:"token punctuation"},";"),l("\n  "),p("span",{class:"token keyword"},"const"),l(" btn "),p("span",{class:"token operator"},"="),l(" document"),p("span",{class:"token punctuation"},"."),p("span",{class:"token function"},"getElementById"),p("span",{class:"token punctuation"},"("),p("span",{class:"token string"},"'btn'"),p("span",{class:"token punctuation"},")"),p("span",{class:"token punctuation"},";"),l("\n\n  "),p("span",{class:"token keyword"},"let"),l(" val"),p("span",{class:"token punctuation"},";"),l("\n\n  input"),p("span",{class:"token punctuation"},"."),p("span",{class:"token function"},"addEventListener"),p("span",{class:"token punctuation"},"("),p("span",{class:"token string"},"'change'"),p("span",{class:"token punctuation"},","),l(),p("span",{class:"token punctuation"},"("),p("span",{class:"token parameter"},"e"),p("span",{class:"token punctuation"},")"),l(),p("span",{class:"token operator"},"=>"),l(),p("span",{class:"token punctuation"},"{"),l("\n    val "),p("span",{class:"token operator"},"="),l(" e"),p("span",{class:"token punctuation"},"."),l("target"),p("span",{class:"token punctuation"},"."),l("value"),p("span",{class:"token punctuation"},";"),l("\n  "),p("span",{class:"token punctuation"},"}"),p("span",{class:"token punctuation"},","),l(),p("span",{class:"token boolean"},"false"),p("span",{class:"token punctuation"},")"),p("span",{class:"token punctuation"},";"),l("\n\n  btn"),p("span",{class:"token punctuation"},"."),p("span",{class:"token function"},"addEventListener"),p("span",{class:"token punctuation"},"("),p("span",{class:"token string"},"'click'"),p("span",{class:"token punctuation"},","),l(),p("span",{class:"token punctuation"},"("),p("span",{class:"token parameter"},"e"),p("span",{class:"token punctuation"},")"),l(),p("span",{class:"token operator"},"=>"),l(),p("span",{class:"token punctuation"},"{"),l("\n    "),p("span",{class:"token function"},"fetch"),p("span",{class:"token punctuation"},"("),p("span",{class:"token string"},"'http://localhost:8001/save'"),p("span",{class:"token punctuation"},","),l(),p("span",{class:"token punctuation"},"{"),l("\n      method"),p("span",{class:"token operator"},":"),l(),p("span",{class:"token string"},"'POST'"),p("span",{class:"token punctuation"},","),l("\n      body"),p("span",{class:"token operator"},":"),l(" val\n    "),p("span",{class:"token punctuation"},"}"),p("span",{class:"token punctuation"},")"),p("span",{class:"token punctuation"},";"),l("\n  "),p("span",{class:"token punctuation"},"}"),p("span",{class:"token punctuation"},","),l(),p("span",{class:"token boolean"},"false"),p("span",{class:"token punctuation"},")"),p("span",{class:"token punctuation"},";"),l("\n"),p("span",{class:"token operator"},"<"),p("span",{class:"token operator"},"/"),l("script"),p("span",{class:"token operator"},">"),l("\n")])]),p("div",{class:"line-numbers-wrapper"},[p("span",{class:"line-number"},"1"),p("br"),p("span",{class:"line-number"},"2"),p("br"),p("span",{class:"line-number"},"3"),p("br"),p("span",{class:"line-number"},"4"),p("br"),p("span",{class:"line-number"},"5"),p("br"),p("span",{class:"line-number"},"6"),p("br"),p("span",{class:"line-number"},"7"),p("br"),p("span",{class:"line-number"},"8"),p("br"),p("span",{class:"line-number"},"9"),p("br"),p("span",{class:"line-number"},"10"),p("br"),p("span",{class:"line-number"},"11"),p("br"),p("span",{class:"line-number"},"12"),p("br"),p("span",{class:"line-number"},"13"),p("br"),p("span",{class:"line-number"},"14"),p("br"),p("span",{class:"line-number"},"15"),p("br"),p("span",{class:"line-number"},"16"),p("br"),p("span",{class:"line-number"},"17"),p("br"),p("span",{class:"line-number"},"18"),p("br"),p("span",{class:"line-number"},"19"),p("br"),p("span",{class:"line-number"},"20"),p("br")])],-1),f=p("p",null,"启动一个 Node 服务监听 save 请求。为了简化，用一个变量来保存用户的输入：",-1),S=p("div",{class:"language-js line-numbers-mode"},[p("pre",null,[p("code",null,[p("span",{class:"token keyword"},"const"),l(" http "),p("span",{class:"token operator"},"="),l(),p("span",{class:"token function"},"require"),p("span",{class:"token punctuation"},"("),p("span",{class:"token string"},"'http'"),p("span",{class:"token punctuation"},")"),p("span",{class:"token punctuation"},";"),l("\n\n"),p("span",{class:"token keyword"},"let"),l(" userInput "),p("span",{class:"token operator"},"="),l(),p("span",{class:"token string"},"''"),p("span",{class:"token punctuation"},";"),l("\n\n"),p("span",{class:"token keyword"},"function"),l(),p("span",{class:"token function"},"handleReequest"),p("span",{class:"token punctuation"},"("),p("span",{class:"token parameter"},[l("req"),p("span",{class:"token punctuation"},","),l(" res")]),p("span",{class:"token punctuation"},")"),l(),p("span",{class:"token punctuation"},"{"),l("\n    "),p("span",{class:"token keyword"},"const"),l(" method "),p("span",{class:"token operator"},"="),l(" req"),p("span",{class:"token punctuation"},"."),l("method"),p("span",{class:"token punctuation"},";"),l("\n    res"),p("span",{class:"token punctuation"},"."),p("span",{class:"token function"},"setHeader"),p("span",{class:"token punctuation"},"("),p("span",{class:"token string"},"'Access-Control-Allow-Origin'"),p("span",{class:"token punctuation"},","),l(),p("span",{class:"token string"},"'*'"),p("span",{class:"token punctuation"},")"),p("span",{class:"token punctuation"},";"),l("\n    res"),p("span",{class:"token punctuation"},"."),p("span",{class:"token function"},"setHeader"),p("span",{class:"token punctuation"},"("),p("span",{class:"token string"},"'Access-Control-Allow-Headers'"),p("span",{class:"token punctuation"},","),l(),p("span",{class:"token string"},"'Content-Type'"),p("span",{class:"token punctuation"},")"),l("\n\n    "),p("span",{class:"token keyword"},"if"),l(),p("span",{class:"token punctuation"},"("),l("method "),p("span",{class:"token operator"},"==="),l(),p("span",{class:"token string"},"'POST'"),l(),p("span",{class:"token operator"},"&&"),l(" req"),p("span",{class:"token punctuation"},"."),l("url "),p("span",{class:"token operator"},"==="),l(),p("span",{class:"token string"},"'/save'"),p("span",{class:"token punctuation"},")"),l(),p("span",{class:"token punctuation"},"{"),l("\n        "),p("span",{class:"token keyword"},"let"),l(" body "),p("span",{class:"token operator"},"="),l(),p("span",{class:"token string"},"''"),p("span",{class:"token punctuation"},";"),l("\n        req"),p("span",{class:"token punctuation"},"."),p("span",{class:"token function"},"on"),p("span",{class:"token punctuation"},"("),p("span",{class:"token string"},"'data'"),p("span",{class:"token punctuation"},","),l(),p("span",{class:"token parameter"},"chunk"),l(),p("span",{class:"token operator"},"=>"),l(),p("span",{class:"token punctuation"},"{"),l("\n            body "),p("span",{class:"token operator"},"+="),l(" chunk"),p("span",{class:"token punctuation"},";"),l("\n        "),p("span",{class:"token punctuation"},"}"),p("span",{class:"token punctuation"},")"),p("span",{class:"token punctuation"},";"),l("\n\n        req"),p("span",{class:"token punctuation"},"."),p("span",{class:"token function"},"on"),p("span",{class:"token punctuation"},"("),p("span",{class:"token string"},"'end'"),p("span",{class:"token punctuation"},","),l(),p("span",{class:"token punctuation"},"("),p("span",{class:"token punctuation"},")"),l(),p("span",{class:"token operator"},"=>"),l(),p("span",{class:"token punctuation"},"{"),l("\n            "),p("span",{class:"token keyword"},"if"),l(),p("span",{class:"token punctuation"},"("),l("body"),p("span",{class:"token punctuation"},")"),l(),p("span",{class:"token punctuation"},"{"),l("\n                userInput "),p("span",{class:"token operator"},"="),l(" body"),p("span",{class:"token punctuation"},";"),l("\n            "),p("span",{class:"token punctuation"},"}"),l("\n            res"),p("span",{class:"token punctuation"},"."),p("span",{class:"token function"},"end"),p("span",{class:"token punctuation"},"("),p("span",{class:"token punctuation"},")"),p("span",{class:"token punctuation"},";"),l("\n        "),p("span",{class:"token punctuation"},"}"),p("span",{class:"token punctuation"},")"),p("span",{class:"token punctuation"},";"),l("\n    "),p("span",{class:"token punctuation"},"}"),l(),p("span",{class:"token keyword"},"else"),l(),p("span",{class:"token punctuation"},"{"),l("\n        res"),p("span",{class:"token punctuation"},"."),p("span",{class:"token function"},"writeHead"),p("span",{class:"token punctuation"},"("),p("span",{class:"token number"},"200"),p("span",{class:"token punctuation"},","),l(),p("span",{class:"token punctuation"},"{"),p("span",{class:"token string"},"'Content-Type'"),p("span",{class:"token operator"},":"),l(),p("span",{class:"token string"},"'text/html; charset=UTF-8'"),p("span",{class:"token punctuation"},"}"),p("span",{class:"token punctuation"},")"),p("span",{class:"token punctuation"},";"),l("\n        res"),p("span",{class:"token punctuation"},"."),p("span",{class:"token function"},"write"),p("span",{class:"token punctuation"},"("),l("userInput"),p("span",{class:"token punctuation"},")"),p("span",{class:"token punctuation"},";"),l("\n        res"),p("span",{class:"token punctuation"},"."),p("span",{class:"token function"},"end"),p("span",{class:"token punctuation"},"("),p("span",{class:"token punctuation"},")"),p("span",{class:"token punctuation"},";"),l("\n    "),p("span",{class:"token punctuation"},"}"),l("\n"),p("span",{class:"token punctuation"},"}"),l("\n\n"),p("span",{class:"token keyword"},"const"),l(" server "),p("span",{class:"token operator"},"="),l(),p("span",{class:"token keyword"},"new"),l(),p("span",{class:"token class-name"},[l("http"),p("span",{class:"token punctuation"},"."),l("Server")]),p("span",{class:"token punctuation"},"("),p("span",{class:"token punctuation"},")"),p("span",{class:"token punctuation"},";"),l("\nserver"),p("span",{class:"token punctuation"},"."),p("span",{class:"token function"},"listen"),p("span",{class:"token punctuation"},"("),p("span",{class:"token number"},"8001"),p("span",{class:"token punctuation"},","),l(),p("span",{class:"token string"},"'127.0.0.1'"),p("span",{class:"token punctuation"},")"),p("span",{class:"token punctuation"},";"),l("\n\nserver"),p("span",{class:"token punctuation"},"."),p("span",{class:"token function"},"on"),p("span",{class:"token punctuation"},"("),p("span",{class:"token string"},"'request'"),p("span",{class:"token punctuation"},","),l(" handleReequest"),p("span",{class:"token punctuation"},")"),p("span",{class:"token punctuation"},";"),l("\n")])]),p("div",{class:"line-numbers-wrapper"},[p("span",{class:"line-number"},"1"),p("br"),p("span",{class:"line-number"},"2"),p("br"),p("span",{class:"line-number"},"3"),p("br"),p("span",{class:"line-number"},"4"),p("br"),p("span",{class:"line-number"},"5"),p("br"),p("span",{class:"line-number"},"6"),p("br"),p("span",{class:"line-number"},"7"),p("br"),p("span",{class:"line-number"},"8"),p("br"),p("span",{class:"line-number"},"9"),p("br"),p("span",{class:"line-number"},"10"),p("br"),p("span",{class:"line-number"},"11"),p("br"),p("span",{class:"line-number"},"12"),p("br"),p("span",{class:"line-number"},"13"),p("br"),p("span",{class:"line-number"},"14"),p("br"),p("span",{class:"line-number"},"15"),p("br"),p("span",{class:"line-number"},"16"),p("br"),p("span",{class:"line-number"},"17"),p("br"),p("span",{class:"line-number"},"18"),p("br"),p("span",{class:"line-number"},"19"),p("br"),p("span",{class:"line-number"},"20"),p("br"),p("span",{class:"line-number"},"21"),p("br"),p("span",{class:"line-number"},"22"),p("br"),p("span",{class:"line-number"},"23"),p("br"),p("span",{class:"line-number"},"24"),p("br"),p("span",{class:"line-number"},"25"),p("br"),p("span",{class:"line-number"},"26"),p("br"),p("span",{class:"line-number"},"27"),p("br"),p("span",{class:"line-number"},"28"),p("br"),p("span",{class:"line-number"},"29"),p("br"),p("span",{class:"line-number"},"30"),p("br"),p("span",{class:"line-number"},"31"),p("br"),p("span",{class:"line-number"},"32"),p("br")])],-1),w=p("p",null,[l("当用户点击提交按钮将输入信息提交到服务端时，服务端通过 userInput 变量保存了输入内容。当用户通过 "),p("a",{href:"http://localhost:8001/$%7Bid%7D",target:"_blank",rel:"noopener noreferrer"},"http://localhost:8001/${id}"),l(" 访问时，服务端会返回与 id 对应的内容(本示例简化了处理)。如果用户输入了恶意脚本内容，则其他用户访问该内容时，恶意脚本就会在浏览器端执行：")],-1),C=p("h3",{id:"基于dom",tabindex:"-1"},[l("基于DOM "),p("a",{class:"header-anchor",href:"#基于dom","aria-hidden":"true"},"#")],-1),_=p("p",null,"基于 DOM 的 XSS 攻击是指通过恶意脚本修改页面的 DOM 结构，是纯粹发生在客户端的攻击。",-1),v=p("p",null,"看如下代码：",-1),y=p("div",{class:"language-js line-numbers-mode"},[p("pre",null,[p("code",null,[p("span",{class:"token operator"},"<"),l("h2"),p("span",{class:"token operator"},">"),p("span",{class:"token constant"},"XSS"),p("span",{class:"token operator"},":"),l(),p("span",{class:"token operator"},"<"),p("span",{class:"token operator"},"/"),l("h2"),p("span",{class:"token operator"},">"),l("\n"),p("span",{class:"token operator"},"<"),l("input type"),p("span",{class:"token operator"},"="),p("span",{class:"token string"},'"text"'),l(" id"),p("span",{class:"token operator"},"="),p("span",{class:"token string"},'"input"'),p("span",{class:"token operator"},">"),l("\n"),p("span",{class:"token operator"},"<"),l("button id"),p("span",{class:"token operator"},"="),p("span",{class:"token string"},'"btn"'),p("span",{class:"token operator"},">"),l("Submit"),p("span",{class:"token operator"},"<"),p("span",{class:"token operator"},"/"),l("button"),p("span",{class:"token operator"},">"),l("\n"),p("span",{class:"token operator"},"<"),l("div id"),p("span",{class:"token operator"},"="),p("span",{class:"token string"},'"div"'),p("span",{class:"token operator"},">"),p("span",{class:"token operator"},"<"),p("span",{class:"token operator"},"/"),l("div"),p("span",{class:"token operator"},">"),l("\n"),p("span",{class:"token operator"},"<"),l("script"),p("span",{class:"token operator"},">"),l("\n    "),p("span",{class:"token keyword"},"const"),l(" input "),p("span",{class:"token operator"},"="),l(" document"),p("span",{class:"token punctuation"},"."),p("span",{class:"token function"},"getElementById"),p("span",{class:"token punctuation"},"("),p("span",{class:"token string"},"'input'"),p("span",{class:"token punctuation"},")"),p("span",{class:"token punctuation"},";"),l("\n    "),p("span",{class:"token keyword"},"const"),l(" btn "),p("span",{class:"token operator"},"="),l(" document"),p("span",{class:"token punctuation"},"."),p("span",{class:"token function"},"getElementById"),p("span",{class:"token punctuation"},"("),p("span",{class:"token string"},"'btn'"),p("span",{class:"token punctuation"},")"),p("span",{class:"token punctuation"},";"),l("\n    "),p("span",{class:"token keyword"},"const"),l(" div "),p("span",{class:"token operator"},"="),l(" document"),p("span",{class:"token punctuation"},"."),p("span",{class:"token function"},"getElementById"),p("span",{class:"token punctuation"},"("),p("span",{class:"token string"},"'div'"),p("span",{class:"token punctuation"},")"),p("span",{class:"token punctuation"},";"),l("\n\n    "),p("span",{class:"token keyword"},"let"),l(" val"),p("span",{class:"token punctuation"},";"),l("\n\n    input"),p("span",{class:"token punctuation"},"."),p("span",{class:"token function"},"addEventListener"),p("span",{class:"token punctuation"},"("),p("span",{class:"token string"},"'change'"),p("span",{class:"token punctuation"},","),l(),p("span",{class:"token punctuation"},"("),p("span",{class:"token parameter"},"e"),p("span",{class:"token punctuation"},")"),l(),p("span",{class:"token operator"},"=>"),l(),p("span",{class:"token punctuation"},"{"),l("\n        val "),p("span",{class:"token operator"},"="),l(" e"),p("span",{class:"token punctuation"},"."),l("target"),p("span",{class:"token punctuation"},"."),l("value"),p("span",{class:"token punctuation"},";"),l("\n    "),p("span",{class:"token punctuation"},"}"),p("span",{class:"token punctuation"},","),l(),p("span",{class:"token boolean"},"false"),p("span",{class:"token punctuation"},")"),p("span",{class:"token punctuation"},";"),l("\n\n    btn"),p("span",{class:"token punctuation"},"."),p("span",{class:"token function"},"addEventListener"),p("span",{class:"token punctuation"},"("),p("span",{class:"token string"},"'click'"),p("span",{class:"token punctuation"},","),l(),p("span",{class:"token punctuation"},"("),p("span",{class:"token punctuation"},")"),l(),p("span",{class:"token operator"},"=>"),l(),p("span",{class:"token punctuation"},"{"),l("\n        div"),p("span",{class:"token punctuation"},"."),l("innerHTML "),p("span",{class:"token operator"},"="),l(),p("span",{class:"token template-string"},[p("span",{class:"token template-punctuation string"},"`"),p("span",{class:"token string"},"<a href="),p("span",{class:"token interpolation"},[p("span",{class:"token interpolation-punctuation punctuation"},"${"),l("val"),p("span",{class:"token interpolation-punctuation punctuation"},"}")]),p("span",{class:"token string"},">testLink</a>"),p("span",{class:"token template-punctuation string"},"`")]),l("\n    "),p("span",{class:"token punctuation"},"}"),p("span",{class:"token punctuation"},","),l(),p("span",{class:"token boolean"},"false"),p("span",{class:"token punctuation"},")"),p("span",{class:"token punctuation"},";"),l("\n"),p("span",{class:"token operator"},"<"),p("span",{class:"token operator"},"/"),l("script"),p("span",{class:"token operator"},">"),l("\n")])]),p("div",{class:"line-numbers-wrapper"},[p("span",{class:"line-number"},"1"),p("br"),p("span",{class:"line-number"},"2"),p("br"),p("span",{class:"line-number"},"3"),p("br"),p("span",{class:"line-number"},"4"),p("br"),p("span",{class:"line-number"},"5"),p("br"),p("span",{class:"line-number"},"6"),p("br"),p("span",{class:"line-number"},"7"),p("br"),p("span",{class:"line-number"},"8"),p("br"),p("span",{class:"line-number"},"9"),p("br"),p("span",{class:"line-number"},"10"),p("br"),p("span",{class:"line-number"},"11"),p("br"),p("span",{class:"line-number"},"12"),p("br"),p("span",{class:"line-number"},"13"),p("br"),p("span",{class:"line-number"},"14"),p("br"),p("span",{class:"line-number"},"15"),p("br"),p("span",{class:"line-number"},"16"),p("br"),p("span",{class:"line-number"},"17"),p("br"),p("span",{class:"line-number"},"18"),p("br"),p("span",{class:"line-number"},"19"),p("br")])],-1),T=p("p",null,"点击 Submit 按钮后，会在当前页面插入一个链接，其地址为用户的输入内容。如果用户在输入时构造了如下内容：",-1),R=p("div",{class:"language-js line-numbers-mode"},[p("pre",null,[p("code",null,[p("span",{class:"token string"},"''"),l(" onclick"),p("span",{class:"token operator"},"="),p("span",{class:"token function"},"alert"),p("span",{class:"token punctuation"},"("),p("span",{class:"token regex"},[p("span",{class:"token regex-delimiter"},"/"),p("span",{class:"token regex-source language-regex"},"xss"),p("span",{class:"token regex-delimiter"},"/")]),p("span",{class:"token punctuation"},")"),l("\n")])]),p("div",{class:"line-numbers-wrapper"},[p("span",{class:"line-number"},"1"),p("br")])],-1),x=p("p",null,"用户提交之后，页面代码就变成了：",-1),A=p("div",{class:"language-js line-numbers-mode"},[p("pre",null,[p("code",null,[p("span",{class:"token operator"},"<"),l("a href onlick"),p("span",{class:"token operator"},"="),p("span",{class:"token string"},'"alert(/xss/)"'),p("span",{class:"token operator"},">"),l("testLink"),p("span",{class:"token operator"},"<"),p("span",{class:"token operator"},"/"),l("a"),p("span",{class:"token operator"},">"),l("\n")])]),p("div",{class:"line-numbers-wrapper"},[p("span",{class:"line-number"},"1"),p("br")])],-1),F=o('<h2 id="xss-攻击的防范" tabindex="-1">XSS 攻击的防范 <a class="header-anchor" href="#xss-攻击的防范" aria-hidden="true">#</a></h2><p>现在主流的浏览器内置了防范 XSS 的措施，例如 CSP。但对于开发者来说，也应该寻找可靠的解决方案来防止 XSS 攻击。</p><h3 id="httponly-防止劫取-cookie" tabindex="-1">HttpOnly 防止劫取 Cookie <a class="header-anchor" href="#httponly-防止劫取-cookie" aria-hidden="true">#</a></h3><p>HttpOnly 最早由微软提出，至今已经成为一个标准。浏览器将禁止页面的Javascript 访问带有 HttpOnly 属性的Cookie。</p><p>上文有说到，攻击者可以通过注入恶意脚本获取用户的 Cookie 信息。通常 Cookie 中都包含了用户的登录凭证信息，攻击者在获取到 Cookie 之后，则可以发起 Cookie 劫持攻击。所以，严格来说，HttpOnly 并非阻止 XSS 攻击，而是能阻止 XSS 攻击后的 Cookie 劫持攻击。</p><h3 id="输入检查" tabindex="-1">输入检查 <a class="header-anchor" href="#输入检查" aria-hidden="true">#</a></h3><p>不要相信用户的任何输入。 对于用户的任何输入要进行检查、过滤和转义。建立可信任的字符和 HTML 标签白名单，对于不在白名单之列的字符或者标签进行过滤或编码。</p><p>在 XSS 防御中，输入检查一般是检查用户输入的数据中是否包含 &lt;，&gt; 等特殊字符，如果存在，则对特殊字符进行过滤或编码，这种方式也称为 XSS Filter。</p><p>而在一些前端框架中，都会有一份 decodingMap， 用于对用户输入所包含的特殊字符或标签进行编码或过滤，如 &lt;，&gt;，script，防止 XSS 攻击：</p>',9),X=p("div",{class:"language-js line-numbers-mode"},[p("pre",null,[p("code",null,[p("span",{class:"token comment"},"// vuejs 中的 decodingMap"),l("\n"),p("span",{class:"token comment"},"// 在 vuejs 中，如果输入带 script 标签的内容，会直接过滤掉"),l("\n"),p("span",{class:"token keyword"},"const"),l(" decodingMap "),p("span",{class:"token operator"},"="),l(),p("span",{class:"token punctuation"},"{"),l("\n  "),p("span",{class:"token string"},"'&lt;'"),p("span",{class:"token operator"},":"),l(),p("span",{class:"token string"},"'<'"),p("span",{class:"token punctuation"},","),l("\n  "),p("span",{class:"token string"},"'&gt;'"),p("span",{class:"token operator"},":"),l(),p("span",{class:"token string"},"'>'"),p("span",{class:"token punctuation"},","),l("\n  "),p("span",{class:"token string"},"'&quot;'"),p("span",{class:"token operator"},":"),l(),p("span",{class:"token string"},"'\"'"),p("span",{class:"token punctuation"},","),l("\n  "),p("span",{class:"token string"},"'&amp;'"),p("span",{class:"token operator"},":"),l(),p("span",{class:"token string"},"'&'"),p("span",{class:"token punctuation"},","),l("\n  "),p("span",{class:"token string"},"'&#10;'"),p("span",{class:"token operator"},":"),l(),p("span",{class:"token string"},"'\\n'"),l("\n"),p("span",{class:"token punctuation"},"}"),l("\n")])]),p("div",{class:"line-numbers-wrapper"},[p("span",{class:"line-number"},"1"),p("br"),p("span",{class:"line-number"},"2"),p("br"),p("span",{class:"line-number"},"3"),p("br"),p("span",{class:"line-number"},"4"),p("br"),p("span",{class:"line-number"},"5"),p("br"),p("span",{class:"line-number"},"6"),p("br"),p("span",{class:"line-number"},"7"),p("br"),p("span",{class:"line-number"},"8"),p("br"),p("span",{class:"line-number"},"9"),p("br")])],-1),q=o('<h3 id="输出检查" tabindex="-1">输出检查 <a class="header-anchor" href="#输出检查" aria-hidden="true">#</a></h3><p>用户的输入会存在问题，服务端的输出也会存在问题。一般来说，除富文本的输出外，在变量输出到 HTML 页面时，可以使用编码或转义的方式来防御 XSS 攻击。例如利用 sanitize-html 对输出内容进行有规则的过滤之后再输出到页面中。</p><h2 id="csrf" tabindex="-1">CSRF <a class="header-anchor" href="#csrf" aria-hidden="true">#</a></h2><p>CSRF，即 Cross Site Request Forgery，中译是跨站请求伪造，是一种劫持受信任用户向服务器发送非预期请求的攻击方式。</p><p>通常情况下，CSRF 攻击是攻击者借助受害者的 Cookie 骗取服务器的信任，可以在受害者毫不知情的情况下以受害者名义伪造请求发送给受攻击服务器，从而在并未授权的情况下执行在权限保护之下的操作。</p><p>在举例子之前，先说说浏览器的 Cookie 策略。</p><h2 id="浏览器的-cookie-策略" tabindex="-1">浏览器的 Cookie 策略 <a class="header-anchor" href="#浏览器的-cookie-策略" aria-hidden="true">#</a></h2><p>Cookie 是服务器发送到用户浏览器并保存在本地的一小块数据，它会在浏览器下次向同一服务器再发起请求时被携带并发送到服务器上。Cookie 主要用于以下方面：</p><ul><li>会话状态管理（如用户登录状态、购物车、游戏分数或其它需要记录的信息）</li><li>个性化设置（如用户自定义设置、主题等）</li></ul><p>而浏览器所持有的 Cookie 分为两种：</p><ul><li>Session Cookie(会话期 Cookie)：会话期 Cookie 是最简单的Cookie，它不需要指定过期时间（Expires）或者有效期（Max-Age），它仅在会话期内有效，浏览器关闭之后它会被自动删除。</li><li>Permanent Cookie(持久性 Cookie)：与会话期 Cookie 不同的是，持久性 Cookie 可以指定一个特定的过期时间（Expires）或有效期（Max-Age）。</li></ul>',11),H=p("div",{class:"language-js line-numbers-mode"},[p("pre",null,[p("code",null,[l("es"),p("span",{class:"token punctuation"},"."),p("span",{class:"token function"},"setHeader"),p("span",{class:"token punctuation"},"("),p("span",{class:"token string"},"'Set-Cookie'"),p("span",{class:"token punctuation"},","),l(),p("span",{class:"token punctuation"},"["),p("span",{class:"token string"},"'mycookie=222'"),p("span",{class:"token punctuation"},","),l(),p("span",{class:"token string"},"'test=3333; expires=Sat, 21 Jul 2018 00:00:00 GMT;'"),p("span",{class:"token punctuation"},"]"),p("span",{class:"token punctuation"},")"),p("span",{class:"token punctuation"},";"),l("\n")])]),p("div",{class:"line-numbers-wrapper"},[p("span",{class:"line-number"},"1"),p("br")])],-1),I=p("p",null,"上述代码创建了两个 Cookie：mycookie 和 test，前者属于会话期 Cookie，后者则属于持久性 Cookie。当我们去查看 Cookie 相关的属性时，不同的浏览器对会话期 Cookie 的 Expires 属性值会不一样：",-1),P=p("p",null,"此外，每个 Cookie 都会有与之关联的域，这个域的范围一般通过 donmain 属性指定。如果 Cookie 的域和页面的域相同，那么我们称这个 Cookie 为第一方 Cookie（first-party cookie），如果 Cookie 的域和页面的域不同，则称之为第三方 Cookie（third-party cookie）。一个页面包含图片或存放在其他域上的资源（如图片）时，第一方的 Cookie 也只会发送给设置它们的服务器。",-1),E=p("p",null,[l("通过 Cookie 进行 CSRF 攻击 假设有一个 bbs 站点："),p("a",{href:"http://www.c.com",target:"_blank",rel:"noopener noreferrer"},"http://www.c.com"),l("，当登录后的用户发起如下 GET 请求时，会删除 ID 指定的帖子：")],-1),M=p("div",{class:"language-js line-numbers-mode"},[p("pre",null,[p("code",null,[l("http"),p("span",{class:"token operator"},":"),p("span",{class:"token operator"},"/"),p("span",{class:"token operator"},"/"),l("www"),p("span",{class:"token punctuation"},"."),l("c"),p("span",{class:"token punctuation"},"."),l("com"),p("span",{class:"token operator"},":"),p("span",{class:"token number"},"8002"),p("span",{class:"token operator"},"/"),l("content"),p("span",{class:"token operator"},"/"),p("span",{class:"token keyword"},"delete"),p("span",{class:"token operator"},"/"),p("span",{class:"token operator"},":"),l("id\n")])]),p("div",{class:"line-numbers-wrapper"},[p("span",{class:"line-number"},"1"),p("br")])],-1),O=p("p",null,[l("如发起 "),p("a",{href:"http://www.c.com:8002/content/delete/87343",target:"_blank",rel:"noopener noreferrer"},"http://www.c.com:8002/content/delete/87343"),l(" 请求时，会删除 id 为 87343 的帖子。当用户登录之后，会设置如下 cookie：")],-1),j=p("div",{class:"language-js line-numbers-mode"},[p("pre",null,[p("code",null,[l("res"),p("span",{class:"token punctuation"},"."),p("span",{class:"token function"},"setHeader"),p("span",{class:"token punctuation"},"("),p("span",{class:"token string"},"'Set-Cookie'"),p("span",{class:"token punctuation"},","),l(),p("span",{class:"token punctuation"},"["),p("span",{class:"token string"},"'user=22333; expires=Sat, 21 Jul 2018 00:00:00 GMT;'"),p("span",{class:"token punctuation"},"]"),p("span",{class:"token punctuation"},")"),p("span",{class:"token punctuation"},";"),l("\n")])]),p("div",{class:"line-numbers-wrapper"},[p("span",{class:"line-number"},"1"),p("br")])],-1),D=p("p",null,"user 对应的值是用户 ID。然后构造一个页面 A：",-1),L=p("div",{class:"language-js line-numbers-mode"},[p("pre",null,[p("code",null,[p("span",{class:"token operator"},"<"),l("p"),p("span",{class:"token operator"},">"),p("span",{class:"token constant"},"CSRF"),l(" 攻击者准备的网站："),p("span",{class:"token operator"},"<"),p("span",{class:"token operator"},"/"),l("p"),p("span",{class:"token operator"},">"),l("\n"),p("span",{class:"token operator"},"<"),l("img src"),p("span",{class:"token operator"},"="),p("span",{class:"token string"},'"http://www.c.com:8002/content/delete/87343"'),p("span",{class:"token operator"},">"),l("\n")])]),p("div",{class:"line-numbers-wrapper"},[p("span",{class:"line-number"},"1"),p("br"),p("span",{class:"line-number"},"2"),p("br")])],-1),V=o('<p>页面 A 使用了一个 img 标签，其地址指向了删除用户帖子的链接：</p><p>可以看到，当登录用户访问攻击者的网站时，会向 <a href="http://www.c.com" target="_blank" rel="noopener noreferrer">www.c.com</a> 发起一个删除用户帖子的请求。此时若用户在切换到 <a href="http://www.c.com" target="_blank" rel="noopener noreferrer">www.c.com</a> 的帖子页面刷新，会发现ID 为 87343 的帖子已经被删除。</p><p>由于 Cookie 中包含了用户的认证信息，当用户访问攻击者准备的攻击环境时，攻击者就可以对服务器发起 CSRF 攻击。在这个攻击过程中，攻击者借助受害者的 Cookie 骗取服务器的信任，但并不能拿到 Cookie，也看不到 Cookie 的内容。而对于服务器返回的结果，由于浏览器同源策略的限制，攻击者也无法进行解析。因此，攻击者无法从返回的结果中得到任何东西，他所能做的就是给服务器发送请求，以执行请求中所描述的命令，在服务器端直接改变数据的值，而非窃取服务器中的数据。</p><p>但若 CSRF 攻击的目标并不需要使用 Cookie，则也不必顾虑浏览器的 Cookie 策略了。</p><h2 id="csrf-攻击的防范" tabindex="-1">CSRF 攻击的防范 <a class="header-anchor" href="#csrf-攻击的防范" aria-hidden="true">#</a></h2><p>当前，对 CSRF 攻击的防范措施主要有如下几种方式。</p><h3 id="验证码" tabindex="-1">验证码 <a class="header-anchor" href="#验证码" aria-hidden="true">#</a></h3><p>验证码被认为是对抗 CSRF 攻击最简洁而有效的防御方法。</p><p>从上述示例中可以看出，CSRF 攻击往往是在用户不知情的情况下构造了网络请求。而验证码会强制用户必须与应用进行交互，才能完成最终请求。因为通常情况下，验证码能够很好地遏制 CSRF 攻击。</p><p>但验证码并不是万能的，因为出于用户考虑，不能给网站所有的操作都加上验证码。因此，验证码只能作为防御 CSRF 的一种辅助手段，而不能作为最主要的解决方案。</p><h3 id="referer-check" tabindex="-1">Referer Check <a class="header-anchor" href="#referer-check" aria-hidden="true">#</a></h3><p>根据 HTTP 协议，在 HTTP 头中有一个字段叫 Referer，它记录了该 HTTP 请求的来源地址。通过 Referer Check，可以检查请求是否来自合法的&quot;源&quot;。</p><p>比如，如果用户要删除自己的帖子，那么先要登录 <a href="http://www.c.com" target="_blank" rel="noopener noreferrer">www.c.com</a>，然后找到对应的页面，发起删除帖子的请求。此时，Referer 的值是 <a href="http://www.c.com" target="_blank" rel="noopener noreferrer">http://www.c.com</a>；当请求是从 <a href="http://www.a.com" target="_blank" rel="noopener noreferrer">www.a.com</a> 发起时，Referer 的值是 <a href="http://www.a.com" target="_blank" rel="noopener noreferrer">http://www.a.com</a> 了。因此，要防御 CSRF 攻击，只需要对于每一个删帖请求验证其 Referer 值，如果是以 <a href="http://www.c.com" target="_blank" rel="noopener noreferrer">www.c.com</a> 开头的域名，则说明该请求是来自网站自己的请求，是合法的。如果 Referer 是其他网站的话，则有可能是 CSRF 攻击，可以拒绝该请求。</p>',13),N=p("div",{class:"language-js line-numbers-mode"},[p("pre",null,[p("code",null,[p("span",{class:"token keyword"},"if"),l(),p("span",{class:"token punctuation"},"("),l("req"),p("span",{class:"token punctuation"},"."),l("headers"),p("span",{class:"token punctuation"},"."),l("referer "),p("span",{class:"token operator"},"!=="),l(),p("span",{class:"token string"},"'http://www.c.com:8002/'"),p("span",{class:"token punctuation"},")"),l(),p("span",{class:"token punctuation"},"{"),l("\n    res"),p("span",{class:"token punctuation"},"."),p("span",{class:"token function"},"write"),p("span",{class:"token punctuation"},"("),p("span",{class:"token string"},"'csrf 攻击'"),p("span",{class:"token punctuation"},")"),p("span",{class:"token punctuation"},";"),l("\n    "),p("span",{class:"token keyword"},"return"),p("span",{class:"token punctuation"},";"),l("\n"),p("span",{class:"token punctuation"},"}"),l("\n")])]),p("div",{class:"line-numbers-wrapper"},[p("span",{class:"line-number"},"1"),p("br"),p("span",{class:"line-number"},"2"),p("br"),p("span",{class:"line-number"},"3"),p("br"),p("span",{class:"line-number"},"4"),p("br")])],-1),B=o('<blockquote><p>Referer Check 不仅能防范 CSRF 攻击，另一个应用场景是 &quot;防止图片盗链&quot;。</p></blockquote><h3 id="添加-token-验证" tabindex="-1">添加 token 验证 <a class="header-anchor" href="#添加-token-验证" aria-hidden="true">#</a></h3><p>CSRF 攻击之所以能够成功，是因为攻击者可以完全伪造用户的请求，该请求中所有的用户验证信息都是存在于 Cookie 中，因此攻击者可以在不知道这些验证信息的情况下直接利用用户自己的 Cookie 来通过安全验证。要抵御 CSRF，关键在于在请求中放入攻击者所不能伪造的信息，并且该信息不存在于 Cookie 之中。可以在 HTTP 请求中以参数的形式加入一个随机产生的 token，并在服务器端建立一个拦截器来验证这个 token，如果请求中没有 token 或者 token 内容不正确，则认为可能是 CSRF 攻击而拒绝该请求。</p><h2 id="总结" tabindex="-1">总结 <a class="header-anchor" href="#总结" aria-hidden="true">#</a></h2><p>本文主要介绍了 XSS 和 CSRF 的攻击原理和防御措施。当然，在 Web 安全领域，除了这两种常见的攻击方式，也存在这 SQL 注入等其它攻击方式，这不在本文的讨论范围之内，如果你对其感兴趣，可以阅读SQL注入技术专题的专栏详细了解相关信息。最后，总结一下 XSS 攻击和 CSRF 攻击的常见防御措施：</p><ul><li>防御 XSS 攻击 <ul><li>HttpOnly 防止劫取 Cookie</li><li>用户的输入检查</li><li>服务端的输出检查</li></ul></li><li>防御 CSRF 攻击 <ul><li>验证码</li><li>Referer Check</li><li>Token 验证</li></ul></li></ul><p>来源：<a href="https://github.com/dwqs/blog/issues/68" target="_blank" rel="noopener noreferrer">https://github.com/dwqs/blog/issues/68</a></p>',7);var J=n(i,[["render",function(n,o,p,l,r,i){const J=s("code-block");return c(),a("div",null,[u,e(J,{showAction:!1},{default:t((()=>[k])),_:1}),b,d,m,h,e(J,{showAction:!1},{default:t((()=>[g])),_:1}),f,e(J,{showAction:!1},{default:t((()=>[S])),_:1}),w,C,_,v,e(J,{showAction:!1},{default:t((()=>[y])),_:1}),T,e(J,{showAction:!1},{default:t((()=>[R])),_:1}),x,e(J,{showAction:!1},{default:t((()=>[A])),_:1}),F,e(J,{showAction:!1},{default:t((()=>[X])),_:1}),q,e(J,{showAction:!1},{default:t((()=>[H])),_:1}),I,P,E,e(J,{showAction:!1},{default:t((()=>[M])),_:1}),O,e(J,{showAction:!1},{default:t((()=>[j])),_:1}),D,e(J,{showAction:!1},{default:t((()=>[L])),_:1}),V,e(J,{showAction:!1},{default:t((()=>[N])),_:1}),B])}]]);export{r as __pageData,J as default};
