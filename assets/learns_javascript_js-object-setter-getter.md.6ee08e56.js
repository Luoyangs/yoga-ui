import{_ as n,r as s,c as a,a as t,w as e,f as o,e as c,b as p,o as l}from"./app.74c3daae.js";const u='{"title":"关于Object的getter和setter","description":"","frontmatter":{},"headers":[{"level":2,"title":"Object的getter，setter","slug":"object的getter，setter"},{"level":2,"title":"Object.prototype._defineGetter和Object.prototype.defineSetter_","slug":"object-prototype-definegetter-和object-prototype-definesetter"},{"level":2,"title":"Object.defineProperty","slug":"object-defineproperty"},{"level":2,"title":"分析","slug":"分析"},{"level":2,"title":"修正","slug":"修正"}],"relativePath":"learns/javascript/js-object-setter-getter.md","lastUpdated":1635388499005}',i={},r=o('<p><div class="table-of-contents"><ul><li><a href="#object的getter，setter">Object的getter，setter</a></li><li><a href="#object-prototype-definegetter-和object-prototype-definesetter">Object.prototype._defineGetter_和Object.prototype.defineSetter</a></li><li><a href="#object-defineproperty">Object.defineProperty</a></li><li><a href="#分析">分析</a></li><li><a href="#修正">修正</a></li></ul></div></p><h1 id="关于object的getter和setter" tabindex="-1">关于Object的getter和setter <a class="header-anchor" href="#关于object的getter和setter" aria-hidden="true">#</a></h1><p>对于对象o有N个属性，不修改下面代码，编写一段程序获取到对象o的所有属性</p>',3),k=c("div",{class:"language-js line-numbers-mode"},[c("pre",null,[c("code",null,[c("span",{class:"token keyword"},"var"),p(" foo "),c("span",{class:"token operator"},"="),p(),c("span",{class:"token punctuation"},"("),c("span",{class:"token keyword"},"function"),c("span",{class:"token punctuation"},"("),c("span",{class:"token punctuation"},")"),c("span",{class:"token punctuation"},"{"),p("\n  "),c("span",{class:"token keyword"},"var"),p(" o "),c("span",{class:"token operator"},"="),p(),c("span",{class:"token punctuation"},"{"),p("\n    a"),c("span",{class:"token operator"},":"),p(),c("span",{class:"token number"},"1"),c("span",{class:"token punctuation"},","),p("\n    b"),c("span",{class:"token operator"},":"),p(),c("span",{class:"token number"},"2"),c("span",{class:"token punctuation"},","),p("\n    "),c("span",{class:"token comment"},"/**更多属性**/"),p("\n  "),c("span",{class:"token punctuation"},"}"),c("span",{class:"token punctuation"},";"),p("\n  "),c("span",{class:"token keyword"},"return"),p(),c("span",{class:"token keyword"},"function"),c("span",{class:"token punctuation"},"("),c("span",{class:"token parameter"},"key"),c("span",{class:"token punctuation"},")"),p(),c("span",{class:"token punctuation"},"{"),p("\n    "),c("span",{class:"token keyword"},"return"),p(" o"),c("span",{class:"token punctuation"},"["),p("key"),c("span",{class:"token punctuation"},"]"),c("span",{class:"token punctuation"},";"),p("\n  "),c("span",{class:"token punctuation"},"}"),p("\n"),c("span",{class:"token punctuation"},"}"),c("span",{class:"token punctuation"},")"),c("span",{class:"token punctuation"},"("),c("span",{class:"token punctuation"},")"),c("span",{class:"token punctuation"},";"),p("\n")])]),c("div",{class:"line-numbers-wrapper"},[c("span",{class:"line-number"},"1"),c("br"),c("span",{class:"line-number"},"2"),c("br"),c("span",{class:"line-number"},"3"),c("br"),c("span",{class:"line-number"},"4"),c("br"),c("span",{class:"line-number"},"5"),c("br"),c("span",{class:"line-number"},"6"),c("br"),c("span",{class:"line-number"},"7"),c("br"),c("span",{class:"line-number"},"8"),c("br"),c("span",{class:"line-number"},"9"),c("br"),c("span",{class:"line-number"},"10"),c("br")])],-1),b=c("p",null,"对象o只是函数作用域中的一个局部变量，而对外提供的唯一接口foo(key)可以获取到对象o单独的某个key对应的value，如：foo('a')返回1。但是这里要求获取一个未知属性个数对象o的所有属性。",-1),d=c("p",null,"在解题之前先来了解一下解析需要用到的技术。",-1),m=c("h2",{id:"object的getter，setter",tabindex:"-1"},[p("Object的getter，setter "),c("a",{class:"header-anchor",href:"#object的getter，setter","aria-hidden":"true"},"#")],-1),f=c("p",null,"在javascript中，对象有两个特殊的“属性”。这两个东西可以分别给对象的某个属性进行监听，在获取/设置该对象的该属性的时候执行某些事件，就像DOM中的事件监听一样，能够在你单击/双击/...各种操作的时候执行该方法，并且在这个函数中的this指向该对象。话不多说，直接上代码：",-1),y=c("div",{class:"language-js line-numbers-mode"},[c("pre",null,[c("code",null,[c("span",{class:"token keyword"},"var"),p(" test "),c("span",{class:"token operator"},"="),p(),c("span",{class:"token punctuation"},"{"),p("\n  "),c("span",{class:"token keyword"},"get"),p(),c("span",{class:"token function"},"o"),c("span",{class:"token punctuation"},"("),c("span",{class:"token punctuation"},")"),c("span",{class:"token punctuation"},"{"),p("\n    console"),c("span",{class:"token punctuation"},"."),c("span",{class:"token function"},"log"),c("span",{class:"token punctuation"},"("),c("span",{class:"token string"},"'监听到正在获取属性o的值'"),c("span",{class:"token punctuation"},")"),c("span",{class:"token punctuation"},";"),p("\n    "),c("span",{class:"token keyword"},"return"),p(),c("span",{class:"token keyword"},"this"),c("span",{class:"token punctuation"},"."),p("_o"),c("span",{class:"token punctuation"},";"),p("\n  "),c("span",{class:"token punctuation"},"}"),c("span",{class:"token punctuation"},","),p("\n  "),c("span",{class:"token keyword"},"set"),p(),c("span",{class:"token function"},"o"),c("span",{class:"token punctuation"},"("),c("span",{class:"token parameter"},"v"),c("span",{class:"token punctuation"},")"),c("span",{class:"token punctuation"},"{"),p("\n    console"),c("span",{class:"token punctuation"},"."),c("span",{class:"token function"},"log"),c("span",{class:"token punctuation"},"("),c("span",{class:"token string"},"'监听到正在设置属性o的值为：'"),p(),c("span",{class:"token operator"},"+"),p(" v"),c("span",{class:"token punctuation"},")"),c("span",{class:"token punctuation"},";"),p("\n    "),c("span",{class:"token keyword"},"this"),c("span",{class:"token punctuation"},"."),p("_o "),c("span",{class:"token operator"},"="),p(" v"),c("span",{class:"token punctuation"},";"),p("\n    "),c("span",{class:"token keyword"},"return"),p(),c("span",{class:"token keyword"},"this"),c("span",{class:"token punctuation"},"."),p("_o"),c("span",{class:"token punctuation"},";"),p("\n  "),c("span",{class:"token punctuation"},"}"),p("\n"),c("span",{class:"token punctuation"},"}"),p("\n\ntest"),c("span",{class:"token punctuation"},"."),p("o "),c("span",{class:"token operator"},"="),p(),c("span",{class:"token number"},"14"),c("span",{class:"token punctuation"},";"),p(),c("span",{class:"token comment"},"// 监听到正在设置属性o的值为：14"),p("\nconsole"),c("span",{class:"token punctuation"},"."),c("span",{class:"token function"},"log"),c("span",{class:"token punctuation"},"("),p("test"),c("span",{class:"token punctuation"},"."),p("o"),c("span",{class:"token punctuation"},")"),c("span",{class:"token punctuation"},";"),p(),c("span",{class:"token comment"},"// 监听到正在获取属性o的值"),p("\n")])]),c("div",{class:"line-numbers-wrapper"},[c("span",{class:"line-number"},"1"),c("br"),c("span",{class:"line-number"},"2"),c("br"),c("span",{class:"line-number"},"3"),c("br"),c("span",{class:"line-number"},"4"),c("br"),c("span",{class:"line-number"},"5"),c("br"),c("span",{class:"line-number"},"6"),c("br"),c("span",{class:"line-number"},"7"),c("br"),c("span",{class:"line-number"},"8"),c("br"),c("span",{class:"line-number"},"9"),c("br"),c("span",{class:"line-number"},"10"),c("br"),c("span",{class:"line-number"},"11"),c("br"),c("span",{class:"line-number"},"12"),c("br"),c("span",{class:"line-number"},"13"),c("br"),c("span",{class:"line-number"},"14"),c("br")])],-1),g=c("p",null,"可以看到，结果完全如预期所料。这里用_o为了避免在set的时候会设置属性o然后set方法就会无限循环的执行导致崩溃报错。看到这里或者会说，这个和题目有几毛钱的关系，别急，接着看getter和setter的另外两种声明方式。",-1),h=c("h2",{id:"object-prototype-definegetter-和object-prototype-definesetter",tabindex:"-1"},[p("Object.prototype.__defineGetter__和Object.prototype."),c("strong",null,"defineSetter"),p(),c("a",{class:"header-anchor",href:"#object-prototype-definegetter-和object-prototype-definesetter","aria-hidden":"true"},"#")],-1),j=c("p",null,"上面的声明方式无法对已经存在的对象进行getter和setter“属性”的添加，只能在对象声明的时候设置。",-1),w=c("div",{class:"language-js line-numbers-mode"},[c("pre",null,[c("code",null,[c("span",{class:"token keyword"},"var"),p(" test "),c("span",{class:"token operator"},"="),p(),c("span",{class:"token punctuation"},"{"),c("span",{class:"token punctuation"},"}"),c("span",{class:"token punctuation"},";"),p("\n\ntest"),c("span",{class:"token punctuation"},"."),c("span",{class:"token function"},"__defineGetter__"),c("span",{class:"token punctuation"},"("),c("span",{class:"token string"},"'o'"),c("span",{class:"token punctuation"},","),p(),c("span",{class:"token keyword"},"function"),c("span",{class:"token punctuation"},"("),c("span",{class:"token punctuation"},")"),c("span",{class:"token punctuation"},"{"),p("\n  console"),c("span",{class:"token punctuation"},"."),c("span",{class:"token function"},"log"),c("span",{class:"token punctuation"},"("),c("span",{class:"token string"},"'监听到正在获取属性o的值'"),c("span",{class:"token punctuation"},")"),c("span",{class:"token punctuation"},";"),p("\n  "),c("span",{class:"token keyword"},"return"),p(),c("span",{class:"token keyword"},"this"),c("span",{class:"token punctuation"},"."),p("_o"),c("span",{class:"token punctuation"},";"),p("\n"),c("span",{class:"token punctuation"},"}"),c("span",{class:"token punctuation"},")"),c("span",{class:"token punctuation"},";"),p("\n\ntest"),c("span",{class:"token punctuation"},"."),c("span",{class:"token function"},"__defineSetter__"),c("span",{class:"token punctuation"},"("),c("span",{class:"token string"},"'o'"),c("span",{class:"token punctuation"},","),p(),c("span",{class:"token keyword"},"function"),c("span",{class:"token punctuation"},"("),c("span",{class:"token parameter"},"v"),c("span",{class:"token punctuation"},")"),c("span",{class:"token punctuation"},"{"),p("\n  console"),c("span",{class:"token punctuation"},"."),c("span",{class:"token function"},"log"),c("span",{class:"token punctuation"},"("),c("span",{class:"token string"},"'监听到正在设置属性o的值为：'"),p(),c("span",{class:"token operator"},"+"),p(" v"),c("span",{class:"token punctuation"},")"),c("span",{class:"token punctuation"},";"),p("\n  "),c("span",{class:"token keyword"},"this"),c("span",{class:"token punctuation"},"."),p("_o "),c("span",{class:"token operator"},"="),p(" v"),c("span",{class:"token punctuation"},";"),p("\n  "),c("span",{class:"token keyword"},"return"),p(),c("span",{class:"token keyword"},"this"),c("span",{class:"token punctuation"},"."),p("_o"),c("span",{class:"token punctuation"},";"),p("\n"),c("span",{class:"token punctuation"},"}"),c("span",{class:"token punctuation"},")"),c("span",{class:"token punctuation"},";"),p("\n\ntest"),c("span",{class:"token punctuation"},"."),p("o "),c("span",{class:"token operator"},"="),p(),c("span",{class:"token number"},"14"),c("span",{class:"token punctuation"},";"),p(),c("span",{class:"token comment"},"// 监听到正在设置属性o的值为：14"),p("\nconsole"),c("span",{class:"token punctuation"},"."),c("span",{class:"token function"},"log"),c("span",{class:"token punctuation"},"("),p("test"),c("span",{class:"token punctuation"},"."),p("o"),c("span",{class:"token punctuation"},")"),c("span",{class:"token punctuation"},";"),p(),c("span",{class:"token comment"},"// 监听到正在获取属性o的值"),p("\n")])]),c("div",{class:"line-numbers-wrapper"},[c("span",{class:"line-number"},"1"),c("br"),c("span",{class:"line-number"},"2"),c("br"),c("span",{class:"line-number"},"3"),c("br"),c("span",{class:"line-number"},"4"),c("br"),c("span",{class:"line-number"},"5"),c("br"),c("span",{class:"line-number"},"6"),c("br"),c("span",{class:"line-number"},"7"),c("br"),c("span",{class:"line-number"},"8"),c("br"),c("span",{class:"line-number"},"9"),c("br"),c("span",{class:"line-number"},"10"),c("br"),c("span",{class:"line-number"},"11"),c("br"),c("span",{class:"line-number"},"12"),c("br"),c("span",{class:"line-number"},"13"),c("br"),c("span",{class:"line-number"},"14"),c("br"),c("span",{class:"line-number"},"15"),c("br")])],-1),v=c("div",{class:"warning custom-block"},[c("p",{class:"custom-block-title"},"WARNING"),c("p",null,"但是，这两种方法已经不推荐使用，而且随着浏览器更新会慢慢抛弃不再支持这两种写法。这里提出来只是阔展一下视野的。")],-1),_=c("h2",{id:"object-defineproperty",tabindex:"-1"},[p("Object.defineProperty "),c("a",{class:"header-anchor",href:"#object-defineproperty","aria-hidden":"true"},"#")],-1),O=c("p",null,"给对象添加对象属性特性描述，主要就是是否可枚举修改删除设置等以及value/getter/setter等设置，其他就不多说，再说就走远了，来看看getter/setter的使用：",-1),A=c("div",{class:"language-js line-numbers-mode"},[c("pre",null,[c("code",null,[c("span",{class:"token keyword"},"var"),p(" test "),c("span",{class:"token operator"},"="),p(),c("span",{class:"token punctuation"},"{"),c("span",{class:"token punctuation"},"}"),c("span",{class:"token punctuation"},";"),p("\nObject"),c("span",{class:"token punctuation"},"."),c("span",{class:"token function"},"defineProperty"),c("span",{class:"token punctuation"},"("),p("test"),c("span",{class:"token punctuation"},","),p(),c("span",{class:"token string"},"'o'"),c("span",{class:"token punctuation"},","),p(),c("span",{class:"token punctuation"},"{"),p("\n  "),c("span",{class:"token function"},"get"),c("span",{class:"token punctuation"},"("),c("span",{class:"token punctuation"},")"),p(),c("span",{class:"token punctuation"},"{"),p("\n    console"),c("span",{class:"token punctuation"},"."),c("span",{class:"token function"},"log"),c("span",{class:"token punctuation"},"("),c("span",{class:"token string"},"'监听到正在获取属性o的值'"),c("span",{class:"token punctuation"},")"),c("span",{class:"token punctuation"},";"),p("\n    "),c("span",{class:"token keyword"},"return"),p(),c("span",{class:"token keyword"},"this"),c("span",{class:"token punctuation"},"."),p("_o"),c("span",{class:"token punctuation"},";"),p("\n  "),c("span",{class:"token punctuation"},"}"),c("span",{class:"token punctuation"},","),p("\n  "),c("span",{class:"token function"},"set"),c("span",{class:"token punctuation"},"("),p("v"),c("span",{class:"token punctuation"},")"),p(),c("span",{class:"token punctuation"},"{"),p("\n    console"),c("span",{class:"token punctuation"},"."),c("span",{class:"token function"},"log"),c("span",{class:"token punctuation"},"("),c("span",{class:"token string"},"'监听到正在设置属性o的值为：'"),p(),c("span",{class:"token operator"},"+"),p(" v"),c("span",{class:"token punctuation"},")"),c("span",{class:"token punctuation"},";"),p("\n    "),c("span",{class:"token keyword"},"this"),c("span",{class:"token punctuation"},"."),p("_o "),c("span",{class:"token operator"},"="),p(" v"),c("span",{class:"token punctuation"},";"),p("\n    "),c("span",{class:"token keyword"},"return"),p(),c("span",{class:"token keyword"},"this"),c("span",{class:"token punctuation"},"."),p("_o"),c("span",{class:"token punctuation"},";"),p("\n  "),c("span",{class:"token punctuation"},"}"),p("\n"),c("span",{class:"token punctuation"},"}"),c("span",{class:"token punctuation"},")"),c("span",{class:"token punctuation"},";"),p("\n\ntest"),c("span",{class:"token punctuation"},"."),p("o "),c("span",{class:"token operator"},"="),p(),c("span",{class:"token number"},"14"),c("span",{class:"token punctuation"},";"),p(),c("span",{class:"token comment"},"// 监听到正在设置属性o的值为：14"),p("\nconsole"),c("span",{class:"token punctuation"},"."),c("span",{class:"token function"},"log"),c("span",{class:"token punctuation"},"("),p("test"),c("span",{class:"token punctuation"},"."),p("o"),c("span",{class:"token punctuation"},")"),c("span",{class:"token punctuation"},";"),p(),c("span",{class:"token comment"},"// 监听到正在获取属性o的值"),p("\n")])]),c("div",{class:"line-numbers-wrapper"},[c("span",{class:"line-number"},"1"),c("br"),c("span",{class:"line-number"},"2"),c("br"),c("span",{class:"line-number"},"3"),c("br"),c("span",{class:"line-number"},"4"),c("br"),c("span",{class:"line-number"},"5"),c("br"),c("span",{class:"line-number"},"6"),c("br"),c("span",{class:"line-number"},"7"),c("br"),c("span",{class:"line-number"},"8"),c("br"),c("span",{class:"line-number"},"9"),c("br"),c("span",{class:"line-number"},"10"),c("br"),c("span",{class:"line-number"},"11"),c("br"),c("span",{class:"line-number"},"12"),c("br"),c("span",{class:"line-number"},"13"),c("br"),c("span",{class:"line-number"},"14"),c("br"),c("span",{class:"line-number"},"15"),c("br")])],-1),P=c("p",null,"这个才是JS标准支持的方式。另外在扩展一下Object.defineProperties，复数形式，也就是可以一次性设置多个。",-1),S=c("div",{class:"language-js line-numbers-mode"},[c("pre",null,[c("code",null,[c("span",{class:"token keyword"},"var"),p(" test "),c("span",{class:"token operator"},"="),p(),c("span",{class:"token punctuation"},"{"),c("span",{class:"token punctuation"},"}"),c("span",{class:"token punctuation"},";"),p("\n\nObject"),c("span",{class:"token punctuation"},"."),c("span",{class:"token function"},"defineProperties"),c("span",{class:"token punctuation"},"("),p("test"),c("span",{class:"token punctuation"},","),p(),c("span",{class:"token punctuation"},"{"),p("\n  o"),c("span",{class:"token operator"},":"),p(),c("span",{class:"token punctuation"},"{"),p("\n    "),c("span",{class:"token function"},"get"),c("span",{class:"token punctuation"},"("),c("span",{class:"token punctuation"},")"),p(),c("span",{class:"token punctuation"},"{"),c("span",{class:"token punctuation"},"}"),c("span",{class:"token punctuation"},","),p("\n    "),c("span",{class:"token function"},"set"),c("span",{class:"token punctuation"},"("),p("v"),c("span",{class:"token punctuation"},")"),p(),c("span",{class:"token punctuation"},"{"),c("span",{class:"token punctuation"},"}"),p("\n  "),c("span",{class:"token punctuation"},"}"),c("span",{class:"token punctuation"},","),p("\n  p"),c("span",{class:"token operator"},":"),p(),c("span",{class:"token punctuation"},"{"),p("\n    "),c("span",{class:"token function"},"get"),c("span",{class:"token punctuation"},"("),c("span",{class:"token punctuation"},")"),p(),c("span",{class:"token punctuation"},"{"),c("span",{class:"token punctuation"},"}"),c("span",{class:"token punctuation"},","),p("\n    "),c("span",{class:"token function"},"set"),c("span",{class:"token punctuation"},"("),p("v"),c("span",{class:"token punctuation"},")"),p(),c("span",{class:"token punctuation"},"{"),c("span",{class:"token punctuation"},"}"),p("\n  "),c("span",{class:"token punctuation"},"}"),p("\n"),c("span",{class:"token punctuation"},"}"),c("span",{class:"token punctuation"},")"),c("span",{class:"token punctuation"},";"),p("\n")])]),c("div",{class:"line-numbers-wrapper"},[c("span",{class:"line-number"},"1"),c("br"),c("span",{class:"line-number"},"2"),c("br"),c("span",{class:"line-number"},"3"),c("br"),c("span",{class:"line-number"},"4"),c("br"),c("span",{class:"line-number"},"5"),c("br"),c("span",{class:"line-number"},"6"),c("br"),c("span",{class:"line-number"},"7"),c("br"),c("span",{class:"line-number"},"8"),c("br"),c("span",{class:"line-number"},"9"),c("br"),c("span",{class:"line-number"},"10"),c("br"),c("span",{class:"line-number"},"11"),c("br"),c("span",{class:"line-number"},"12"),c("br")])],-1),x=c("h2",{id:"分析",tabindex:"-1"},[p("分析 "),c("a",{class:"header-anchor",href:"#分析","aria-hidden":"true"},"#")],-1),T=c("p",null,[p("根据题目我们可以知道在调用foo(key)的时候，函数foo会调用对象o并且返回o[key]的值。这里会对对象进行一个取值操作，我们只需要给对象o添加一个self属性的getter监听，在foo('self')的时候执行并且返回this，上面也已经说了，"),c("strong",null,"getter/setter函数中，this是指向对象本身的"),p("。")],-1),G=c("p",null,"那么问题又来了，怎么给对象o添加self属性的getter监听。",-1),N=c("p",null,[p("另外一个知识点---原型。我们都知道"),c("strong",null,"所有对象的构造函数都是Object"),p("，而对对象取某个属性的时候自生没有就会去原型链上找，也就是我们只需要给Object.prototype添加一个self属性的getter监听并且放回this。")],-1),I=c("div",{class:"language-js line-numbers-mode"},[c("pre",null,[c("code",null,[p("Object"),c("span",{class:"token punctuation"},"."),c("span",{class:"token function"},"defineProperty"),c("span",{class:"token punctuation"},"("),c("span",{class:"token class-name"},"Object"),c("span",{class:"token punctuation"},"."),p("prototype"),c("span",{class:"token punctuation"},","),p(),c("span",{class:"token string"},"'self'"),c("span",{class:"token punctuation"},","),p(),c("span",{class:"token punctuation"},"{"),p("\n  "),c("span",{class:"token function"},"get"),c("span",{class:"token punctuation"},"("),c("span",{class:"token punctuation"},")"),p(),c("span",{class:"token punctuation"},"{"),p("\n    "),c("span",{class:"token keyword"},"return"),p(),c("span",{class:"token keyword"},"this"),c("span",{class:"token punctuation"},";"),p("\n  "),c("span",{class:"token punctuation"},"}"),p("\n"),c("span",{class:"token punctuation"},"}"),c("span",{class:"token punctuation"},")"),c("span",{class:"token punctuation"},";"),p("\n\n"),c("span",{class:"token keyword"},"var"),p(" o "),c("span",{class:"token operator"},"="),p(),c("span",{class:"token function"},"foo"),c("span",{class:"token punctuation"},"("),c("span",{class:"token string"},"'self'"),c("span",{class:"token punctuation"},")"),c("span",{class:"token punctuation"},";"),p("\nconsole"),c("span",{class:"token punctuation"},"."),c("span",{class:"token function"},"log"),c("span",{class:"token punctuation"},"("),p("Object"),c("span",{class:"token punctuation"},"."),c("span",{class:"token function"},"keys"),c("span",{class:"token punctuation"},"("),p("o"),c("span",{class:"token punctuation"},")"),c("span",{class:"token punctuation"},")"),c("span",{class:"token punctuation"},";"),p(),c("span",{class:"token comment"},"// ['a', 'b']"),p("\n")])]),c("div",{class:"line-numbers-wrapper"},[c("span",{class:"line-number"},"1"),c("br"),c("span",{class:"line-number"},"2"),c("br"),c("span",{class:"line-number"},"3"),c("br"),c("span",{class:"line-number"},"4"),c("br"),c("span",{class:"line-number"},"5"),c("br"),c("span",{class:"line-number"},"6"),c("br"),c("span",{class:"line-number"},"7"),c("br"),c("span",{class:"line-number"},"8"),c("br")])],-1),C=c("h2",{id:"修正",tabindex:"-1"},[p("修正 "),c("a",{class:"header-anchor",href:"#修正","aria-hidden":"true"},"#")],-1),D=c("p",null,"上面的做法已经基本上能解决问题了，但还不完善。如果对象o自生存在self属性，那么在获取的时候就不会去其原型链上查找，这里我们必须要定一个唯一的属性。",-1),E=c("p",null,"这里就可以用到ES6新增加的第7种数据类型Symbol。",-1),R=c("div",{class:"language-js line-numbers-mode"},[c("pre",null,[c("code",null,[c("span",{class:"token keyword"},"var"),p(" key "),c("span",{class:"token operator"},"="),p(),c("span",{class:"token function"},"Symbol"),c("span",{class:"token punctuation"},"("),c("span",{class:"token punctuation"},")"),c("span",{class:"token punctuation"},";"),p("\nObject"),c("span",{class:"token punctuation"},"."),c("span",{class:"token function"},"defineProperty"),c("span",{class:"token punctuation"},"("),c("span",{class:"token class-name"},"Object"),c("span",{class:"token punctuation"},"."),p("prototype"),c("span",{class:"token punctuation"},","),p(" key"),c("span",{class:"token punctuation"},","),p(),c("span",{class:"token punctuation"},"{"),p("\n    "),c("span",{class:"token function"},"get"),c("span",{class:"token punctuation"},"("),c("span",{class:"token punctuation"},")"),p(),c("span",{class:"token punctuation"},"{"),p("\n        "),c("span",{class:"token keyword"},"return"),p(),c("span",{class:"token keyword"},"this"),c("span",{class:"token punctuation"},";"),p("\n    "),c("span",{class:"token punctuation"},"}"),p("\n"),c("span",{class:"token punctuation"},"}"),c("span",{class:"token punctuation"},")"),c("span",{class:"token punctuation"},";"),p("\n\n"),c("span",{class:"token keyword"},"var"),p(" o "),c("span",{class:"token operator"},"="),p(),c("span",{class:"token function"},"foo"),c("span",{class:"token punctuation"},"("),p("key"),c("span",{class:"token punctuation"},")"),c("span",{class:"token punctuation"},";"),p("\nconsole"),c("span",{class:"token punctuation"},"."),c("span",{class:"token function"},"log"),c("span",{class:"token punctuation"},"("),p("Object"),c("span",{class:"token punctuation"},"."),c("span",{class:"token function"},"keys"),c("span",{class:"token punctuation"},"("),p("o"),c("span",{class:"token punctuation"},")"),c("span",{class:"token punctuation"},")"),c("span",{class:"token punctuation"},";"),p(),c("span",{class:"token comment"},"// ['a', 'b']"),p("\n")])]),c("div",{class:"line-numbers-wrapper"},[c("span",{class:"line-number"},"1"),c("br"),c("span",{class:"line-number"},"2"),c("br"),c("span",{class:"line-number"},"3"),c("br"),c("span",{class:"line-number"},"4"),c("br"),c("span",{class:"line-number"},"5"),c("br"),c("span",{class:"line-number"},"6"),c("br"),c("span",{class:"line-number"},"7"),c("br"),c("span",{class:"line-number"},"8"),c("br"),c("span",{class:"line-number"},"9"),c("br")])],-1);var V=n(i,[["render",function(n,o,c,p,u,i){const V=s("code-block");return l(),a("div",null,[r,t(V,{showAction:!1},{default:e((()=>[k])),_:1}),b,d,m,f,t(V,{showAction:!1},{default:e((()=>[y])),_:1}),g,h,j,t(V,{showAction:!1},{default:e((()=>[w])),_:1}),v,_,O,t(V,{showAction:!1},{default:e((()=>[A])),_:1}),P,t(V,{showAction:!1},{default:e((()=>[S])),_:1}),x,T,G,N,t(V,{showAction:!1},{default:e((()=>[I])),_:1}),C,D,E,t(V,{showAction:!1},{default:e((()=>[R])),_:1})])}]]);export{u as __pageData,V as default};
