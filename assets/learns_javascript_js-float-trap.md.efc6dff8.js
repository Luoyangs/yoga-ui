import{_ as n,r as s,c as a,a as t,w as e,f as o,e as c,b as p,o as u}from"./app.de0c49ac.js";const l='{"title":"JavaScript 浮点数陷阱及解法","description":"","frontmatter":{},"headers":[{"level":2,"title":"浮点数的存储","slug":"浮点数的存储"},{"level":3,"title":"为什么 0.1+0.2=0.30000000000000004？","slug":"为什么-0-1-0-2-0-30000000000000004？"},{"level":3,"title":"为什么 x=0.1 能得到 0.1？","slug":"为什么-x-0-1-能得到-0-1？"},{"level":2,"title":"大数危机","slug":"大数危机"},{"level":3,"title":"toPrecision vs toFixed","slug":"toprecision-vs-tofixed"},{"level":3,"title":"解决方案","slug":"解决方案"},{"level":3,"title":"数据展示类","slug":"数据展示类"},{"level":3,"title":"数据运算类","slug":"数据运算类"},{"level":3,"title":"number-precision","slug":"number-precision"}],"relativePath":"learns/javascript/js-float-trap.md","lastUpdated":1635307774051}',i={},r=o('<p><div class="table-of-contents"><ul><li><a href="#浮点数的存储">浮点数的存储</a><ul><li><a href="#为什么-0-1-0-2-0-30000000000000004？">为什么 0.1+0.2=0.30000000000000004？</a></li><li><a href="#为什么-x-0-1-能得到-0-1？">为什么 x=0.1 能得到 0.1？</a></li></ul></li><li><a href="#大数危机">大数危机</a><ul><li><a href="#toprecision-vs-tofixed">toPrecision vs toFixed</a></li><li><a href="#解决方案">解决方案</a></li><li><a href="#数据展示类">数据展示类</a></li><li><a href="#数据运算类">数据运算类</a></li><li><a href="#number-precision">number-precision</a></li></ul></li></ul></div></p><h1 id="javascript-浮点数陷阱及解法" tabindex="-1">JavaScript 浮点数陷阱及解法 <a class="header-anchor" href="#javascript-浮点数陷阱及解法" aria-hidden="true">#</a></h1><p>众所周知，JavaScript 浮点数运算时经常遇到会 0.000000001 和 0.999999999 这样奇怪的结果，如 0.1+0.2=0.30000000000000004、1-0.9=0.09999999999999998，很多人知道这是浮点数误差问题，但具体就说不清楚了。本文帮你理清这背后的原理以及解决方案，还会向你解释JS中的大数危机和四则运算中会遇到的坑。</p><h2 id="浮点数的存储" tabindex="-1">浮点数的存储 <a class="header-anchor" href="#浮点数的存储" aria-hidden="true">#</a></h2><p>首先要搞清楚 JavaScript 如何存储小数。和其它语言如 Java 和 Python 不同，JavaScript 中所有数字包括整数和小数都只有一种类型 — Number。它的实现遵循 IEEE 754 标准，使用 64 位固定长度来表示，也就是标准的 double 双精度浮点数（相关的还有float 32位单精度）。计算机组成原理中有过详细介绍，如果你不记得也没关系。</p><p>这样的存储结构优点是可以归一化处理整数和小数，节省存储空间。</p><p>64位比特又可分为三个部分：</p><ul><li>符号位S：第 1 位是正负数符号位（sign），0代表正数，1代表负数</li><li>指数位E：中间的 11 位存储指数（exponent），用来表示次方数</li><li>尾数位M：最后的 52 位是尾数（mantissa），超出的部分自动进一舍零</li></ul><p>实际数字就可以用以下公式来计算： <img src="https://user-images.githubusercontent.com/948896/31601625-1f199ad0-b220-11e7-9d46-bb48a470bedf.png" alt="img"></p><p>注意以上的公式遵循科学计数法的规范，在十进制是为0&lt;M&lt;10，到二进行就是0&lt;M&lt;2。也就是说整数部分只能是1，所以可以被舍去，只保留后面的小数部分。如 4.5 转换成二进制就是 100.1，科学计数法表示是 1.001*2^2，舍去1后 M = 001。E是一个无符号整数，因为长度是11位，取值范围是 0~2047。但是科学计数法中的指数是可以为负数的，所以再减去一个中间数 1023，[0,1022]表示为负，[1024,2047] 表示为正。如4.5 的指数E = 1025，尾数M为 001。</p><p>最终的公式变成： <img src="https://user-images.githubusercontent.com/948896/31601584-f65ed43e-b21f-11e7-8755-c99b48e5134c.png" alt="img"></p><p>所以 4.5 最终表示为（M=001、E=1025）： <img src="https://camo.githubusercontent.com/33b3006b6e3b7a15b9bda858ac01a372981ff248/687474703a2f2f617461322d696d672e636e2d68616e677a686f752e696d672d7075622e616c6979756e2d696e632e636f6d2f33353661306164643137356263663436393664353731613862656232303633642e706e67" alt="img"></p><p>下面再以 0.1 例解释浮点误差的原因， 0.1 转成二进制表示为 0.0001100110011001100(1100循环)，1.100110011001100x2^-4，所以 E=-4+1023=1019；M 舍去首位的1，得到 100110011...。最终就是： <img src="https://camo.githubusercontent.com/61cae30c09580aba68ffbfcf3b080e9688fd7609/687474703a2f2f617461322d696d672e636e2d68616e677a686f752e696d672d7075622e616c6979756e2d696e632e636f6d2f36313561643436316130653836343166316238393837316532656666383765662e706e67" alt="img"></p><p>转化成十进制后为2^(-4)+2^(-7)+2^(-8)+ ... =0.100000000000000005551115123126，因此就出现了浮点误差。</p><h3 id="为什么-0-1-0-2-0-30000000000000004？" tabindex="-1">为什么 0.1+0.2=0.30000000000000004？ <a class="header-anchor" href="#为什么-0-1-0-2-0-30000000000000004？" aria-hidden="true">#</a></h3><p>计算步骤为：</p>',16),k=c("div",{class:"language-"},[c("pre",null,[c("code",null,"// 0.1 和 0.2 都转化成二进制后再进行运算\n0.00011001100110011001100110011001100110011001100110011010 +\n0.0011001100110011001100110011001100110011001100110011010 =\n0.0100110011001100110011001100110011001100110011001100111\n\n// 转成十进制正好是 0.30000000000000004\n")]),c("div",{class:"line-numbers-wrapper"},[c("span",{class:"line-number"},"1"),c("br"),c("span",{class:"line-number"},"2"),c("br"),c("span",{class:"line-number"},"3"),c("br"),c("span",{class:"line-number"},"4"),c("br"),c("span",{class:"line-number"},"5"),c("br"),c("span",{class:"line-number"},"6"),c("br")])],-1),b=c("h3",{id:"为什么-x-0-1-能得到-0-1？",tabindex:"-1"},[p("为什么 x=0.1 能得到 0.1？ "),c("a",{class:"header-anchor",href:"#为什么-x-0-1-能得到-0-1？","aria-hidden":"true"},"#")],-1),m=c("p",null,"恭喜你到了看山不是山的境界。因为 mantissa 固定长度是 52 位，再加上省略的一位，最多可以表示的数是 2^53=9007199254740992，对应科学计数尾数是 9.007199254740992，这也是 JS 最多能表示的精度。它的长度是 16，所以可以使用 toPrecision(16) 来做精度运算，超过的精度会自动做凑整处理。于是就有：",-1),d=c("div",{class:"language-js line-numbers-mode"},[c("pre",null,[c("code",null,[c("span",{class:"token number"},"0.10000000000000000555"),c("span",{class:"token punctuation"},"."),c("span",{class:"token function"},"toPrecision"),c("span",{class:"token punctuation"},"("),c("span",{class:"token number"},"16"),c("span",{class:"token punctuation"},")"),p("\n"),c("span",{class:"token comment"},"// 返回 0.1000000000000000，去掉末尾的零后正好为 0.1"),p("\n\n"),c("span",{class:"token comment"},"// 但你看到的 `0.1` 实际上并不是 `0.1`。不信你可用更高的精度试试："),p("\n"),c("span",{class:"token number"},"0.1"),c("span",{class:"token punctuation"},"."),c("span",{class:"token function"},"toPrecision"),c("span",{class:"token punctuation"},"("),c("span",{class:"token number"},"17"),c("span",{class:"token punctuation"},")"),p(),c("span",{class:"token operator"},"="),p(),c("span",{class:"token number"},"0.10000000000000001"),p("\n"),c("span",{class:"token number"},"0.1"),c("span",{class:"token punctuation"},"."),c("span",{class:"token function"},"toPrecision"),c("span",{class:"token punctuation"},"("),c("span",{class:"token number"},"21"),c("span",{class:"token punctuation"},")"),p(),c("span",{class:"token operator"},"="),p(),c("span",{class:"token number"},"0.100000000000000005551"),p("\n")])]),c("div",{class:"line-numbers-wrapper"},[c("span",{class:"line-number"},"1"),c("br"),c("span",{class:"line-number"},"2"),c("br"),c("span",{class:"line-number"},"3"),c("br"),c("span",{class:"line-number"},"4"),c("br"),c("span",{class:"line-number"},"5"),c("br"),c("span",{class:"line-number"},"6"),c("br")])],-1),f=c("h2",{id:"大数危机",tabindex:"-1"},[p("大数危机 "),c("a",{class:"header-anchor",href:"#大数危机","aria-hidden":"true"},"#")],-1),h=c("p",null,"可能你已经隐约感觉到了，如果整数大于 9007199254740992 会出现什么情况呢？ 由于 E 最大值是 1023，所以最大可以表示的整数是 2^1024 - 1，这就是能表示的最大整数。但你并不能这样计算这个数字，因为从 2^1024 开始就变成了 Infinity",-1),g=c("div",{class:"language-js line-numbers-mode"},[c("pre",null,[c("code",null,[c("span",{class:"token operator"},">"),p(" Math"),c("span",{class:"token punctuation"},"."),c("span",{class:"token function"},"pow"),c("span",{class:"token punctuation"},"("),c("span",{class:"token number"},"2"),c("span",{class:"token punctuation"},","),p(),c("span",{class:"token number"},"1023"),c("span",{class:"token punctuation"},")"),p("\n"),c("span",{class:"token number"},"8.98846567431158e+307"),p("\n\n"),c("span",{class:"token operator"},">"),p(" Math"),c("span",{class:"token punctuation"},"."),c("span",{class:"token function"},"pow"),c("span",{class:"token punctuation"},"("),c("span",{class:"token number"},"2"),c("span",{class:"token punctuation"},","),p(),c("span",{class:"token number"},"1024"),c("span",{class:"token punctuation"},")"),p("\n"),c("span",{class:"token number"},"Infinity"),p("\n")])]),c("div",{class:"line-numbers-wrapper"},[c("span",{class:"line-number"},"1"),c("br"),c("span",{class:"line-number"},"2"),c("br"),c("span",{class:"line-number"},"3"),c("br"),c("span",{class:"line-number"},"4"),c("br"),c("span",{class:"line-number"},"5"),c("br")])],-1),w=o('<p>那么对于 (2^53, 2^63) 之间的数会出现什么情况呢？</p><ul><li>(2^53, 2^54) 之间的数会两个选一个，只能精确表示偶数</li><li>(2^54, 2^55) 之间的数会四个选一个，只能精确表示4的倍数</li></ul><p>... 依次跳过更多2的倍数</p><p>下面这张图能很好的表示 JavaScript 中浮点数和实数（Real Number）之间的对应关系。我们常用的 (-2^53, 2^53) 只是最中间非常小的一部分，越往两边越稀疏越不精确。 <img src="https://camo.githubusercontent.com/a2ff3ec159c480822b09b45d80d1211655b492f0/687474703a2f2f617461322d696d672e636e2d68616e677a686f752e696d672d7075622e616c6979756e2d696e632e636f6d2f65656539613263613238646433643865366630663563383939353661623433612e6a7067" alt="img"></p><p>在淘宝早期的订单系统中把订单号当作数字处理，后来随意订单号暴增，已经超过了 9007199254740992，最终的解法是把订单号改成字符串处理。</p><p>要想解决大数的问题你可以引用第三方库 bignumber.js，原理是把所有数字当作字符串，重新实现了计算逻辑，缺点是性能比原生的差很多。所以原生支持大数就很有必要了，现在 TC39 已经有一个 Stage 3 的提案 proposal bigint，大数问题有望彻底解决。在浏览器正式支持前，可以使用 Babel 7.0 来实现，它的内部是自动转换成 big-integer 来计算，要注意的是这样能保持精度但运算效率会降低。</p><h3 id="toprecision-vs-tofixed" tabindex="-1">toPrecision vs toFixed <a class="header-anchor" href="#toprecision-vs-tofixed" aria-hidden="true">#</a></h3><p>数据处理时，这两个函数很容易混淆。它们的共同点是把数字转成字符串供展示使用。</p><blockquote><p>注意在计算的中间过程不要使用，只用于最终结果。</p></blockquote><p>不同点就需要注意一下：</p><ul><li>toPrecision 是处理精度，精度是从左至右第一个不为0的数开始数起。</li><li>toFixed 是小数点后指定位数取整，从小数点开始数起。</li></ul><p>两者都能对多余数字做凑整处理，也有些人用 toFixed 来做四舍五入，但一定要知道它是有 Bug 的。</p><p>如：1.005.toFixed(2) 返回的是 1.00 而不是 1.01。</p><p>原因： 1.005 实际对应的数字是 1.00499999999999989，在四舍五入时全部被舍去！</p><h3 id="解决方案" tabindex="-1">解决方案 <a class="header-anchor" href="#解决方案" aria-hidden="true">#</a></h3><p>回到最关心的问题：如何解决浮点误差。首先，理论上用有限的空间来存储无限的小数是不可能保证精确的，但我们可以处理一下得到我们期望的结果。</p><h3 id="数据展示类" tabindex="-1">数据展示类 <a class="header-anchor" href="#数据展示类" aria-hidden="true">#</a></h3><p>当你拿到 1.4000000000000001 这样的数据要展示时，建议使用 toPrecision 凑整并 parseFloat 转成数字后再显示，如下：</p>',18),y=c("div",{class:"language-js line-numbers-mode"},[c("pre",null,[c("code",null,[c("span",{class:"token function"},"parseFloat"),c("span",{class:"token punctuation"},"("),c("span",{class:"token number"},"1.4000000000000001"),c("span",{class:"token punctuation"},"."),c("span",{class:"token function"},"toPrecision"),c("span",{class:"token punctuation"},"("),c("span",{class:"token number"},"12"),c("span",{class:"token punctuation"},")"),c("span",{class:"token punctuation"},")"),p(),c("span",{class:"token operator"},"==="),p(),c("span",{class:"token number"},"1.4"),p("  "),c("span",{class:"token comment"},"// True"),p("\n")])]),c("div",{class:"line-numbers-wrapper"},[c("span",{class:"line-number"},"1"),c("br")])],-1),v=c("p",null,"封装成方法就是：",-1),x=c("div",{class:"language-js line-numbers-mode"},[c("pre",null,[c("code",null,[c("span",{class:"token keyword"},"function"),p(),c("span",{class:"token function"},"strip"),c("span",{class:"token punctuation"},"("),c("span",{class:"token parameter"},[p("num"),c("span",{class:"token punctuation"},","),p(" precision "),c("span",{class:"token operator"},"="),p(),c("span",{class:"token number"},"12")]),c("span",{class:"token punctuation"},")"),p(),c("span",{class:"token punctuation"},"{"),p("\n  "),c("span",{class:"token keyword"},"return"),p(),c("span",{class:"token operator"},"+"),c("span",{class:"token function"},"parseFloat"),c("span",{class:"token punctuation"},"("),p("num"),c("span",{class:"token punctuation"},"."),c("span",{class:"token function"},"toPrecision"),c("span",{class:"token punctuation"},"("),p("precision"),c("span",{class:"token punctuation"},")"),c("span",{class:"token punctuation"},")"),c("span",{class:"token punctuation"},";"),p("\n"),c("span",{class:"token punctuation"},"}"),p("\n")])]),c("div",{class:"line-numbers-wrapper"},[c("span",{class:"line-number"},"1"),c("br"),c("span",{class:"line-number"},"2"),c("br"),c("span",{class:"line-number"},"3"),c("br")])],-1),_=c("p",null,"为什么选择 12 做为默认精度？这是一个经验的选择，一般选12就能解决掉大部分0001和0009问题，而且大部分情况下也够用了，如果你需要更精确可以调高。",-1),S=c("h3",{id:"数据运算类",tabindex:"-1"},[p("数据运算类 "),c("a",{class:"header-anchor",href:"#数据运算类","aria-hidden":"true"},"#")],-1),N=c("p",null,"对于运算类操作，如 +-*/，就不能使用 toPrecision 了。正确的做法是把小数转成整数后再运算。以加法为例：",-1),M=c("div",{class:"language-js line-numbers-mode"},[c("pre",null,[c("code",null,[c("span",{class:"token comment"},"/**\n * 精确加法\n */"),p("\n"),c("span",{class:"token keyword"},"function"),p(),c("span",{class:"token function"},"add"),c("span",{class:"token punctuation"},"("),c("span",{class:"token parameter"},[p("num1"),c("span",{class:"token punctuation"},","),p(" num2")]),c("span",{class:"token punctuation"},")"),p(),c("span",{class:"token punctuation"},"{"),p("\n  "),c("span",{class:"token keyword"},"const"),p(" num1Digits "),c("span",{class:"token operator"},"="),p(),c("span",{class:"token punctuation"},"("),p("num1"),c("span",{class:"token punctuation"},"."),c("span",{class:"token function"},"toString"),c("span",{class:"token punctuation"},"("),c("span",{class:"token punctuation"},")"),c("span",{class:"token punctuation"},"."),c("span",{class:"token function"},"split"),c("span",{class:"token punctuation"},"("),c("span",{class:"token string"},"'.'"),c("span",{class:"token punctuation"},")"),c("span",{class:"token punctuation"},"["),c("span",{class:"token number"},"1"),c("span",{class:"token punctuation"},"]"),p(),c("span",{class:"token operator"},"||"),p(),c("span",{class:"token string"},"''"),c("span",{class:"token punctuation"},")"),c("span",{class:"token punctuation"},"."),p("length"),c("span",{class:"token punctuation"},";"),p("\n  "),c("span",{class:"token keyword"},"const"),p(" num2Digits "),c("span",{class:"token operator"},"="),p(),c("span",{class:"token punctuation"},"("),p("num2"),c("span",{class:"token punctuation"},"."),c("span",{class:"token function"},"toString"),c("span",{class:"token punctuation"},"("),c("span",{class:"token punctuation"},")"),c("span",{class:"token punctuation"},"."),c("span",{class:"token function"},"split"),c("span",{class:"token punctuation"},"("),c("span",{class:"token string"},"'.'"),c("span",{class:"token punctuation"},")"),c("span",{class:"token punctuation"},"["),c("span",{class:"token number"},"1"),c("span",{class:"token punctuation"},"]"),p(),c("span",{class:"token operator"},"||"),p(),c("span",{class:"token string"},"''"),c("span",{class:"token punctuation"},")"),c("span",{class:"token punctuation"},"."),p("length"),c("span",{class:"token punctuation"},";"),p("\n  "),c("span",{class:"token keyword"},"const"),p(" baseNum "),c("span",{class:"token operator"},"="),p(" Math"),c("span",{class:"token punctuation"},"."),c("span",{class:"token function"},"pow"),c("span",{class:"token punctuation"},"("),c("span",{class:"token number"},"10"),c("span",{class:"token punctuation"},","),p(" Math"),c("span",{class:"token punctuation"},"."),c("span",{class:"token function"},"max"),c("span",{class:"token punctuation"},"("),p("num1Digits"),c("span",{class:"token punctuation"},","),p(" num2Digits"),c("span",{class:"token punctuation"},")"),c("span",{class:"token punctuation"},")"),c("span",{class:"token punctuation"},";"),p("\n  "),c("span",{class:"token keyword"},"return"),p(),c("span",{class:"token punctuation"},"("),p("num1 "),c("span",{class:"token operator"},"*"),p(" baseNum "),c("span",{class:"token operator"},"+"),p(" num2 "),c("span",{class:"token operator"},"*"),p(" baseNum"),c("span",{class:"token punctuation"},")"),p(),c("span",{class:"token operator"},"/"),p(" baseNum"),c("span",{class:"token punctuation"},";"),p("\n"),c("span",{class:"token punctuation"},"}"),p("\n")])]),c("div",{class:"line-numbers-wrapper"},[c("span",{class:"line-number"},"1"),c("br"),c("span",{class:"line-number"},"2"),c("br"),c("span",{class:"line-number"},"3"),c("br"),c("span",{class:"line-number"},"4"),c("br"),c("span",{class:"line-number"},"5"),c("br"),c("span",{class:"line-number"},"6"),c("br"),c("span",{class:"line-number"},"7"),c("br"),c("span",{class:"line-number"},"8"),c("br"),c("span",{class:"line-number"},"9"),c("br")])],-1),P=c("p",null,"以上方法能适用于大部分场景。遇到科学计数法如 2.3e+1（当数字精度大于21时，数字会强制转为科学计数法形式显示）时还需要特别处理一下。",-1),E=c("h3",{id:"number-precision",tabindex:"-1"},[p("number-precision "),c("a",{class:"header-anchor",href:"#number-precision","aria-hidden":"true"},"#")],-1),F=c("p",null,"完美支持浮点数的加减乘除、四舍五入等运算。非常小只有1K，远小于绝大多数同类库（如Math.js、BigDecimal.js），100%测试全覆盖，代码可读性强，不妨在你的应用里用起来！",-1),A=c("div",{class:"language-js line-numbers-mode"},[c("pre",null,[c("code",null,[c("span",{class:"token comment"},"/**\n * 把错误的数据转正\n * strip(0.09999999999999998)=0.1\n */"),p("\n"),c("span",{class:"token keyword"},"function"),p(),c("span",{class:"token function"},"strip"),c("span",{class:"token punctuation"},"("),c("span",{class:"token parameter"},[p("num"),c("span",{class:"token operator"},":"),p(" number"),c("span",{class:"token punctuation"},","),p(" precision "),c("span",{class:"token operator"},"="),p(),c("span",{class:"token number"},"12")]),c("span",{class:"token punctuation"},")"),c("span",{class:"token operator"},":"),p(" number "),c("span",{class:"token punctuation"},"{"),p("\n  "),c("span",{class:"token keyword"},"return"),p(),c("span",{class:"token operator"},"+"),c("span",{class:"token function"},"parseFloat"),c("span",{class:"token punctuation"},"("),p("num"),c("span",{class:"token punctuation"},"."),c("span",{class:"token function"},"toPrecision"),c("span",{class:"token punctuation"},"("),p("precision"),c("span",{class:"token punctuation"},")"),c("span",{class:"token punctuation"},")"),c("span",{class:"token punctuation"},";"),p("\n"),c("span",{class:"token punctuation"},"}"),p("\n\n"),c("span",{class:"token comment"},"/**\n * Return digits length of a number\n * @param {*number} num Input number\n */"),p("\n"),c("span",{class:"token keyword"},"function"),p(),c("span",{class:"token function"},"digitLength"),c("span",{class:"token punctuation"},"("),c("span",{class:"token parameter"},[p("num"),c("span",{class:"token operator"},":"),p(" number")]),c("span",{class:"token punctuation"},")"),c("span",{class:"token operator"},":"),p(" number "),c("span",{class:"token punctuation"},"{"),p("\n  "),c("span",{class:"token comment"},"// Get digit length of e"),p("\n  "),c("span",{class:"token keyword"},"const"),p(" eSplit "),c("span",{class:"token operator"},"="),p(" num"),c("span",{class:"token punctuation"},"."),c("span",{class:"token function"},"toString"),c("span",{class:"token punctuation"},"("),c("span",{class:"token punctuation"},")"),c("span",{class:"token punctuation"},"."),c("span",{class:"token function"},"split"),c("span",{class:"token punctuation"},"("),c("span",{class:"token regex"},[c("span",{class:"token regex-delimiter"},"/"),c("span",{class:"token regex-source language-regex"},"[eE]"),c("span",{class:"token regex-delimiter"},"/")]),c("span",{class:"token punctuation"},")"),c("span",{class:"token punctuation"},";"),p("\n  "),c("span",{class:"token keyword"},"const"),p(" len "),c("span",{class:"token operator"},"="),p(),c("span",{class:"token punctuation"},"("),p("eSplit"),c("span",{class:"token punctuation"},"["),c("span",{class:"token number"},"0"),c("span",{class:"token punctuation"},"]"),c("span",{class:"token punctuation"},"."),c("span",{class:"token function"},"split"),c("span",{class:"token punctuation"},"("),c("span",{class:"token string"},"'.'"),c("span",{class:"token punctuation"},")"),c("span",{class:"token punctuation"},"["),c("span",{class:"token number"},"1"),c("span",{class:"token punctuation"},"]"),p(),c("span",{class:"token operator"},"||"),p(),c("span",{class:"token string"},"''"),c("span",{class:"token punctuation"},")"),c("span",{class:"token punctuation"},"."),p("length "),c("span",{class:"token operator"},"-"),p(),c("span",{class:"token punctuation"},"("),c("span",{class:"token operator"},"+"),c("span",{class:"token punctuation"},"("),p("eSplit"),c("span",{class:"token punctuation"},"["),c("span",{class:"token number"},"1"),c("span",{class:"token punctuation"},"]"),p(),c("span",{class:"token operator"},"||"),p(),c("span",{class:"token number"},"0"),c("span",{class:"token punctuation"},")"),c("span",{class:"token punctuation"},")"),c("span",{class:"token punctuation"},";"),p("\n  "),c("span",{class:"token keyword"},"return"),p(" len "),c("span",{class:"token operator"},">"),p(),c("span",{class:"token number"},"0"),p(),c("span",{class:"token operator"},"?"),p(" len "),c("span",{class:"token operator"},":"),p(),c("span",{class:"token number"},"0"),c("span",{class:"token punctuation"},";"),p("\n"),c("span",{class:"token punctuation"},"}"),p("\n\n"),c("span",{class:"token comment"},"/**\n * 把小数转成整数，支持科学计数法。如果是小数则放大成整数\n * @param {*number} num 输入数\n */"),p("\n"),c("span",{class:"token keyword"},"function"),p(),c("span",{class:"token function"},"float2Fixed"),c("span",{class:"token punctuation"},"("),c("span",{class:"token parameter"},[p("num"),c("span",{class:"token operator"},":"),p(" number")]),c("span",{class:"token punctuation"},")"),c("span",{class:"token operator"},":"),p(" number "),c("span",{class:"token punctuation"},"{"),p("\n  "),c("span",{class:"token keyword"},"if"),p(),c("span",{class:"token punctuation"},"("),p("num"),c("span",{class:"token punctuation"},"."),c("span",{class:"token function"},"toString"),c("span",{class:"token punctuation"},"("),c("span",{class:"token punctuation"},")"),c("span",{class:"token punctuation"},"."),c("span",{class:"token function"},"indexOf"),c("span",{class:"token punctuation"},"("),c("span",{class:"token string"},"'e'"),c("span",{class:"token punctuation"},")"),p(),c("span",{class:"token operator"},"==="),p(),c("span",{class:"token operator"},"-"),c("span",{class:"token number"},"1"),c("span",{class:"token punctuation"},")"),p(),c("span",{class:"token punctuation"},"{"),p("\n    "),c("span",{class:"token keyword"},"return"),p(),c("span",{class:"token function"},"Number"),c("span",{class:"token punctuation"},"("),p("num"),c("span",{class:"token punctuation"},"."),c("span",{class:"token function"},"toString"),c("span",{class:"token punctuation"},"("),c("span",{class:"token punctuation"},")"),c("span",{class:"token punctuation"},"."),c("span",{class:"token function"},"replace"),c("span",{class:"token punctuation"},"("),c("span",{class:"token string"},"'.'"),c("span",{class:"token punctuation"},","),p(),c("span",{class:"token string"},"''"),c("span",{class:"token punctuation"},")"),c("span",{class:"token punctuation"},")"),c("span",{class:"token punctuation"},";"),p("\n  "),c("span",{class:"token punctuation"},"}"),p("\n  "),c("span",{class:"token keyword"},"const"),p(" dLen "),c("span",{class:"token operator"},"="),p(),c("span",{class:"token function"},"digitLength"),c("span",{class:"token punctuation"},"("),p("num"),c("span",{class:"token punctuation"},")"),c("span",{class:"token punctuation"},";"),p("\n  "),c("span",{class:"token keyword"},"return"),p(" dLen "),c("span",{class:"token operator"},">"),p(),c("span",{class:"token number"},"0"),p(),c("span",{class:"token operator"},"?"),p(),c("span",{class:"token function"},"strip"),c("span",{class:"token punctuation"},"("),p("num "),c("span",{class:"token operator"},"*"),p(" Math"),c("span",{class:"token punctuation"},"."),c("span",{class:"token function"},"pow"),c("span",{class:"token punctuation"},"("),c("span",{class:"token number"},"10"),c("span",{class:"token punctuation"},","),p(" dLen"),c("span",{class:"token punctuation"},")"),c("span",{class:"token punctuation"},")"),p(),c("span",{class:"token operator"},":"),p(" num"),c("span",{class:"token punctuation"},";"),p("\n"),c("span",{class:"token punctuation"},"}"),p("\n\n"),c("span",{class:"token comment"},"/**\n * 检测数字是否越界，如果越界给出提示\n * @param {*number} num 输入数\n */"),p("\n"),c("span",{class:"token keyword"},"function"),p(),c("span",{class:"token function"},"checkBoundary"),c("span",{class:"token punctuation"},"("),c("span",{class:"token parameter"},[p("num"),c("span",{class:"token operator"},":"),p(" number")]),c("span",{class:"token punctuation"},")"),p(),c("span",{class:"token punctuation"},"{"),p("\n  "),c("span",{class:"token keyword"},"if"),p(),c("span",{class:"token punctuation"},"("),p("num "),c("span",{class:"token operator"},">"),p(" Number"),c("span",{class:"token punctuation"},"."),c("span",{class:"token constant"},"MAX_SAFE_INTEGER"),p(),c("span",{class:"token operator"},"||"),p(" num "),c("span",{class:"token operator"},"<"),p(" Number"),c("span",{class:"token punctuation"},"."),c("span",{class:"token constant"},"MIN_SAFE_INTEGER"),c("span",{class:"token punctuation"},")"),p(),c("span",{class:"token punctuation"},"{"),p("\n    console"),c("span",{class:"token punctuation"},"."),c("span",{class:"token function"},"warn"),c("span",{class:"token punctuation"},"("),c("span",{class:"token template-string"},[c("span",{class:"token template-punctuation string"},"`"),c("span",{class:"token interpolation"},[c("span",{class:"token interpolation-punctuation punctuation"},"${"),p("num"),c("span",{class:"token interpolation-punctuation punctuation"},"}")]),c("span",{class:"token string"}," is beyond boundary when transfer to integer, the results may not be accurate"),c("span",{class:"token template-punctuation string"},"`")]),c("span",{class:"token punctuation"},")"),c("span",{class:"token punctuation"},";"),p("\n  "),c("span",{class:"token punctuation"},"}"),p("\n"),c("span",{class:"token punctuation"},"}"),p("\n\n"),c("span",{class:"token comment"},"/**\n * 精确乘法\n */"),p("\n"),c("span",{class:"token keyword"},"function"),p(),c("span",{class:"token function"},"times"),c("span",{class:"token punctuation"},"("),c("span",{class:"token parameter"},[p("num1"),c("span",{class:"token operator"},":"),p(" number"),c("span",{class:"token punctuation"},","),p(" num2"),c("span",{class:"token operator"},":"),p(" number"),c("span",{class:"token punctuation"},","),p(),c("span",{class:"token operator"},"..."),p("others"),c("span",{class:"token operator"},":"),p(" number"),c("span",{class:"token punctuation"},"["),c("span",{class:"token punctuation"},"]")]),c("span",{class:"token punctuation"},")"),c("span",{class:"token operator"},":"),p(" number "),c("span",{class:"token punctuation"},"{"),p("\n  "),c("span",{class:"token keyword"},"if"),p(),c("span",{class:"token punctuation"},"("),p("others"),c("span",{class:"token punctuation"},"."),p("length "),c("span",{class:"token operator"},">"),p(),c("span",{class:"token number"},"0"),c("span",{class:"token punctuation"},")"),p(),c("span",{class:"token punctuation"},"{"),p("\n    "),c("span",{class:"token keyword"},"return"),p(),c("span",{class:"token function"},"times"),c("span",{class:"token punctuation"},"("),c("span",{class:"token function"},"times"),c("span",{class:"token punctuation"},"("),p("num1"),c("span",{class:"token punctuation"},","),p(" num2"),c("span",{class:"token punctuation"},")"),c("span",{class:"token punctuation"},","),p(" others"),c("span",{class:"token punctuation"},"["),c("span",{class:"token number"},"0"),c("span",{class:"token punctuation"},"]"),c("span",{class:"token punctuation"},","),p(),c("span",{class:"token operator"},"..."),p("others"),c("span",{class:"token punctuation"},"."),c("span",{class:"token function"},"slice"),c("span",{class:"token punctuation"},"("),c("span",{class:"token number"},"1"),c("span",{class:"token punctuation"},")"),c("span",{class:"token punctuation"},")"),c("span",{class:"token punctuation"},";"),p("\n  "),c("span",{class:"token punctuation"},"}"),p("\n  "),c("span",{class:"token keyword"},"const"),p(" num1Changed "),c("span",{class:"token operator"},"="),p(),c("span",{class:"token function"},"float2Fixed"),c("span",{class:"token punctuation"},"("),p("num1"),c("span",{class:"token punctuation"},")"),c("span",{class:"token punctuation"},";"),p("\n  "),c("span",{class:"token keyword"},"const"),p(" num2Changed "),c("span",{class:"token operator"},"="),p(),c("span",{class:"token function"},"float2Fixed"),c("span",{class:"token punctuation"},"("),p("num2"),c("span",{class:"token punctuation"},")"),c("span",{class:"token punctuation"},";"),p("\n  "),c("span",{class:"token keyword"},"const"),p(" baseNum "),c("span",{class:"token operator"},"="),p(),c("span",{class:"token function"},"digitLength"),c("span",{class:"token punctuation"},"("),p("num1"),c("span",{class:"token punctuation"},")"),p(),c("span",{class:"token operator"},"+"),p(),c("span",{class:"token function"},"digitLength"),c("span",{class:"token punctuation"},"("),p("num2"),c("span",{class:"token punctuation"},")"),c("span",{class:"token punctuation"},";"),p("\n  "),c("span",{class:"token keyword"},"const"),p(" leftValue "),c("span",{class:"token operator"},"="),p(" num1Changed "),c("span",{class:"token operator"},"*"),p(" num2Changed"),c("span",{class:"token punctuation"},";"),p("\n\n  "),c("span",{class:"token function"},"checkBoundary"),c("span",{class:"token punctuation"},"("),p("leftValue"),c("span",{class:"token punctuation"},")"),c("span",{class:"token punctuation"},";"),p("\n\n  "),c("span",{class:"token keyword"},"return"),p(" leftValue "),c("span",{class:"token operator"},"/"),p(" Math"),c("span",{class:"token punctuation"},"."),c("span",{class:"token function"},"pow"),c("span",{class:"token punctuation"},"("),c("span",{class:"token number"},"10"),c("span",{class:"token punctuation"},","),p(" baseNum"),c("span",{class:"token punctuation"},")"),c("span",{class:"token punctuation"},";"),p("\n"),c("span",{class:"token punctuation"},"}"),p("\n\n"),c("span",{class:"token comment"},"/**\n * 精确加法\n */"),p("\n"),c("span",{class:"token keyword"},"function"),p(),c("span",{class:"token function"},"plus"),c("span",{class:"token punctuation"},"("),c("span",{class:"token parameter"},[p("num1"),c("span",{class:"token operator"},":"),p(" number"),c("span",{class:"token punctuation"},","),p(" num2"),c("span",{class:"token operator"},":"),p(" number"),c("span",{class:"token punctuation"},","),p(),c("span",{class:"token operator"},"..."),p("others"),c("span",{class:"token operator"},":"),p(" number"),c("span",{class:"token punctuation"},"["),c("span",{class:"token punctuation"},"]")]),c("span",{class:"token punctuation"},")"),c("span",{class:"token operator"},":"),p(" number "),c("span",{class:"token punctuation"},"{"),p("\n  "),c("span",{class:"token keyword"},"if"),p(),c("span",{class:"token punctuation"},"("),p("others"),c("span",{class:"token punctuation"},"."),p("length "),c("span",{class:"token operator"},">"),p(),c("span",{class:"token number"},"0"),c("span",{class:"token punctuation"},")"),p(),c("span",{class:"token punctuation"},"{"),p("\n    "),c("span",{class:"token keyword"},"return"),p(),c("span",{class:"token function"},"plus"),c("span",{class:"token punctuation"},"("),c("span",{class:"token function"},"plus"),c("span",{class:"token punctuation"},"("),p("num1"),c("span",{class:"token punctuation"},","),p(" num2"),c("span",{class:"token punctuation"},")"),c("span",{class:"token punctuation"},","),p(" others"),c("span",{class:"token punctuation"},"["),c("span",{class:"token number"},"0"),c("span",{class:"token punctuation"},"]"),c("span",{class:"token punctuation"},","),p(),c("span",{class:"token operator"},"..."),p("others"),c("span",{class:"token punctuation"},"."),c("span",{class:"token function"},"slice"),c("span",{class:"token punctuation"},"("),c("span",{class:"token number"},"1"),c("span",{class:"token punctuation"},")"),c("span",{class:"token punctuation"},")"),c("span",{class:"token punctuation"},";"),p("\n  "),c("span",{class:"token punctuation"},"}"),p("\n  "),c("span",{class:"token keyword"},"const"),p(" baseNum "),c("span",{class:"token operator"},"="),p(" Math"),c("span",{class:"token punctuation"},"."),c("span",{class:"token function"},"pow"),c("span",{class:"token punctuation"},"("),c("span",{class:"token number"},"10"),c("span",{class:"token punctuation"},","),p(" Math"),c("span",{class:"token punctuation"},"."),c("span",{class:"token function"},"max"),c("span",{class:"token punctuation"},"("),c("span",{class:"token function"},"digitLength"),c("span",{class:"token punctuation"},"("),p("num1"),c("span",{class:"token punctuation"},")"),c("span",{class:"token punctuation"},","),p(),c("span",{class:"token function"},"digitLength"),c("span",{class:"token punctuation"},"("),p("num2"),c("span",{class:"token punctuation"},")"),c("span",{class:"token punctuation"},")"),c("span",{class:"token punctuation"},")"),c("span",{class:"token punctuation"},";"),p("\n  "),c("span",{class:"token keyword"},"return"),p(),c("span",{class:"token punctuation"},"("),c("span",{class:"token function"},"times"),c("span",{class:"token punctuation"},"("),p("num1"),c("span",{class:"token punctuation"},","),p(" baseNum"),c("span",{class:"token punctuation"},")"),p(),c("span",{class:"token operator"},"+"),p(),c("span",{class:"token function"},"times"),c("span",{class:"token punctuation"},"("),p("num2"),c("span",{class:"token punctuation"},","),p(" baseNum"),c("span",{class:"token punctuation"},")"),c("span",{class:"token punctuation"},")"),p(),c("span",{class:"token operator"},"/"),p(" baseNum"),c("span",{class:"token punctuation"},";"),p("\n"),c("span",{class:"token punctuation"},"}"),p("\n\n"),c("span",{class:"token comment"},"/**\n * 精确减法，类似于加法\n */"),p("\n"),c("span",{class:"token keyword"},"function"),p(),c("span",{class:"token function"},"minus"),c("span",{class:"token punctuation"},"("),c("span",{class:"token parameter"},[p("num1"),c("span",{class:"token operator"},":"),p(" number"),c("span",{class:"token punctuation"},","),p(" num2"),c("span",{class:"token operator"},":"),p(" number"),c("span",{class:"token punctuation"},","),p(),c("span",{class:"token operator"},"..."),p("others"),c("span",{class:"token operator"},":"),p(" number"),c("span",{class:"token punctuation"},"["),c("span",{class:"token punctuation"},"]")]),c("span",{class:"token punctuation"},")"),c("span",{class:"token operator"},":"),p(" number "),c("span",{class:"token punctuation"},"{"),p("\n  "),c("span",{class:"token keyword"},"if"),p(),c("span",{class:"token punctuation"},"("),p("others"),c("span",{class:"token punctuation"},"."),p("length "),c("span",{class:"token operator"},">"),p(),c("span",{class:"token number"},"0"),c("span",{class:"token punctuation"},")"),p(),c("span",{class:"token punctuation"},"{"),p("\n    "),c("span",{class:"token keyword"},"return"),p(),c("span",{class:"token function"},"minus"),c("span",{class:"token punctuation"},"("),c("span",{class:"token function"},"minus"),c("span",{class:"token punctuation"},"("),p("num1"),c("span",{class:"token punctuation"},","),p(" num2"),c("span",{class:"token punctuation"},")"),c("span",{class:"token punctuation"},","),p(" others"),c("span",{class:"token punctuation"},"["),c("span",{class:"token number"},"0"),c("span",{class:"token punctuation"},"]"),c("span",{class:"token punctuation"},","),p(),c("span",{class:"token operator"},"..."),p("others"),c("span",{class:"token punctuation"},"."),c("span",{class:"token function"},"slice"),c("span",{class:"token punctuation"},"("),c("span",{class:"token number"},"1"),c("span",{class:"token punctuation"},")"),c("span",{class:"token punctuation"},")"),c("span",{class:"token punctuation"},";"),p("\n  "),c("span",{class:"token punctuation"},"}"),p("\n  "),c("span",{class:"token keyword"},"const"),p(" baseNum "),c("span",{class:"token operator"},"="),p(" Math"),c("span",{class:"token punctuation"},"."),c("span",{class:"token function"},"pow"),c("span",{class:"token punctuation"},"("),c("span",{class:"token number"},"10"),c("span",{class:"token punctuation"},","),p(" Math"),c("span",{class:"token punctuation"},"."),c("span",{class:"token function"},"max"),c("span",{class:"token punctuation"},"("),c("span",{class:"token function"},"digitLength"),c("span",{class:"token punctuation"},"("),p("num1"),c("span",{class:"token punctuation"},")"),c("span",{class:"token punctuation"},","),p(),c("span",{class:"token function"},"digitLength"),c("span",{class:"token punctuation"},"("),p("num2"),c("span",{class:"token punctuation"},")"),c("span",{class:"token punctuation"},")"),c("span",{class:"token punctuation"},")"),c("span",{class:"token punctuation"},";"),p("\n  "),c("span",{class:"token keyword"},"return"),p(),c("span",{class:"token punctuation"},"("),c("span",{class:"token function"},"times"),c("span",{class:"token punctuation"},"("),p("num1"),c("span",{class:"token punctuation"},","),p(" baseNum"),c("span",{class:"token punctuation"},")"),p(),c("span",{class:"token operator"},"-"),p(),c("span",{class:"token function"},"times"),c("span",{class:"token punctuation"},"("),p("num2"),c("span",{class:"token punctuation"},","),p(" baseNum"),c("span",{class:"token punctuation"},")"),c("span",{class:"token punctuation"},")"),p(),c("span",{class:"token operator"},"/"),p(" baseNum"),c("span",{class:"token punctuation"},";"),p("\n"),c("span",{class:"token punctuation"},"}"),p("\n\n"),c("span",{class:"token comment"},"/**\n * 精确除法\n */"),p("\n"),c("span",{class:"token keyword"},"function"),p(),c("span",{class:"token function"},"divide"),c("span",{class:"token punctuation"},"("),c("span",{class:"token parameter"},[p("num1"),c("span",{class:"token operator"},":"),p(" number"),c("span",{class:"token punctuation"},","),p(" num2"),c("span",{class:"token operator"},":"),p(" number"),c("span",{class:"token punctuation"},","),p(),c("span",{class:"token operator"},"..."),p("others"),c("span",{class:"token operator"},":"),p(" number"),c("span",{class:"token punctuation"},"["),c("span",{class:"token punctuation"},"]")]),c("span",{class:"token punctuation"},")"),c("span",{class:"token operator"},":"),p(" number "),c("span",{class:"token punctuation"},"{"),p("\n  "),c("span",{class:"token keyword"},"if"),p(),c("span",{class:"token punctuation"},"("),p("others"),c("span",{class:"token punctuation"},"."),p("length "),c("span",{class:"token operator"},">"),p(),c("span",{class:"token number"},"0"),c("span",{class:"token punctuation"},")"),p(),c("span",{class:"token punctuation"},"{"),p("\n    "),c("span",{class:"token keyword"},"return"),p(),c("span",{class:"token function"},"divide"),c("span",{class:"token punctuation"},"("),c("span",{class:"token function"},"divide"),c("span",{class:"token punctuation"},"("),p("num1"),c("span",{class:"token punctuation"},","),p(" num2"),c("span",{class:"token punctuation"},")"),c("span",{class:"token punctuation"},","),p(" others"),c("span",{class:"token punctuation"},"["),c("span",{class:"token number"},"0"),c("span",{class:"token punctuation"},"]"),c("span",{class:"token punctuation"},","),p(),c("span",{class:"token operator"},"..."),p("others"),c("span",{class:"token punctuation"},"."),c("span",{class:"token function"},"slice"),c("span",{class:"token punctuation"},"("),c("span",{class:"token number"},"1"),c("span",{class:"token punctuation"},")"),c("span",{class:"token punctuation"},")"),c("span",{class:"token punctuation"},";"),p("\n  "),c("span",{class:"token punctuation"},"}"),p("\n  "),c("span",{class:"token keyword"},"const"),p(" num1Changed "),c("span",{class:"token operator"},"="),p(),c("span",{class:"token function"},"float2Fixed"),c("span",{class:"token punctuation"},"("),p("num1"),c("span",{class:"token punctuation"},")"),c("span",{class:"token punctuation"},";"),p("\n  "),c("span",{class:"token keyword"},"const"),p(" num2Changed "),c("span",{class:"token operator"},"="),p(),c("span",{class:"token function"},"float2Fixed"),c("span",{class:"token punctuation"},"("),p("num2"),c("span",{class:"token punctuation"},")"),c("span",{class:"token punctuation"},";"),p("\n  "),c("span",{class:"token function"},"checkBoundary"),c("span",{class:"token punctuation"},"("),p("num1Changed"),c("span",{class:"token punctuation"},")"),c("span",{class:"token punctuation"},";"),p("\n  "),c("span",{class:"token function"},"checkBoundary"),c("span",{class:"token punctuation"},"("),p("num2Changed"),c("span",{class:"token punctuation"},")"),c("span",{class:"token punctuation"},";"),p("\n  "),c("span",{class:"token keyword"},"return"),p(),c("span",{class:"token function"},"times"),c("span",{class:"token punctuation"},"("),c("span",{class:"token punctuation"},"("),p("num1Changed "),c("span",{class:"token operator"},"/"),p(" num2Changed"),c("span",{class:"token punctuation"},")"),c("span",{class:"token punctuation"},","),p(" Math"),c("span",{class:"token punctuation"},"."),c("span",{class:"token function"},"pow"),c("span",{class:"token punctuation"},"("),c("span",{class:"token number"},"10"),c("span",{class:"token punctuation"},","),p(),c("span",{class:"token function"},"digitLength"),c("span",{class:"token punctuation"},"("),p("num2"),c("span",{class:"token punctuation"},")"),p(),c("span",{class:"token operator"},"-"),p(),c("span",{class:"token function"},"digitLength"),c("span",{class:"token punctuation"},"("),p("num1"),c("span",{class:"token punctuation"},")"),c("span",{class:"token punctuation"},")"),c("span",{class:"token punctuation"},")"),c("span",{class:"token punctuation"},";"),p("\n"),c("span",{class:"token punctuation"},"}"),p("\n\n"),c("span",{class:"token comment"},"/**\n * 四舍五入\n */"),p("\n"),c("span",{class:"token keyword"},"function"),p(),c("span",{class:"token function"},"round"),c("span",{class:"token punctuation"},"("),c("span",{class:"token parameter"},[p("num"),c("span",{class:"token operator"},":"),p(" number"),c("span",{class:"token punctuation"},","),p(" ratio"),c("span",{class:"token operator"},":"),p(" number")]),c("span",{class:"token punctuation"},")"),c("span",{class:"token operator"},":"),p(" number "),c("span",{class:"token punctuation"},"{"),p("\n  "),c("span",{class:"token keyword"},"const"),p(" base "),c("span",{class:"token operator"},"="),p(" Math"),c("span",{class:"token punctuation"},"."),c("span",{class:"token function"},"pow"),c("span",{class:"token punctuation"},"("),c("span",{class:"token number"},"10"),c("span",{class:"token punctuation"},","),p(" ratio"),c("span",{class:"token punctuation"},")"),c("span",{class:"token punctuation"},";"),p("\n  "),c("span",{class:"token keyword"},"return"),p(),c("span",{class:"token function"},"divide"),c("span",{class:"token punctuation"},"("),p("Math"),c("span",{class:"token punctuation"},"."),c("span",{class:"token function"},"round"),c("span",{class:"token punctuation"},"("),c("span",{class:"token function"},"times"),c("span",{class:"token punctuation"},"("),p("num"),c("span",{class:"token punctuation"},","),p(" base"),c("span",{class:"token punctuation"},")"),c("span",{class:"token punctuation"},")"),c("span",{class:"token punctuation"},","),p(" base"),c("span",{class:"token punctuation"},")"),c("span",{class:"token punctuation"},";"),p("\n"),c("span",{class:"token punctuation"},"}"),p("\n")])]),c("div",{class:"line-numbers-wrapper"},[c("span",{class:"line-number"},"1"),c("br"),c("span",{class:"line-number"},"2"),c("br"),c("span",{class:"line-number"},"3"),c("br"),c("span",{class:"line-number"},"4"),c("br"),c("span",{class:"line-number"},"5"),c("br"),c("span",{class:"line-number"},"6"),c("br"),c("span",{class:"line-number"},"7"),c("br"),c("span",{class:"line-number"},"8"),c("br"),c("span",{class:"line-number"},"9"),c("br"),c("span",{class:"line-number"},"10"),c("br"),c("span",{class:"line-number"},"11"),c("br"),c("span",{class:"line-number"},"12"),c("br"),c("span",{class:"line-number"},"13"),c("br"),c("span",{class:"line-number"},"14"),c("br"),c("span",{class:"line-number"},"15"),c("br"),c("span",{class:"line-number"},"16"),c("br"),c("span",{class:"line-number"},"17"),c("br"),c("span",{class:"line-number"},"18"),c("br"),c("span",{class:"line-number"},"19"),c("br"),c("span",{class:"line-number"},"20"),c("br"),c("span",{class:"line-number"},"21"),c("br"),c("span",{class:"line-number"},"22"),c("br"),c("span",{class:"line-number"},"23"),c("br"),c("span",{class:"line-number"},"24"),c("br"),c("span",{class:"line-number"},"25"),c("br"),c("span",{class:"line-number"},"26"),c("br"),c("span",{class:"line-number"},"27"),c("br"),c("span",{class:"line-number"},"28"),c("br"),c("span",{class:"line-number"},"29"),c("br"),c("span",{class:"line-number"},"30"),c("br"),c("span",{class:"line-number"},"31"),c("br"),c("span",{class:"line-number"},"32"),c("br"),c("span",{class:"line-number"},"33"),c("br"),c("span",{class:"line-number"},"34"),c("br"),c("span",{class:"line-number"},"35"),c("br"),c("span",{class:"line-number"},"36"),c("br"),c("span",{class:"line-number"},"37"),c("br"),c("span",{class:"line-number"},"38"),c("br"),c("span",{class:"line-number"},"39"),c("br"),c("span",{class:"line-number"},"40"),c("br"),c("span",{class:"line-number"},"41"),c("br"),c("span",{class:"line-number"},"42"),c("br"),c("span",{class:"line-number"},"43"),c("br"),c("span",{class:"line-number"},"44"),c("br"),c("span",{class:"line-number"},"45"),c("br"),c("span",{class:"line-number"},"46"),c("br"),c("span",{class:"line-number"},"47"),c("br"),c("span",{class:"line-number"},"48"),c("br"),c("span",{class:"line-number"},"49"),c("br"),c("span",{class:"line-number"},"50"),c("br"),c("span",{class:"line-number"},"51"),c("br"),c("span",{class:"line-number"},"52"),c("br"),c("span",{class:"line-number"},"53"),c("br"),c("span",{class:"line-number"},"54"),c("br"),c("span",{class:"line-number"},"55"),c("br"),c("span",{class:"line-number"},"56"),c("br"),c("span",{class:"line-number"},"57"),c("br"),c("span",{class:"line-number"},"58"),c("br"),c("span",{class:"line-number"},"59"),c("br"),c("span",{class:"line-number"},"60"),c("br"),c("span",{class:"line-number"},"61"),c("br"),c("span",{class:"line-number"},"62"),c("br"),c("span",{class:"line-number"},"63"),c("br"),c("span",{class:"line-number"},"64"),c("br"),c("span",{class:"line-number"},"65"),c("br"),c("span",{class:"line-number"},"66"),c("br"),c("span",{class:"line-number"},"67"),c("br"),c("span",{class:"line-number"},"68"),c("br"),c("span",{class:"line-number"},"69"),c("br"),c("span",{class:"line-number"},"70"),c("br"),c("span",{class:"line-number"},"71"),c("br"),c("span",{class:"line-number"},"72"),c("br"),c("span",{class:"line-number"},"73"),c("br"),c("span",{class:"line-number"},"74"),c("br"),c("span",{class:"line-number"},"75"),c("br"),c("span",{class:"line-number"},"76"),c("br"),c("span",{class:"line-number"},"77"),c("br"),c("span",{class:"line-number"},"78"),c("br"),c("span",{class:"line-number"},"79"),c("br"),c("span",{class:"line-number"},"80"),c("br"),c("span",{class:"line-number"},"81"),c("br"),c("span",{class:"line-number"},"82"),c("br"),c("span",{class:"line-number"},"83"),c("br"),c("span",{class:"line-number"},"84"),c("br"),c("span",{class:"line-number"},"85"),c("br"),c("span",{class:"line-number"},"86"),c("br"),c("span",{class:"line-number"},"87"),c("br"),c("span",{class:"line-number"},"88"),c("br"),c("span",{class:"line-number"},"89"),c("br"),c("span",{class:"line-number"},"90"),c("br"),c("span",{class:"line-number"},"91"),c("br"),c("span",{class:"line-number"},"92"),c("br"),c("span",{class:"line-number"},"93"),c("br"),c("span",{class:"line-number"},"94"),c("br"),c("span",{class:"line-number"},"95"),c("br"),c("span",{class:"line-number"},"96"),c("br"),c("span",{class:"line-number"},"97"),c("br"),c("span",{class:"line-number"},"98"),c("br"),c("span",{class:"line-number"},"99"),c("br"),c("span",{class:"line-number"},"100"),c("br"),c("span",{class:"line-number"},"101"),c("br")])],-1);var T=n(i,[["render",function(n,o,c,p,l,i){const T=s("code-block");return u(),a("div",null,[r,t(T,{showAction:!1},{default:e((()=>[k])),_:1}),b,m,t(T,{showAction:!1},{default:e((()=>[d])),_:1}),f,h,t(T,{showAction:!1},{default:e((()=>[g])),_:1}),w,t(T,{showAction:!1},{default:e((()=>[y])),_:1}),v,t(T,{showAction:!1},{default:e((()=>[x])),_:1}),_,S,N,t(T,{showAction:!1},{default:e((()=>[M])),_:1}),P,E,F,t(T,{showAction:!1},{default:e((()=>[A])),_:1})])}]]);export{l as __pageData,T as default};
