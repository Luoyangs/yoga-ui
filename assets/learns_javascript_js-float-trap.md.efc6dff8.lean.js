import{_ as n,r as s,c as a,a as t,w as e,f as o,e as c,b as p,o as u}from"./app.de0c49ac.js";const l='{"title":"JavaScript 浮点数陷阱及解法","description":"","frontmatter":{},"headers":[{"level":2,"title":"浮点数的存储","slug":"浮点数的存储"},{"level":3,"title":"为什么 0.1+0.2=0.30000000000000004？","slug":"为什么-0-1-0-2-0-30000000000000004？"},{"level":3,"title":"为什么 x=0.1 能得到 0.1？","slug":"为什么-x-0-1-能得到-0-1？"},{"level":2,"title":"大数危机","slug":"大数危机"},{"level":3,"title":"toPrecision vs toFixed","slug":"toprecision-vs-tofixed"},{"level":3,"title":"解决方案","slug":"解决方案"},{"level":3,"title":"数据展示类","slug":"数据展示类"},{"level":3,"title":"数据运算类","slug":"数据运算类"},{"level":3,"title":"number-precision","slug":"number-precision"}],"relativePath":"learns/javascript/js-float-trap.md","lastUpdated":1635307774051}',i={},r=o('',16),k=c("div",{class:"language-"},[c("pre",null,[c("code",null,"// 0.1 和 0.2 都转化成二进制后再进行运算\n0.00011001100110011001100110011001100110011001100110011010 +\n0.0011001100110011001100110011001100110011001100110011010 =\n0.0100110011001100110011001100110011001100110011001100111\n\n// 转成十进制正好是 0.30000000000000004\n")]),c("div",{class:"line-numbers-wrapper"},[c("span",{class:"line-number"},"1"),c("br"),c("span",{class:"line-number"},"2"),c("br"),c("span",{class:"line-number"},"3"),c("br"),c("span",{class:"line-number"},"4"),c("br"),c("span",{class:"line-number"},"5"),c("br"),c("span",{class:"line-number"},"6"),c("br")])],-1),b=c("h3",{id:"为什么-x-0-1-能得到-0-1？",tabindex:"-1"},[p("为什么 x=0.1 能得到 0.1？ "),c("a",{class:"header-anchor",href:"#为什么-x-0-1-能得到-0-1？","aria-hidden":"true"},"#")],-1),m=c("p",null,"恭喜你到了看山不是山的境界。因为 mantissa 固定长度是 52 位，再加上省略的一位，最多可以表示的数是 2^53=9007199254740992，对应科学计数尾数是 9.007199254740992，这也是 JS 最多能表示的精度。它的长度是 16，所以可以使用 toPrecision(16) 来做精度运算，超过的精度会自动做凑整处理。于是就有：",-1),d=c("div",{class:"language-js line-numbers-mode"},[c("pre",null,[c("code",null,[c("span",{class:"token number"},"0.10000000000000000555"),c("span",{class:"token punctuation"},"."),c("span",{class:"token function"},"toPrecision"),c("span",{class:"token punctuation"},"("),c("span",{class:"token number"},"16"),c("span",{class:"token punctuation"},")"),p("\n"),c("span",{class:"token comment"},"// 返回 0.1000000000000000，去掉末尾的零后正好为 0.1"),p("\n\n"),c("span",{class:"token comment"},"// 但你看到的 `0.1` 实际上并不是 `0.1`。不信你可用更高的精度试试："),p("\n"),c("span",{class:"token number"},"0.1"),c("span",{class:"token punctuation"},"."),c("span",{class:"token function"},"toPrecision"),c("span",{class:"token punctuation"},"("),c("span",{class:"token number"},"17"),c("span",{class:"token punctuation"},")"),p(),c("span",{class:"token operator"},"="),p(),c("span",{class:"token number"},"0.10000000000000001"),p("\n"),c("span",{class:"token number"},"0.1"),c("span",{class:"token punctuation"},"."),c("span",{class:"token function"},"toPrecision"),c("span",{class:"token punctuation"},"("),c("span",{class:"token number"},"21"),c("span",{class:"token punctuation"},")"),p(),c("span",{class:"token operator"},"="),p(),c("span",{class:"token number"},"0.100000000000000005551"),p("\n")])]),c("div",{class:"line-numbers-wrapper"},[c("span",{class:"line-number"},"1"),c("br"),c("span",{class:"line-number"},"2"),c("br"),c("span",{class:"line-number"},"3"),c("br"),c("span",{class:"line-number"},"4"),c("br"),c("span",{class:"line-number"},"5"),c("br"),c("span",{class:"line-number"},"6"),c("br")])],-1),f=c("h2",{id:"大数危机",tabindex:"-1"},[p("大数危机 "),c("a",{class:"header-anchor",href:"#大数危机","aria-hidden":"true"},"#")],-1),h=c("p",null,"可能你已经隐约感觉到了，如果整数大于 9007199254740992 会出现什么情况呢？ 由于 E 最大值是 1023，所以最大可以表示的整数是 2^1024 - 1，这就是能表示的最大整数。但你并不能这样计算这个数字，因为从 2^1024 开始就变成了 Infinity",-1),g=c("div",{class:"language-js line-numbers-mode"},[c("pre",null,[c("code",null,[c("span",{class:"token operator"},">"),p(" Math"),c("span",{class:"token punctuation"},"."),c("span",{class:"token function"},"pow"),c("span",{class:"token punctuation"},"("),c("span",{class:"token number"},"2"),c("span",{class:"token punctuation"},","),p(),c("span",{class:"token number"},"1023"),c("span",{class:"token punctuation"},")"),p("\n"),c("span",{class:"token number"},"8.98846567431158e+307"),p("\n\n"),c("span",{class:"token operator"},">"),p(" Math"),c("span",{class:"token punctuation"},"."),c("span",{class:"token function"},"pow"),c("span",{class:"token punctuation"},"("),c("span",{class:"token number"},"2"),c("span",{class:"token punctuation"},","),p(),c("span",{class:"token number"},"1024"),c("span",{class:"token punctuation"},")"),p("\n"),c("span",{class:"token number"},"Infinity"),p("\n")])]),c("div",{class:"line-numbers-wrapper"},[c("span",{class:"line-number"},"1"),c("br"),c("span",{class:"line-number"},"2"),c("br"),c("span",{class:"line-number"},"3"),c("br"),c("span",{class:"line-number"},"4"),c("br"),c("span",{class:"line-number"},"5"),c("br")])],-1),w=o('',18),y=c("div",{class:"language-js line-numbers-mode"},[c("pre",null,[c("code",null,[c("span",{class:"token function"},"parseFloat"),c("span",{class:"token punctuation"},"("),c("span",{class:"token number"},"1.4000000000000001"),c("span",{class:"token punctuation"},"."),c("span",{class:"token function"},"toPrecision"),c("span",{class:"token punctuation"},"("),c("span",{class:"token number"},"12"),c("span",{class:"token punctuation"},")"),c("span",{class:"token punctuation"},")"),p(),c("span",{class:"token operator"},"==="),p(),c("span",{class:"token number"},"1.4"),p("  "),c("span",{class:"token comment"},"// True"),p("\n")])]),c("div",{class:"line-numbers-wrapper"},[c("span",{class:"line-number"},"1"),c("br")])],-1),v=c("p",null,"封装成方法就是：",-1),x=c("div",{class:"language-js line-numbers-mode"},[c("pre",null,[c("code",null,[c("span",{class:"token keyword"},"function"),p(),c("span",{class:"token function"},"strip"),c("span",{class:"token punctuation"},"("),c("span",{class:"token parameter"},[p("num"),c("span",{class:"token punctuation"},","),p(" precision "),c("span",{class:"token operator"},"="),p(),c("span",{class:"token number"},"12")]),c("span",{class:"token punctuation"},")"),p(),c("span",{class:"token punctuation"},"{"),p("\n  "),c("span",{class:"token keyword"},"return"),p(),c("span",{class:"token operator"},"+"),c("span",{class:"token function"},"parseFloat"),c("span",{class:"token punctuation"},"("),p("num"),c("span",{class:"token punctuation"},"."),c("span",{class:"token function"},"toPrecision"),c("span",{class:"token punctuation"},"("),p("precision"),c("span",{class:"token punctuation"},")"),c("span",{class:"token punctuation"},")"),c("span",{class:"token punctuation"},";"),p("\n"),c("span",{class:"token punctuation"},"}"),p("\n")])]),c("div",{class:"line-numbers-wrapper"},[c("span",{class:"line-number"},"1"),c("br"),c("span",{class:"line-number"},"2"),c("br"),c("span",{class:"line-number"},"3"),c("br")])],-1),_=c("p",null,"为什么选择 12 做为默认精度？这是一个经验的选择，一般选12就能解决掉大部分0001和0009问题，而且大部分情况下也够用了，如果你需要更精确可以调高。",-1),S=c("h3",{id:"数据运算类",tabindex:"-1"},[p("数据运算类 "),c("a",{class:"header-anchor",href:"#数据运算类","aria-hidden":"true"},"#")],-1),N=c("p",null,"对于运算类操作，如 +-*/，就不能使用 toPrecision 了。正确的做法是把小数转成整数后再运算。以加法为例：",-1),M=c("div",{class:"language-js line-numbers-mode"},[c("pre",null,[c("code",null,[c("span",{class:"token comment"},"/**\n * 精确加法\n */"),p("\n"),c("span",{class:"token keyword"},"function"),p(),c("span",{class:"token function"},"add"),c("span",{class:"token punctuation"},"("),c("span",{class:"token parameter"},[p("num1"),c("span",{class:"token punctuation"},","),p(" num2")]),c("span",{class:"token punctuation"},")"),p(),c("span",{class:"token punctuation"},"{"),p("\n  "),c("span",{class:"token keyword"},"const"),p(" num1Digits "),c("span",{class:"token operator"},"="),p(),c("span",{class:"token punctuation"},"("),p("num1"),c("span",{class:"token punctuation"},"."),c("span",{class:"token function"},"toString"),c("span",{class:"token punctuation"},"("),c("span",{class:"token punctuation"},")"),c("span",{class:"token punctuation"},"."),c("span",{class:"token function"},"split"),c("span",{class:"token punctuation"},"("),c("span",{class:"token string"},"'.'"),c("span",{class:"token punctuation"},")"),c("span",{class:"token punctuation"},"["),c("span",{class:"token number"},"1"),c("span",{class:"token punctuation"},"]"),p(),c("span",{class:"token operator"},"||"),p(),c("span",{class:"token string"},"''"),c("span",{class:"token punctuation"},")"),c("span",{class:"token punctuation"},"."),p("length"),c("span",{class:"token punctuation"},";"),p("\n  "),c("span",{class:"token keyword"},"const"),p(" num2Digits "),c("span",{class:"token operator"},"="),p(),c("span",{class:"token punctuation"},"("),p("num2"),c("span",{class:"token punctuation"},"."),c("span",{class:"token function"},"toString"),c("span",{class:"token punctuation"},"("),c("span",{class:"token punctuation"},")"),c("span",{class:"token punctuation"},"."),c("span",{class:"token function"},"split"),c("span",{class:"token punctuation"},"("),c("span",{class:"token string"},"'.'"),c("span",{class:"token punctuation"},")"),c("span",{class:"token punctuation"},"["),c("span",{class:"token number"},"1"),c("span",{class:"token punctuation"},"]"),p(),c("span",{class:"token operator"},"||"),p(),c("span",{class:"token string"},"''"),c("span",{class:"token punctuation"},")"),c("span",{class:"token punctuation"},"."),p("length"),c("span",{class:"token punctuation"},";"),p("\n  "),c("span",{class:"token keyword"},"const"),p(" baseNum "),c("span",{class:"token operator"},"="),p(" Math"),c("span",{class:"token punctuation"},"."),c("span",{class:"token function"},"pow"),c("span",{class:"token punctuation"},"("),c("span",{class:"token number"},"10"),c("span",{class:"token punctuation"},","),p(" Math"),c("span",{class:"token punctuation"},"."),c("span",{class:"token function"},"max"),c("span",{class:"token punctuation"},"("),p("num1Digits"),c("span",{class:"token punctuation"},","),p(" num2Digits"),c("span",{class:"token punctuation"},")"),c("span",{class:"token punctuation"},")"),c("span",{class:"token punctuation"},";"),p("\n  "),c("span",{class:"token keyword"},"return"),p(),c("span",{class:"token punctuation"},"("),p("num1 "),c("span",{class:"token operator"},"*"),p(" baseNum "),c("span",{class:"token operator"},"+"),p(" num2 "),c("span",{class:"token operator"},"*"),p(" baseNum"),c("span",{class:"token punctuation"},")"),p(),c("span",{class:"token operator"},"/"),p(" baseNum"),c("span",{class:"token punctuation"},";"),p("\n"),c("span",{class:"token punctuation"},"}"),p("\n")])]),c("div",{class:"line-numbers-wrapper"},[c("span",{class:"line-number"},"1"),c("br"),c("span",{class:"line-number"},"2"),c("br"),c("span",{class:"line-number"},"3"),c("br"),c("span",{class:"line-number"},"4"),c("br"),c("span",{class:"line-number"},"5"),c("br"),c("span",{class:"line-number"},"6"),c("br"),c("span",{class:"line-number"},"7"),c("br"),c("span",{class:"line-number"},"8"),c("br"),c("span",{class:"line-number"},"9"),c("br")])],-1),P=c("p",null,"以上方法能适用于大部分场景。遇到科学计数法如 2.3e+1（当数字精度大于21时，数字会强制转为科学计数法形式显示）时还需要特别处理一下。",-1),E=c("h3",{id:"number-precision",tabindex:"-1"},[p("number-precision "),c("a",{class:"header-anchor",href:"#number-precision","aria-hidden":"true"},"#")],-1),F=c("p",null,"完美支持浮点数的加减乘除、四舍五入等运算。非常小只有1K，远小于绝大多数同类库（如Math.js、BigDecimal.js），100%测试全覆盖，代码可读性强，不妨在你的应用里用起来！",-1),A=c("div",{class:"language-js line-numbers-mode"},[c("pre",null,[c("code",null,[c("span",{class:"token comment"},"/**\n * 把错误的数据转正\n * strip(0.09999999999999998)=0.1\n */"),p("\n"),c("span",{class:"token keyword"},"function"),p(),c("span",{class:"token function"},"strip"),c("span",{class:"token punctuation"},"("),c("span",{class:"token parameter"},[p("num"),c("span",{class:"token operator"},":"),p(" number"),c("span",{class:"token punctuation"},","),p(" precision "),c("span",{class:"token operator"},"="),p(),c("span",{class:"token number"},"12")]),c("span",{class:"token punctuation"},")"),c("span",{class:"token operator"},":"),p(" number "),c("span",{class:"token punctuation"},"{"),p("\n  "),c("span",{class:"token keyword"},"return"),p(),c("span",{class:"token operator"},"+"),c("span",{class:"token function"},"parseFloat"),c("span",{class:"token punctuation"},"("),p("num"),c("span",{class:"token punctuation"},"."),c("span",{class:"token function"},"toPrecision"),c("span",{class:"token punctuation"},"("),p("precision"),c("span",{class:"token punctuation"},")"),c("span",{class:"token punctuation"},")"),c("span",{class:"token punctuation"},";"),p("\n"),c("span",{class:"token punctuation"},"}"),p("\n\n"),c("span",{class:"token comment"},"/**\n * Return digits length of a number\n * @param {*number} num Input number\n */"),p("\n"),c("span",{class:"token keyword"},"function"),p(),c("span",{class:"token function"},"digitLength"),c("span",{class:"token punctuation"},"("),c("span",{class:"token parameter"},[p("num"),c("span",{class:"token operator"},":"),p(" number")]),c("span",{class:"token punctuation"},")"),c("span",{class:"token operator"},":"),p(" number "),c("span",{class:"token punctuation"},"{"),p("\n  "),c("span",{class:"token comment"},"// Get digit length of e"),p("\n  "),c("span",{class:"token keyword"},"const"),p(" eSplit "),c("span",{class:"token operator"},"="),p(" num"),c("span",{class:"token punctuation"},"."),c("span",{class:"token function"},"toString"),c("span",{class:"token punctuation"},"("),c("span",{class:"token punctuation"},")"),c("span",{class:"token punctuation"},"."),c("span",{class:"token function"},"split"),c("span",{class:"token punctuation"},"("),c("span",{class:"token regex"},[c("span",{class:"token regex-delimiter"},"/"),c("span",{class:"token regex-source language-regex"},"[eE]"),c("span",{class:"token regex-delimiter"},"/")]),c("span",{class:"token punctuation"},")"),c("span",{class:"token punctuation"},";"),p("\n  "),c("span",{class:"token keyword"},"const"),p(" len "),c("span",{class:"token operator"},"="),p(),c("span",{class:"token punctuation"},"("),p("eSplit"),c("span",{class:"token punctuation"},"["),c("span",{class:"token number"},"0"),c("span",{class:"token punctuation"},"]"),c("span",{class:"token punctuation"},"."),c("span",{class:"token function"},"split"),c("span",{class:"token punctuation"},"("),c("span",{class:"token string"},"'.'"),c("span",{class:"token punctuation"},")"),c("span",{class:"token punctuation"},"["),c("span",{class:"token number"},"1"),c("span",{class:"token punctuation"},"]"),p(),c("span",{class:"token operator"},"||"),p(),c("span",{class:"token string"},"''"),c("span",{class:"token punctuation"},")"),c("span",{class:"token punctuation"},"."),p("length "),c("span",{class:"token operator"},"-"),p(),c("span",{class:"token punctuation"},"("),c("span",{class:"token operator"},"+"),c("span",{class:"token punctuation"},"("),p("eSplit"),c("span",{class:"token punctuation"},"["),c("span",{class:"token number"},"1"),c("span",{class:"token punctuation"},"]"),p(),c("span",{class:"token operator"},"||"),p(),c("span",{class:"token number"},"0"),c("span",{class:"token punctuation"},")"),c("span",{class:"token punctuation"},")"),c("span",{class:"token punctuation"},";"),p("\n  "),c("span",{class:"token keyword"},"return"),p(" len "),c("span",{class:"token operator"},">"),p(),c("span",{class:"token number"},"0"),p(),c("span",{class:"token operator"},"?"),p(" len "),c("span",{class:"token operator"},":"),p(),c("span",{class:"token number"},"0"),c("span",{class:"token punctuation"},";"),p("\n"),c("span",{class:"token punctuation"},"}"),p("\n\n"),c("span",{class:"token comment"},"/**\n * 把小数转成整数，支持科学计数法。如果是小数则放大成整数\n * @param {*number} num 输入数\n */"),p("\n"),c("span",{class:"token keyword"},"function"),p(),c("span",{class:"token function"},"float2Fixed"),c("span",{class:"token punctuation"},"("),c("span",{class:"token parameter"},[p("num"),c("span",{class:"token operator"},":"),p(" number")]),c("span",{class:"token punctuation"},")"),c("span",{class:"token operator"},":"),p(" number "),c("span",{class:"token punctuation"},"{"),p("\n  "),c("span",{class:"token keyword"},"if"),p(),c("span",{class:"token punctuation"},"("),p("num"),c("span",{class:"token punctuation"},"."),c("span",{class:"token function"},"toString"),c("span",{class:"token punctuation"},"("),c("span",{class:"token punctuation"},")"),c("span",{class:"token punctuation"},"."),c("span",{class:"token function"},"indexOf"),c("span",{class:"token punctuation"},"("),c("span",{class:"token string"},"'e'"),c("span",{class:"token punctuation"},")"),p(),c("span",{class:"token operator"},"==="),p(),c("span",{class:"token operator"},"-"),c("span",{class:"token number"},"1"),c("span",{class:"token punctuation"},")"),p(),c("span",{class:"token punctuation"},"{"),p("\n    "),c("span",{class:"token keyword"},"return"),p(),c("span",{class:"token function"},"Number"),c("span",{class:"token punctuation"},"("),p("num"),c("span",{class:"token punctuation"},"."),c("span",{class:"token function"},"toString"),c("span",{class:"token punctuation"},"("),c("span",{class:"token punctuation"},")"),c("span",{class:"token punctuation"},"."),c("span",{class:"token function"},"replace"),c("span",{class:"token punctuation"},"("),c("span",{class:"token string"},"'.'"),c("span",{class:"token punctuation"},","),p(),c("span",{class:"token string"},"''"),c("span",{class:"token punctuation"},")"),c("span",{class:"token punctuation"},")"),c("span",{class:"token punctuation"},";"),p("\n  "),c("span",{class:"token punctuation"},"}"),p("\n  "),c("span",{class:"token keyword"},"const"),p(" dLen "),c("span",{class:"token operator"},"="),p(),c("span",{class:"token function"},"digitLength"),c("span",{class:"token punctuation"},"("),p("num"),c("span",{class:"token punctuation"},")"),c("span",{class:"token punctuation"},";"),p("\n  "),c("span",{class:"token keyword"},"return"),p(" dLen "),c("span",{class:"token operator"},">"),p(),c("span",{class:"token number"},"0"),p(),c("span",{class:"token operator"},"?"),p(),c("span",{class:"token function"},"strip"),c("span",{class:"token punctuation"},"("),p("num "),c("span",{class:"token operator"},"*"),p(" Math"),c("span",{class:"token punctuation"},"."),c("span",{class:"token function"},"pow"),c("span",{class:"token punctuation"},"("),c("span",{class:"token number"},"10"),c("span",{class:"token punctuation"},","),p(" dLen"),c("span",{class:"token punctuation"},")"),c("span",{class:"token punctuation"},")"),p(),c("span",{class:"token operator"},":"),p(" num"),c("span",{class:"token punctuation"},";"),p("\n"),c("span",{class:"token punctuation"},"}"),p("\n\n"),c("span",{class:"token comment"},"/**\n * 检测数字是否越界，如果越界给出提示\n * @param {*number} num 输入数\n */"),p("\n"),c("span",{class:"token keyword"},"function"),p(),c("span",{class:"token function"},"checkBoundary"),c("span",{class:"token punctuation"},"("),c("span",{class:"token parameter"},[p("num"),c("span",{class:"token operator"},":"),p(" number")]),c("span",{class:"token punctuation"},")"),p(),c("span",{class:"token punctuation"},"{"),p("\n  "),c("span",{class:"token keyword"},"if"),p(),c("span",{class:"token punctuation"},"("),p("num "),c("span",{class:"token operator"},">"),p(" Number"),c("span",{class:"token punctuation"},"."),c("span",{class:"token constant"},"MAX_SAFE_INTEGER"),p(),c("span",{class:"token operator"},"||"),p(" num "),c("span",{class:"token operator"},"<"),p(" Number"),c("span",{class:"token punctuation"},"."),c("span",{class:"token constant"},"MIN_SAFE_INTEGER"),c("span",{class:"token punctuation"},")"),p(),c("span",{class:"token punctuation"},"{"),p("\n    console"),c("span",{class:"token punctuation"},"."),c("span",{class:"token function"},"warn"),c("span",{class:"token punctuation"},"("),c("span",{class:"token template-string"},[c("span",{class:"token template-punctuation string"},"`"),c("span",{class:"token interpolation"},[c("span",{class:"token interpolation-punctuation punctuation"},"${"),p("num"),c("span",{class:"token interpolation-punctuation punctuation"},"}")]),c("span",{class:"token string"}," is beyond boundary when transfer to integer, the results may not be accurate"),c("span",{class:"token template-punctuation string"},"`")]),c("span",{class:"token punctuation"},")"),c("span",{class:"token punctuation"},";"),p("\n  "),c("span",{class:"token punctuation"},"}"),p("\n"),c("span",{class:"token punctuation"},"}"),p("\n\n"),c("span",{class:"token comment"},"/**\n * 精确乘法\n */"),p("\n"),c("span",{class:"token keyword"},"function"),p(),c("span",{class:"token function"},"times"),c("span",{class:"token punctuation"},"("),c("span",{class:"token parameter"},[p("num1"),c("span",{class:"token operator"},":"),p(" number"),c("span",{class:"token punctuation"},","),p(" num2"),c("span",{class:"token operator"},":"),p(" number"),c("span",{class:"token punctuation"},","),p(),c("span",{class:"token operator"},"..."),p("others"),c("span",{class:"token operator"},":"),p(" number"),c("span",{class:"token punctuation"},"["),c("span",{class:"token punctuation"},"]")]),c("span",{class:"token punctuation"},")"),c("span",{class:"token operator"},":"),p(" number "),c("span",{class:"token punctuation"},"{"),p("\n  "),c("span",{class:"token keyword"},"if"),p(),c("span",{class:"token punctuation"},"("),p("others"),c("span",{class:"token punctuation"},"."),p("length "),c("span",{class:"token operator"},">"),p(),c("span",{class:"token number"},"0"),c("span",{class:"token punctuation"},")"),p(),c("span",{class:"token punctuation"},"{"),p("\n    "),c("span",{class:"token keyword"},"return"),p(),c("span",{class:"token function"},"times"),c("span",{class:"token punctuation"},"("),c("span",{class:"token function"},"times"),c("span",{class:"token punctuation"},"("),p("num1"),c("span",{class:"token punctuation"},","),p(" num2"),c("span",{class:"token punctuation"},")"),c("span",{class:"token punctuation"},","),p(" others"),c("span",{class:"token punctuation"},"["),c("span",{class:"token number"},"0"),c("span",{class:"token punctuation"},"]"),c("span",{class:"token punctuation"},","),p(),c("span",{class:"token operator"},"..."),p("others"),c("span",{class:"token punctuation"},"."),c("span",{class:"token function"},"slice"),c("span",{class:"token punctuation"},"("),c("span",{class:"token number"},"1"),c("span",{class:"token punctuation"},")"),c("span",{class:"token punctuation"},")"),c("span",{class:"token punctuation"},";"),p("\n  "),c("span",{class:"token punctuation"},"}"),p("\n  "),c("span",{class:"token keyword"},"const"),p(" num1Changed "),c("span",{class:"token operator"},"="),p(),c("span",{class:"token function"},"float2Fixed"),c("span",{class:"token punctuation"},"("),p("num1"),c("span",{class:"token punctuation"},")"),c("span",{class:"token punctuation"},";"),p("\n  "),c("span",{class:"token keyword"},"const"),p(" num2Changed "),c("span",{class:"token operator"},"="),p(),c("span",{class:"token function"},"float2Fixed"),c("span",{class:"token punctuation"},"("),p("num2"),c("span",{class:"token punctuation"},")"),c("span",{class:"token punctuation"},";"),p("\n  "),c("span",{class:"token keyword"},"const"),p(" baseNum "),c("span",{class:"token operator"},"="),p(),c("span",{class:"token function"},"digitLength"),c("span",{class:"token punctuation"},"("),p("num1"),c("span",{class:"token punctuation"},")"),p(),c("span",{class:"token operator"},"+"),p(),c("span",{class:"token function"},"digitLength"),c("span",{class:"token punctuation"},"("),p("num2"),c("span",{class:"token punctuation"},")"),c("span",{class:"token punctuation"},";"),p("\n  "),c("span",{class:"token keyword"},"const"),p(" leftValue "),c("span",{class:"token operator"},"="),p(" num1Changed "),c("span",{class:"token operator"},"*"),p(" num2Changed"),c("span",{class:"token punctuation"},";"),p("\n\n  "),c("span",{class:"token function"},"checkBoundary"),c("span",{class:"token punctuation"},"("),p("leftValue"),c("span",{class:"token punctuation"},")"),c("span",{class:"token punctuation"},";"),p("\n\n  "),c("span",{class:"token keyword"},"return"),p(" leftValue "),c("span",{class:"token operator"},"/"),p(" Math"),c("span",{class:"token punctuation"},"."),c("span",{class:"token function"},"pow"),c("span",{class:"token punctuation"},"("),c("span",{class:"token number"},"10"),c("span",{class:"token punctuation"},","),p(" baseNum"),c("span",{class:"token punctuation"},")"),c("span",{class:"token punctuation"},";"),p("\n"),c("span",{class:"token punctuation"},"}"),p("\n\n"),c("span",{class:"token comment"},"/**\n * 精确加法\n */"),p("\n"),c("span",{class:"token keyword"},"function"),p(),c("span",{class:"token function"},"plus"),c("span",{class:"token punctuation"},"("),c("span",{class:"token parameter"},[p("num1"),c("span",{class:"token operator"},":"),p(" number"),c("span",{class:"token punctuation"},","),p(" num2"),c("span",{class:"token operator"},":"),p(" number"),c("span",{class:"token punctuation"},","),p(),c("span",{class:"token operator"},"..."),p("others"),c("span",{class:"token operator"},":"),p(" number"),c("span",{class:"token punctuation"},"["),c("span",{class:"token punctuation"},"]")]),c("span",{class:"token punctuation"},")"),c("span",{class:"token operator"},":"),p(" number "),c("span",{class:"token punctuation"},"{"),p("\n  "),c("span",{class:"token keyword"},"if"),p(),c("span",{class:"token punctuation"},"("),p("others"),c("span",{class:"token punctuation"},"."),p("length "),c("span",{class:"token operator"},">"),p(),c("span",{class:"token number"},"0"),c("span",{class:"token punctuation"},")"),p(),c("span",{class:"token punctuation"},"{"),p("\n    "),c("span",{class:"token keyword"},"return"),p(),c("span",{class:"token function"},"plus"),c("span",{class:"token punctuation"},"("),c("span",{class:"token function"},"plus"),c("span",{class:"token punctuation"},"("),p("num1"),c("span",{class:"token punctuation"},","),p(" num2"),c("span",{class:"token punctuation"},")"),c("span",{class:"token punctuation"},","),p(" others"),c("span",{class:"token punctuation"},"["),c("span",{class:"token number"},"0"),c("span",{class:"token punctuation"},"]"),c("span",{class:"token punctuation"},","),p(),c("span",{class:"token operator"},"..."),p("others"),c("span",{class:"token punctuation"},"."),c("span",{class:"token function"},"slice"),c("span",{class:"token punctuation"},"("),c("span",{class:"token number"},"1"),c("span",{class:"token punctuation"},")"),c("span",{class:"token punctuation"},")"),c("span",{class:"token punctuation"},";"),p("\n  "),c("span",{class:"token punctuation"},"}"),p("\n  "),c("span",{class:"token keyword"},"const"),p(" baseNum "),c("span",{class:"token operator"},"="),p(" Math"),c("span",{class:"token punctuation"},"."),c("span",{class:"token function"},"pow"),c("span",{class:"token punctuation"},"("),c("span",{class:"token number"},"10"),c("span",{class:"token punctuation"},","),p(" Math"),c("span",{class:"token punctuation"},"."),c("span",{class:"token function"},"max"),c("span",{class:"token punctuation"},"("),c("span",{class:"token function"},"digitLength"),c("span",{class:"token punctuation"},"("),p("num1"),c("span",{class:"token punctuation"},")"),c("span",{class:"token punctuation"},","),p(),c("span",{class:"token function"},"digitLength"),c("span",{class:"token punctuation"},"("),p("num2"),c("span",{class:"token punctuation"},")"),c("span",{class:"token punctuation"},")"),c("span",{class:"token punctuation"},")"),c("span",{class:"token punctuation"},";"),p("\n  "),c("span",{class:"token keyword"},"return"),p(),c("span",{class:"token punctuation"},"("),c("span",{class:"token function"},"times"),c("span",{class:"token punctuation"},"("),p("num1"),c("span",{class:"token punctuation"},","),p(" baseNum"),c("span",{class:"token punctuation"},")"),p(),c("span",{class:"token operator"},"+"),p(),c("span",{class:"token function"},"times"),c("span",{class:"token punctuation"},"("),p("num2"),c("span",{class:"token punctuation"},","),p(" baseNum"),c("span",{class:"token punctuation"},")"),c("span",{class:"token punctuation"},")"),p(),c("span",{class:"token operator"},"/"),p(" baseNum"),c("span",{class:"token punctuation"},";"),p("\n"),c("span",{class:"token punctuation"},"}"),p("\n\n"),c("span",{class:"token comment"},"/**\n * 精确减法，类似于加法\n */"),p("\n"),c("span",{class:"token keyword"},"function"),p(),c("span",{class:"token function"},"minus"),c("span",{class:"token punctuation"},"("),c("span",{class:"token parameter"},[p("num1"),c("span",{class:"token operator"},":"),p(" number"),c("span",{class:"token punctuation"},","),p(" num2"),c("span",{class:"token operator"},":"),p(" number"),c("span",{class:"token punctuation"},","),p(),c("span",{class:"token operator"},"..."),p("others"),c("span",{class:"token operator"},":"),p(" number"),c("span",{class:"token punctuation"},"["),c("span",{class:"token punctuation"},"]")]),c("span",{class:"token punctuation"},")"),c("span",{class:"token operator"},":"),p(" number "),c("span",{class:"token punctuation"},"{"),p("\n  "),c("span",{class:"token keyword"},"if"),p(),c("span",{class:"token punctuation"},"("),p("others"),c("span",{class:"token punctuation"},"."),p("length "),c("span",{class:"token operator"},">"),p(),c("span",{class:"token number"},"0"),c("span",{class:"token punctuation"},")"),p(),c("span",{class:"token punctuation"},"{"),p("\n    "),c("span",{class:"token keyword"},"return"),p(),c("span",{class:"token function"},"minus"),c("span",{class:"token punctuation"},"("),c("span",{class:"token function"},"minus"),c("span",{class:"token punctuation"},"("),p("num1"),c("span",{class:"token punctuation"},","),p(" num2"),c("span",{class:"token punctuation"},")"),c("span",{class:"token punctuation"},","),p(" others"),c("span",{class:"token punctuation"},"["),c("span",{class:"token number"},"0"),c("span",{class:"token punctuation"},"]"),c("span",{class:"token punctuation"},","),p(),c("span",{class:"token operator"},"..."),p("others"),c("span",{class:"token punctuation"},"."),c("span",{class:"token function"},"slice"),c("span",{class:"token punctuation"},"("),c("span",{class:"token number"},"1"),c("span",{class:"token punctuation"},")"),c("span",{class:"token punctuation"},")"),c("span",{class:"token punctuation"},";"),p("\n  "),c("span",{class:"token punctuation"},"}"),p("\n  "),c("span",{class:"token keyword"},"const"),p(" baseNum "),c("span",{class:"token operator"},"="),p(" Math"),c("span",{class:"token punctuation"},"."),c("span",{class:"token function"},"pow"),c("span",{class:"token punctuation"},"("),c("span",{class:"token number"},"10"),c("span",{class:"token punctuation"},","),p(" Math"),c("span",{class:"token punctuation"},"."),c("span",{class:"token function"},"max"),c("span",{class:"token punctuation"},"("),c("span",{class:"token function"},"digitLength"),c("span",{class:"token punctuation"},"("),p("num1"),c("span",{class:"token punctuation"},")"),c("span",{class:"token punctuation"},","),p(),c("span",{class:"token function"},"digitLength"),c("span",{class:"token punctuation"},"("),p("num2"),c("span",{class:"token punctuation"},")"),c("span",{class:"token punctuation"},")"),c("span",{class:"token punctuation"},")"),c("span",{class:"token punctuation"},";"),p("\n  "),c("span",{class:"token keyword"},"return"),p(),c("span",{class:"token punctuation"},"("),c("span",{class:"token function"},"times"),c("span",{class:"token punctuation"},"("),p("num1"),c("span",{class:"token punctuation"},","),p(" baseNum"),c("span",{class:"token punctuation"},")"),p(),c("span",{class:"token operator"},"-"),p(),c("span",{class:"token function"},"times"),c("span",{class:"token punctuation"},"("),p("num2"),c("span",{class:"token punctuation"},","),p(" baseNum"),c("span",{class:"token punctuation"},")"),c("span",{class:"token punctuation"},")"),p(),c("span",{class:"token operator"},"/"),p(" baseNum"),c("span",{class:"token punctuation"},";"),p("\n"),c("span",{class:"token punctuation"},"}"),p("\n\n"),c("span",{class:"token comment"},"/**\n * 精确除法\n */"),p("\n"),c("span",{class:"token keyword"},"function"),p(),c("span",{class:"token function"},"divide"),c("span",{class:"token punctuation"},"("),c("span",{class:"token parameter"},[p("num1"),c("span",{class:"token operator"},":"),p(" number"),c("span",{class:"token punctuation"},","),p(" num2"),c("span",{class:"token operator"},":"),p(" number"),c("span",{class:"token punctuation"},","),p(),c("span",{class:"token operator"},"..."),p("others"),c("span",{class:"token operator"},":"),p(" number"),c("span",{class:"token punctuation"},"["),c("span",{class:"token punctuation"},"]")]),c("span",{class:"token punctuation"},")"),c("span",{class:"token operator"},":"),p(" number "),c("span",{class:"token punctuation"},"{"),p("\n  "),c("span",{class:"token keyword"},"if"),p(),c("span",{class:"token punctuation"},"("),p("others"),c("span",{class:"token punctuation"},"."),p("length "),c("span",{class:"token operator"},">"),p(),c("span",{class:"token number"},"0"),c("span",{class:"token punctuation"},")"),p(),c("span",{class:"token punctuation"},"{"),p("\n    "),c("span",{class:"token keyword"},"return"),p(),c("span",{class:"token function"},"divide"),c("span",{class:"token punctuation"},"("),c("span",{class:"token function"},"divide"),c("span",{class:"token punctuation"},"("),p("num1"),c("span",{class:"token punctuation"},","),p(" num2"),c("span",{class:"token punctuation"},")"),c("span",{class:"token punctuation"},","),p(" others"),c("span",{class:"token punctuation"},"["),c("span",{class:"token number"},"0"),c("span",{class:"token punctuation"},"]"),c("span",{class:"token punctuation"},","),p(),c("span",{class:"token operator"},"..."),p("others"),c("span",{class:"token punctuation"},"."),c("span",{class:"token function"},"slice"),c("span",{class:"token punctuation"},"("),c("span",{class:"token number"},"1"),c("span",{class:"token punctuation"},")"),c("span",{class:"token punctuation"},")"),c("span",{class:"token punctuation"},";"),p("\n  "),c("span",{class:"token punctuation"},"}"),p("\n  "),c("span",{class:"token keyword"},"const"),p(" num1Changed "),c("span",{class:"token operator"},"="),p(),c("span",{class:"token function"},"float2Fixed"),c("span",{class:"token punctuation"},"("),p("num1"),c("span",{class:"token punctuation"},")"),c("span",{class:"token punctuation"},";"),p("\n  "),c("span",{class:"token keyword"},"const"),p(" num2Changed "),c("span",{class:"token operator"},"="),p(),c("span",{class:"token function"},"float2Fixed"),c("span",{class:"token punctuation"},"("),p("num2"),c("span",{class:"token punctuation"},")"),c("span",{class:"token punctuation"},";"),p("\n  "),c("span",{class:"token function"},"checkBoundary"),c("span",{class:"token punctuation"},"("),p("num1Changed"),c("span",{class:"token punctuation"},")"),c("span",{class:"token punctuation"},";"),p("\n  "),c("span",{class:"token function"},"checkBoundary"),c("span",{class:"token punctuation"},"("),p("num2Changed"),c("span",{class:"token punctuation"},")"),c("span",{class:"token punctuation"},";"),p("\n  "),c("span",{class:"token keyword"},"return"),p(),c("span",{class:"token function"},"times"),c("span",{class:"token punctuation"},"("),c("span",{class:"token punctuation"},"("),p("num1Changed "),c("span",{class:"token operator"},"/"),p(" num2Changed"),c("span",{class:"token punctuation"},")"),c("span",{class:"token punctuation"},","),p(" Math"),c("span",{class:"token punctuation"},"."),c("span",{class:"token function"},"pow"),c("span",{class:"token punctuation"},"("),c("span",{class:"token number"},"10"),c("span",{class:"token punctuation"},","),p(),c("span",{class:"token function"},"digitLength"),c("span",{class:"token punctuation"},"("),p("num2"),c("span",{class:"token punctuation"},")"),p(),c("span",{class:"token operator"},"-"),p(),c("span",{class:"token function"},"digitLength"),c("span",{class:"token punctuation"},"("),p("num1"),c("span",{class:"token punctuation"},")"),c("span",{class:"token punctuation"},")"),c("span",{class:"token punctuation"},")"),c("span",{class:"token punctuation"},";"),p("\n"),c("span",{class:"token punctuation"},"}"),p("\n\n"),c("span",{class:"token comment"},"/**\n * 四舍五入\n */"),p("\n"),c("span",{class:"token keyword"},"function"),p(),c("span",{class:"token function"},"round"),c("span",{class:"token punctuation"},"("),c("span",{class:"token parameter"},[p("num"),c("span",{class:"token operator"},":"),p(" number"),c("span",{class:"token punctuation"},","),p(" ratio"),c("span",{class:"token operator"},":"),p(" number")]),c("span",{class:"token punctuation"},")"),c("span",{class:"token operator"},":"),p(" number "),c("span",{class:"token punctuation"},"{"),p("\n  "),c("span",{class:"token keyword"},"const"),p(" base "),c("span",{class:"token operator"},"="),p(" Math"),c("span",{class:"token punctuation"},"."),c("span",{class:"token function"},"pow"),c("span",{class:"token punctuation"},"("),c("span",{class:"token number"},"10"),c("span",{class:"token punctuation"},","),p(" ratio"),c("span",{class:"token punctuation"},")"),c("span",{class:"token punctuation"},";"),p("\n  "),c("span",{class:"token keyword"},"return"),p(),c("span",{class:"token function"},"divide"),c("span",{class:"token punctuation"},"("),p("Math"),c("span",{class:"token punctuation"},"."),c("span",{class:"token function"},"round"),c("span",{class:"token punctuation"},"("),c("span",{class:"token function"},"times"),c("span",{class:"token punctuation"},"("),p("num"),c("span",{class:"token punctuation"},","),p(" base"),c("span",{class:"token punctuation"},")"),c("span",{class:"token punctuation"},")"),c("span",{class:"token punctuation"},","),p(" base"),c("span",{class:"token punctuation"},")"),c("span",{class:"token punctuation"},";"),p("\n"),c("span",{class:"token punctuation"},"}"),p("\n")])]),c("div",{class:"line-numbers-wrapper"},[c("span",{class:"line-number"},"1"),c("br"),c("span",{class:"line-number"},"2"),c("br"),c("span",{class:"line-number"},"3"),c("br"),c("span",{class:"line-number"},"4"),c("br"),c("span",{class:"line-number"},"5"),c("br"),c("span",{class:"line-number"},"6"),c("br"),c("span",{class:"line-number"},"7"),c("br"),c("span",{class:"line-number"},"8"),c("br"),c("span",{class:"line-number"},"9"),c("br"),c("span",{class:"line-number"},"10"),c("br"),c("span",{class:"line-number"},"11"),c("br"),c("span",{class:"line-number"},"12"),c("br"),c("span",{class:"line-number"},"13"),c("br"),c("span",{class:"line-number"},"14"),c("br"),c("span",{class:"line-number"},"15"),c("br"),c("span",{class:"line-number"},"16"),c("br"),c("span",{class:"line-number"},"17"),c("br"),c("span",{class:"line-number"},"18"),c("br"),c("span",{class:"line-number"},"19"),c("br"),c("span",{class:"line-number"},"20"),c("br"),c("span",{class:"line-number"},"21"),c("br"),c("span",{class:"line-number"},"22"),c("br"),c("span",{class:"line-number"},"23"),c("br"),c("span",{class:"line-number"},"24"),c("br"),c("span",{class:"line-number"},"25"),c("br"),c("span",{class:"line-number"},"26"),c("br"),c("span",{class:"line-number"},"27"),c("br"),c("span",{class:"line-number"},"28"),c("br"),c("span",{class:"line-number"},"29"),c("br"),c("span",{class:"line-number"},"30"),c("br"),c("span",{class:"line-number"},"31"),c("br"),c("span",{class:"line-number"},"32"),c("br"),c("span",{class:"line-number"},"33"),c("br"),c("span",{class:"line-number"},"34"),c("br"),c("span",{class:"line-number"},"35"),c("br"),c("span",{class:"line-number"},"36"),c("br"),c("span",{class:"line-number"},"37"),c("br"),c("span",{class:"line-number"},"38"),c("br"),c("span",{class:"line-number"},"39"),c("br"),c("span",{class:"line-number"},"40"),c("br"),c("span",{class:"line-number"},"41"),c("br"),c("span",{class:"line-number"},"42"),c("br"),c("span",{class:"line-number"},"43"),c("br"),c("span",{class:"line-number"},"44"),c("br"),c("span",{class:"line-number"},"45"),c("br"),c("span",{class:"line-number"},"46"),c("br"),c("span",{class:"line-number"},"47"),c("br"),c("span",{class:"line-number"},"48"),c("br"),c("span",{class:"line-number"},"49"),c("br"),c("span",{class:"line-number"},"50"),c("br"),c("span",{class:"line-number"},"51"),c("br"),c("span",{class:"line-number"},"52"),c("br"),c("span",{class:"line-number"},"53"),c("br"),c("span",{class:"line-number"},"54"),c("br"),c("span",{class:"line-number"},"55"),c("br"),c("span",{class:"line-number"},"56"),c("br"),c("span",{class:"line-number"},"57"),c("br"),c("span",{class:"line-number"},"58"),c("br"),c("span",{class:"line-number"},"59"),c("br"),c("span",{class:"line-number"},"60"),c("br"),c("span",{class:"line-number"},"61"),c("br"),c("span",{class:"line-number"},"62"),c("br"),c("span",{class:"line-number"},"63"),c("br"),c("span",{class:"line-number"},"64"),c("br"),c("span",{class:"line-number"},"65"),c("br"),c("span",{class:"line-number"},"66"),c("br"),c("span",{class:"line-number"},"67"),c("br"),c("span",{class:"line-number"},"68"),c("br"),c("span",{class:"line-number"},"69"),c("br"),c("span",{class:"line-number"},"70"),c("br"),c("span",{class:"line-number"},"71"),c("br"),c("span",{class:"line-number"},"72"),c("br"),c("span",{class:"line-number"},"73"),c("br"),c("span",{class:"line-number"},"74"),c("br"),c("span",{class:"line-number"},"75"),c("br"),c("span",{class:"line-number"},"76"),c("br"),c("span",{class:"line-number"},"77"),c("br"),c("span",{class:"line-number"},"78"),c("br"),c("span",{class:"line-number"},"79"),c("br"),c("span",{class:"line-number"},"80"),c("br"),c("span",{class:"line-number"},"81"),c("br"),c("span",{class:"line-number"},"82"),c("br"),c("span",{class:"line-number"},"83"),c("br"),c("span",{class:"line-number"},"84"),c("br"),c("span",{class:"line-number"},"85"),c("br"),c("span",{class:"line-number"},"86"),c("br"),c("span",{class:"line-number"},"87"),c("br"),c("span",{class:"line-number"},"88"),c("br"),c("span",{class:"line-number"},"89"),c("br"),c("span",{class:"line-number"},"90"),c("br"),c("span",{class:"line-number"},"91"),c("br"),c("span",{class:"line-number"},"92"),c("br"),c("span",{class:"line-number"},"93"),c("br"),c("span",{class:"line-number"},"94"),c("br"),c("span",{class:"line-number"},"95"),c("br"),c("span",{class:"line-number"},"96"),c("br"),c("span",{class:"line-number"},"97"),c("br"),c("span",{class:"line-number"},"98"),c("br"),c("span",{class:"line-number"},"99"),c("br"),c("span",{class:"line-number"},"100"),c("br"),c("span",{class:"line-number"},"101"),c("br")])],-1);var T=n(i,[["render",function(n,o,c,p,l,i){const T=s("code-block");return u(),a("div",null,[r,t(T,{showAction:!1},{default:e((()=>[k])),_:1}),b,m,t(T,{showAction:!1},{default:e((()=>[d])),_:1}),f,h,t(T,{showAction:!1},{default:e((()=>[g])),_:1}),w,t(T,{showAction:!1},{default:e((()=>[y])),_:1}),v,t(T,{showAction:!1},{default:e((()=>[x])),_:1}),_,S,N,t(T,{showAction:!1},{default:e((()=>[M])),_:1}),P,E,F,t(T,{showAction:!1},{default:e((()=>[A])),_:1})])}]]);export{l as __pageData,T as default};
