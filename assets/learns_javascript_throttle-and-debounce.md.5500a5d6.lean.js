import{_ as n,r as s,c as a,a as t,w as e,f as o,e as c,b as p,o as l}from"./app.de0c49ac.js";const u='{"title":"防抖和节流","description":"","frontmatter":{},"headers":[{"level":2,"title":"防抖","slug":"防抖"},{"level":2,"title":"节流","slug":"节流"}],"relativePath":"learns/javascript/throttle-and-debounce.md","lastUpdated":1635308878162}',r={},i=o('',7),k=c("div",{class:"language-js line-numbers-mode"},[c("pre",null,[c("code",null,[c("span",{class:"token comment"},"// func是用户传入需要防抖的函数"),p("\n"),c("span",{class:"token comment"},"// wait是等待时间"),p("\n"),c("span",{class:"token keyword"},"const"),p(),c("span",{class:"token function-variable function"},"debounce"),p(),c("span",{class:"token operator"},"="),p(),c("span",{class:"token punctuation"},"("),c("span",{class:"token parameter"},[p("func"),c("span",{class:"token punctuation"},","),p(" wait "),c("span",{class:"token operator"},"="),p(),c("span",{class:"token number"},"50")]),c("span",{class:"token punctuation"},")"),p(),c("span",{class:"token operator"},"=>"),p(),c("span",{class:"token punctuation"},"{"),p("\n  "),c("span",{class:"token comment"},"// 缓存一个定时器id"),p("\n  "),c("span",{class:"token keyword"},"let"),p(" timer "),c("span",{class:"token operator"},"="),p(),c("span",{class:"token number"},"0"),p("\n  "),c("span",{class:"token comment"},"// 这里返回的函数是每次用户实际调用的防抖函数"),p("\n  "),c("span",{class:"token comment"},"// 如果已经设定过定时器了就清空上一次的定时器"),p("\n  "),c("span",{class:"token comment"},"// 开始一个新的定时器，延迟执行用户传入的方法"),p("\n  "),c("span",{class:"token keyword"},"return"),p(),c("span",{class:"token keyword"},"function"),c("span",{class:"token punctuation"},"("),c("span",{class:"token parameter"},[c("span",{class:"token operator"},"..."),p("args")]),c("span",{class:"token punctuation"},")"),p(),c("span",{class:"token punctuation"},"{"),p("\n    "),c("span",{class:"token keyword"},"if"),p(),c("span",{class:"token punctuation"},"("),p("timer"),c("span",{class:"token punctuation"},")"),p(),c("span",{class:"token function"},"clearTimeout"),c("span",{class:"token punctuation"},"("),p("timer"),c("span",{class:"token punctuation"},")"),p("\n    timer "),c("span",{class:"token operator"},"="),p(),c("span",{class:"token function"},"setTimeout"),c("span",{class:"token punctuation"},"("),c("span",{class:"token punctuation"},"("),c("span",{class:"token punctuation"},")"),p(),c("span",{class:"token operator"},"=>"),p(),c("span",{class:"token punctuation"},"{"),p("\n      "),c("span",{class:"token function"},"func"),c("span",{class:"token punctuation"},"."),c("span",{class:"token function"},"apply"),c("span",{class:"token punctuation"},"("),c("span",{class:"token keyword"},"this"),c("span",{class:"token punctuation"},","),p(" args"),c("span",{class:"token punctuation"},")"),p("\n    "),c("span",{class:"token punctuation"},"}"),c("span",{class:"token punctuation"},","),p(" wait"),c("span",{class:"token punctuation"},")"),p("\n  "),c("span",{class:"token punctuation"},"}"),p("\n"),c("span",{class:"token punctuation"},"}"),p("\n"),c("span",{class:"token comment"},"// 不难看出如果用户调用该函数的间隔小于wait的情况下，上一次的时间还未到就被清除了，并不会执行函数"),p("\n")])]),c("div",{class:"line-numbers-wrapper"},[c("span",{class:"line-number"},"1"),c("br"),c("span",{class:"line-number"},"2"),c("br"),c("span",{class:"line-number"},"3"),c("br"),c("span",{class:"line-number"},"4"),c("br"),c("span",{class:"line-number"},"5"),c("br"),c("span",{class:"line-number"},"6"),c("br"),c("span",{class:"line-number"},"7"),c("br"),c("span",{class:"line-number"},"8"),c("br"),c("span",{class:"line-number"},"9"),c("br"),c("span",{class:"line-number"},"10"),c("br"),c("span",{class:"line-number"},"11"),c("br"),c("span",{class:"line-number"},"12"),c("br"),c("span",{class:"line-number"},"13"),c("br"),c("span",{class:"line-number"},"14"),c("br"),c("span",{class:"line-number"},"15"),c("br"),c("span",{class:"line-number"},"16"),c("br")])],-1),b=c("p",null,"这是一个简单版的防抖，但是有缺陷，这个防抖只能在最后调用。一般的防抖会有immediate选项，表示是否立即调用。这两者的区别，举个栗子来说：",-1),m=c("ul",null,[c("li",null,"例如在搜索引擎搜索问题的时候，我们当然是希望用户输入完最后一个字才调用查询接口，这个时候适用延迟执行的防抖函数，它总是在一连串（间隔小于wait的）函数触发之后调用。"),c("li",null,"例如用户给interviewMap点star的时候，我们希望用户点第一下的时候就去调用接口，并且成功之后改变star按钮的样子，用户就可以立马得到反馈是否star成功了，这个情况适用立即执行的防抖函数，它总是在第一次调用，并且下一次调用必须与前一次调用的时间间隔大于wait才会触发。")],-1),d=c("p",null,"下面我们来实现一个带有立即执行选项的防抖函数",-1),f=c("div",{class:"language-js line-numbers-mode"},[c("pre",null,[c("code",null,[c("span",{class:"token comment"},"/**\n * 防抖函数，返回函数连续调用时，空闲时间必须大于或等于 wait，func 才会执行\n *\n * @param  {function} func        回调函数\n * @param  {number}   wait        表示时间窗口的间隔\n * @param  {boolean}  immediate   设置为ture时，是否立即调用函数\n * @return {function}             返回客户调用函数\n */"),p("\n"),c("span",{class:"token keyword"},"function"),p(),c("span",{class:"token function"},"debounce"),p(),c("span",{class:"token punctuation"},"("),c("span",{class:"token parameter"},[p("func"),c("span",{class:"token punctuation"},","),p(" wait "),c("span",{class:"token operator"},"="),p(),c("span",{class:"token number"},"50"),c("span",{class:"token punctuation"},","),p(" immediate "),c("span",{class:"token operator"},"="),p(),c("span",{class:"token boolean"},"true")]),c("span",{class:"token punctuation"},")"),p(),c("span",{class:"token punctuation"},"{"),p("\n  "),c("span",{class:"token keyword"},"let"),p(" timer"),c("span",{class:"token punctuation"},","),p(" context"),c("span",{class:"token punctuation"},","),p(" args\n\n  "),c("span",{class:"token comment"},"// 延迟执行函数"),p("\n  "),c("span",{class:"token keyword"},"const"),p(),c("span",{class:"token function-variable function"},"later"),p(),c("span",{class:"token operator"},"="),p(),c("span",{class:"token punctuation"},"("),c("span",{class:"token punctuation"},")"),p(),c("span",{class:"token operator"},"=>"),p(),c("span",{class:"token function"},"setTimeout"),c("span",{class:"token punctuation"},"("),c("span",{class:"token punctuation"},"("),c("span",{class:"token punctuation"},")"),p(),c("span",{class:"token operator"},"=>"),p(),c("span",{class:"token punctuation"},"{"),p("\n    "),c("span",{class:"token comment"},"// 延迟函数执行完毕，清空缓存的定时器序号"),p("\n    timer "),c("span",{class:"token operator"},"="),p(),c("span",{class:"token keyword"},"null"),p("\n    "),c("span",{class:"token comment"},"// 延迟执行的情况下，函数会在延迟函数中执行"),p("\n    "),c("span",{class:"token comment"},"// 使用到之前缓存的参数和上下文"),p("\n    "),c("span",{class:"token keyword"},"if"),p(),c("span",{class:"token punctuation"},"("),c("span",{class:"token operator"},"!"),p("immediate"),c("span",{class:"token punctuation"},")"),p(),c("span",{class:"token punctuation"},"{"),p("\n      "),c("span",{class:"token function"},"func"),c("span",{class:"token punctuation"},"."),c("span",{class:"token function"},"apply"),c("span",{class:"token punctuation"},"("),p("context"),c("span",{class:"token punctuation"},","),p(" args"),c("span",{class:"token punctuation"},")"),p("\n      context "),c("span",{class:"token operator"},"="),p(" args "),c("span",{class:"token operator"},"="),p(),c("span",{class:"token keyword"},"null"),p("\n    "),c("span",{class:"token punctuation"},"}"),p("\n  "),c("span",{class:"token punctuation"},"}"),c("span",{class:"token punctuation"},","),p(" wait"),c("span",{class:"token punctuation"},")"),p("\n\n  "),c("span",{class:"token comment"},"// 这里返回的函数是每次实际调用的函数"),p("\n  "),c("span",{class:"token keyword"},"return"),p(),c("span",{class:"token keyword"},"function"),c("span",{class:"token punctuation"},"("),c("span",{class:"token parameter"},[c("span",{class:"token operator"},"..."),p("params")]),c("span",{class:"token punctuation"},")"),p(),c("span",{class:"token punctuation"},"{"),p("\n    "),c("span",{class:"token comment"},"// 如果没有创建延迟执行函数（later），就创建一个"),p("\n    "),c("span",{class:"token keyword"},"if"),p(),c("span",{class:"token punctuation"},"("),c("span",{class:"token operator"},"!"),p("timer"),c("span",{class:"token punctuation"},")"),p(),c("span",{class:"token punctuation"},"{"),p("\n      timer "),c("span",{class:"token operator"},"="),p(),c("span",{class:"token function"},"later"),c("span",{class:"token punctuation"},"("),c("span",{class:"token punctuation"},")"),p("\n      "),c("span",{class:"token comment"},"// 如果是立即执行，调用函数"),p("\n      "),c("span",{class:"token comment"},"// 否则缓存参数和调用上下文"),p("\n      "),c("span",{class:"token keyword"},"if"),p(),c("span",{class:"token punctuation"},"("),p("immediate"),c("span",{class:"token punctuation"},")"),p(),c("span",{class:"token punctuation"},"{"),p("\n        "),c("span",{class:"token function"},"func"),c("span",{class:"token punctuation"},"."),c("span",{class:"token function"},"apply"),c("span",{class:"token punctuation"},"("),c("span",{class:"token keyword"},"this"),c("span",{class:"token punctuation"},","),p(" params"),c("span",{class:"token punctuation"},")"),p("\n      "),c("span",{class:"token punctuation"},"}"),p(),c("span",{class:"token keyword"},"else"),p(),c("span",{class:"token punctuation"},"{"),p("\n        context "),c("span",{class:"token operator"},"="),p(),c("span",{class:"token keyword"},"this"),p("\n        args "),c("span",{class:"token operator"},"="),p(" params\n      "),c("span",{class:"token punctuation"},"}"),p("\n    "),c("span",{class:"token comment"},"// 如果已有延迟执行函数（later），调用的时候清除原来的并重新设定一个"),p("\n    "),c("span",{class:"token comment"},"// 这样做延迟函数会重新计时"),p("\n    "),c("span",{class:"token punctuation"},"}"),p(),c("span",{class:"token keyword"},"else"),p(),c("span",{class:"token punctuation"},"{"),p("\n      "),c("span",{class:"token function"},"clearTimeout"),c("span",{class:"token punctuation"},"("),p("timer"),c("span",{class:"token punctuation"},")"),p("\n      timer "),c("span",{class:"token operator"},"="),p(),c("span",{class:"token function"},"later"),c("span",{class:"token punctuation"},"("),c("span",{class:"token punctuation"},")"),p("\n    "),c("span",{class:"token punctuation"},"}"),p("\n  "),c("span",{class:"token punctuation"},"}"),p("\n"),c("span",{class:"token punctuation"},"}"),p("\n")])]),c("div",{class:"line-numbers-wrapper"},[c("span",{class:"line-number"},"1"),c("br"),c("span",{class:"line-number"},"2"),c("br"),c("span",{class:"line-number"},"3"),c("br"),c("span",{class:"line-number"},"4"),c("br"),c("span",{class:"line-number"},"5"),c("br"),c("span",{class:"line-number"},"6"),c("br"),c("span",{class:"line-number"},"7"),c("br"),c("span",{class:"line-number"},"8"),c("br"),c("span",{class:"line-number"},"9"),c("br"),c("span",{class:"line-number"},"10"),c("br"),c("span",{class:"line-number"},"11"),c("br"),c("span",{class:"line-number"},"12"),c("br"),c("span",{class:"line-number"},"13"),c("br"),c("span",{class:"line-number"},"14"),c("br"),c("span",{class:"line-number"},"15"),c("br"),c("span",{class:"line-number"},"16"),c("br"),c("span",{class:"line-number"},"17"),c("br"),c("span",{class:"line-number"},"18"),c("br"),c("span",{class:"line-number"},"19"),c("br"),c("span",{class:"line-number"},"20"),c("br"),c("span",{class:"line-number"},"21"),c("br"),c("span",{class:"line-number"},"22"),c("br"),c("span",{class:"line-number"},"23"),c("br"),c("span",{class:"line-number"},"24"),c("br"),c("span",{class:"line-number"},"25"),c("br"),c("span",{class:"line-number"},"26"),c("br"),c("span",{class:"line-number"},"27"),c("br"),c("span",{class:"line-number"},"28"),c("br"),c("span",{class:"line-number"},"29"),c("br"),c("span",{class:"line-number"},"30"),c("br"),c("span",{class:"line-number"},"31"),c("br"),c("span",{class:"line-number"},"32"),c("br"),c("span",{class:"line-number"},"33"),c("br"),c("span",{class:"line-number"},"34"),c("br"),c("span",{class:"line-number"},"35"),c("br"),c("span",{class:"line-number"},"36"),c("br"),c("span",{class:"line-number"},"37"),c("br"),c("span",{class:"line-number"},"38"),c("br"),c("span",{class:"line-number"},"39"),c("br"),c("span",{class:"line-number"},"40"),c("br"),c("span",{class:"line-number"},"41"),c("br"),c("span",{class:"line-number"},"42"),c("br"),c("span",{class:"line-number"},"43"),c("br"),c("span",{class:"line-number"},"44"),c("br")])],-1),w=c("p",null,"整体函数实现的不难，总结一下。",-1),y=c("ul",null,[c("li",null,"对于按钮防点击来说的实现：如果函数是立即执行的，就立即调用，如果函数是延迟执行的，就缓存上下文和参数，放到延迟函数中去执行。一旦我开始一个定时器，只要我定时器还在，你每次点击我都重新计时。一旦你点累了，定时器时间到，定时器重置为 null，就可以再次点击了。"),c("li",null,"对于延时执行函数来说的实现：清除定时器ID，如果是延迟调用就调用函数")],-1),g=c("h2",{id:"节流",tabindex:"-1"},[p("节流 "),c("a",{class:"header-anchor",href:"#节流","aria-hidden":"true"},"#")],-1),h=c("p",null,"防抖动和节流本质是不一样的。防抖动是将多次执行变为最后一次执行，节流是将多次执行变成每隔一段时间执行。",-1),v=c("div",{class:"language-js line-numbers-mode"},[c("pre",null,[c("code",null,[c("span",{class:"token comment"},"/**\n * underscore 节流函数，返回函数连续调用时，func 执行频率限定为 次 / wait\n *\n * @param  {function}   func      回调函数\n * @param  {number}     wait      表示时间窗口的间隔\n * @param  {object}     options   如果想忽略开始函数的的调用，传入{leading: false}。\n *                                如果想忽略结尾函数的调用，传入{trailing: false}\n *                                两者不能共存，否则函数不能执行\n * @return {function}             返回客户调用函数\n */"),p("\n"),c("span",{class:"token keyword"},"function"),p(),c("span",{class:"token function"},"throttle"),c("span",{class:"token punctuation"},"("),c("span",{class:"token parameter"},[p("func"),c("span",{class:"token punctuation"},","),p(" wait"),c("span",{class:"token punctuation"},","),p(" options")]),c("span",{class:"token punctuation"},")"),p(),c("span",{class:"token punctuation"},"{"),p("\n  "),c("span",{class:"token keyword"},"var"),p(" context"),c("span",{class:"token punctuation"},","),p(" args"),c("span",{class:"token punctuation"},","),p(" result"),c("span",{class:"token punctuation"},";"),p("\n  "),c("span",{class:"token keyword"},"var"),p(" timeout "),c("span",{class:"token operator"},"="),p(),c("span",{class:"token keyword"},"null"),c("span",{class:"token punctuation"},";"),p("\n  "),c("span",{class:"token comment"},"// 之前的时间戳"),p("\n  "),c("span",{class:"token keyword"},"var"),p(" previous "),c("span",{class:"token operator"},"="),p(),c("span",{class:"token number"},"0"),c("span",{class:"token punctuation"},";"),p("\n  "),c("span",{class:"token comment"},"// 如果 options 没传则设为空对象"),p("\n  "),c("span",{class:"token keyword"},"if"),p(),c("span",{class:"token punctuation"},"("),c("span",{class:"token operator"},"!"),p("options"),c("span",{class:"token punctuation"},")"),p(" options "),c("span",{class:"token operator"},"="),p(),c("span",{class:"token punctuation"},"{"),c("span",{class:"token punctuation"},"}"),c("span",{class:"token punctuation"},";"),p("\n  "),c("span",{class:"token comment"},"// 定时器回调函数"),p("\n  "),c("span",{class:"token keyword"},"var"),p(),c("span",{class:"token function-variable function"},"later"),p(),c("span",{class:"token operator"},"="),p(),c("span",{class:"token keyword"},"function"),c("span",{class:"token punctuation"},"("),c("span",{class:"token punctuation"},")"),p(),c("span",{class:"token punctuation"},"{"),p("\n    "),c("span",{class:"token comment"},"// 若设定了开始边界不执行选项，上次执行时间始终为0"),p("\n    previous "),c("span",{class:"token operator"},"="),p(" options"),c("span",{class:"token punctuation"},"."),p("leading "),c("span",{class:"token operator"},"==="),p(),c("span",{class:"token boolean"},"false"),p(),c("span",{class:"token operator"},"?"),p(),c("span",{class:"token number"},"0"),p(),c("span",{class:"token operator"},":"),p(),c("span",{class:"token operator"},"+"),c("span",{class:"token keyword"},"new"),p(),c("span",{class:"token class-name"},"Date"),c("span",{class:"token punctuation"},"("),c("span",{class:"token punctuation"},")"),c("span",{class:"token punctuation"},";"),p("\n    "),c("span",{class:"token comment"},"// 置空一是为了防止内存泄漏，二是为了下面的定时器判断"),p("\n    timeout "),c("span",{class:"token operator"},"="),p(),c("span",{class:"token keyword"},"null"),c("span",{class:"token punctuation"},";"),p("\n    result "),c("span",{class:"token operator"},"="),p(),c("span",{class:"token function"},"func"),c("span",{class:"token punctuation"},"."),c("span",{class:"token function"},"apply"),c("span",{class:"token punctuation"},"("),p("context"),c("span",{class:"token punctuation"},","),p(" args"),c("span",{class:"token punctuation"},")"),c("span",{class:"token punctuation"},";"),p("\n    "),c("span",{class:"token keyword"},"if"),p(),c("span",{class:"token punctuation"},"("),c("span",{class:"token operator"},"!"),p("timeout"),c("span",{class:"token punctuation"},")"),p(" context "),c("span",{class:"token operator"},"="),p(" args "),c("span",{class:"token operator"},"="),p(),c("span",{class:"token keyword"},"null"),c("span",{class:"token punctuation"},";"),p("\n  "),c("span",{class:"token punctuation"},"}"),c("span",{class:"token punctuation"},";"),p("\n  "),c("span",{class:"token keyword"},"return"),p(),c("span",{class:"token keyword"},"function"),c("span",{class:"token punctuation"},"("),c("span",{class:"token punctuation"},")"),p(),c("span",{class:"token punctuation"},"{"),p("\n    "),c("span",{class:"token comment"},"// 获得当前时间戳"),p("\n    "),c("span",{class:"token keyword"},"var"),p(" now "),c("span",{class:"token operator"},"="),p(),c("span",{class:"token operator"},"+"),c("span",{class:"token keyword"},"new"),p(),c("span",{class:"token class-name"},"Date"),c("span",{class:"token punctuation"},"("),c("span",{class:"token punctuation"},")"),c("span",{class:"token punctuation"},";"),p("\n    "),c("span",{class:"token comment"},"// 首次执行时，如果设定了开始边界不执行选项，将上次执行时间设定为当前时间。"),p("\n    "),c("span",{class:"token keyword"},"if"),p(),c("span",{class:"token punctuation"},"("),c("span",{class:"token operator"},"!"),p("previous "),c("span",{class:"token operator"},"&&"),p(" options"),c("span",{class:"token punctuation"},"."),p("leading "),c("span",{class:"token operator"},"==="),p(),c("span",{class:"token boolean"},"false"),c("span",{class:"token punctuation"},")"),p(" previous "),c("span",{class:"token operator"},"="),p(" now"),c("span",{class:"token punctuation"},";"),p("\n    "),c("span",{class:"token comment"},"// 计算剩余时间"),p("\n    "),c("span",{class:"token keyword"},"var"),p(" remaining "),c("span",{class:"token operator"},"="),p(" wait "),c("span",{class:"token operator"},"-"),p(),c("span",{class:"token punctuation"},"("),p("now "),c("span",{class:"token operator"},"-"),p(" previous"),c("span",{class:"token punctuation"},")"),c("span",{class:"token punctuation"},";"),p("\n    context "),c("span",{class:"token operator"},"="),p(),c("span",{class:"token keyword"},"this"),c("span",{class:"token punctuation"},";"),p("\n    args "),c("span",{class:"token operator"},"="),p(" arguments"),c("span",{class:"token punctuation"},";"),p("\n    "),c("span",{class:"token comment"},"// 延迟时间间隔remaining小于等于0，表示上次执行至此所间隔时间已经超过一个时间窗口"),p("\n    "),c("span",{class:"token comment"},"// remaining大于时间窗口wait，表示客户端系统时间被调整过"),p("\n    "),c("span",{class:"token keyword"},"if"),p(),c("span",{class:"token punctuation"},"("),p("remaining "),c("span",{class:"token operator"},"<="),p(),c("span",{class:"token number"},"0"),p(),c("span",{class:"token operator"},"||"),p(" remaining "),c("span",{class:"token operator"},">"),p(" wait"),c("span",{class:"token punctuation"},")"),p(),c("span",{class:"token punctuation"},"{"),p("\n      "),c("span",{class:"token comment"},"// 如果存在定时器就清理掉否则会调用二次回调"),p("\n      "),c("span",{class:"token keyword"},"if"),p(),c("span",{class:"token punctuation"},"("),p("timeout"),c("span",{class:"token punctuation"},")"),p(),c("span",{class:"token punctuation"},"{"),p("\n        "),c("span",{class:"token function"},"clearTimeout"),c("span",{class:"token punctuation"},"("),p("timeout"),c("span",{class:"token punctuation"},")"),c("span",{class:"token punctuation"},";"),p("\n        timeout "),c("span",{class:"token operator"},"="),p(),c("span",{class:"token keyword"},"null"),c("span",{class:"token punctuation"},";"),p("\n      "),c("span",{class:"token punctuation"},"}"),p("\n      previous "),c("span",{class:"token operator"},"="),p(" now"),c("span",{class:"token punctuation"},";"),p("\n      result "),c("span",{class:"token operator"},"="),p(),c("span",{class:"token function"},"func"),c("span",{class:"token punctuation"},"."),c("span",{class:"token function"},"apply"),c("span",{class:"token punctuation"},"("),p("context"),c("span",{class:"token punctuation"},","),p(" args"),c("span",{class:"token punctuation"},")"),c("span",{class:"token punctuation"},";"),p("\n      "),c("span",{class:"token keyword"},"if"),p(),c("span",{class:"token punctuation"},"("),c("span",{class:"token operator"},"!"),p("timeout"),c("span",{class:"token punctuation"},")"),p(" context "),c("span",{class:"token operator"},"="),p(" args "),c("span",{class:"token operator"},"="),p(),c("span",{class:"token keyword"},"null"),c("span",{class:"token punctuation"},";"),p("\n      "),c("span",{class:"token comment"},"//如果延迟执行不存在，且没有设定结尾边界不执行选项"),p("\n    "),c("span",{class:"token punctuation"},"}"),p(),c("span",{class:"token keyword"},"else"),p(),c("span",{class:"token keyword"},"if"),p(),c("span",{class:"token punctuation"},"("),c("span",{class:"token operator"},"!"),p("timeout "),c("span",{class:"token operator"},"&&"),p(" options"),c("span",{class:"token punctuation"},"."),p("trailing "),c("span",{class:"token operator"},"!=="),p(),c("span",{class:"token boolean"},"false"),c("span",{class:"token punctuation"},")"),p(),c("span",{class:"token punctuation"},"{"),p("\n      timeout "),c("span",{class:"token operator"},"="),p(),c("span",{class:"token function"},"setTimeout"),c("span",{class:"token punctuation"},"("),p("later"),c("span",{class:"token punctuation"},","),p(" remaining"),c("span",{class:"token punctuation"},")"),c("span",{class:"token punctuation"},";"),p("\n    "),c("span",{class:"token punctuation"},"}"),p("\n    "),c("span",{class:"token keyword"},"return"),p(" result"),c("span",{class:"token punctuation"},";"),p("\n  "),c("span",{class:"token punctuation"},"}"),c("span",{class:"token punctuation"},";"),p("\n"),c("span",{class:"token punctuation"},"}"),c("span",{class:"token punctuation"},";"),p("\n")])]),c("div",{class:"line-numbers-wrapper"},[c("span",{class:"line-number"},"1"),c("br"),c("span",{class:"line-number"},"2"),c("br"),c("span",{class:"line-number"},"3"),c("br"),c("span",{class:"line-number"},"4"),c("br"),c("span",{class:"line-number"},"5"),c("br"),c("span",{class:"line-number"},"6"),c("br"),c("span",{class:"line-number"},"7"),c("br"),c("span",{class:"line-number"},"8"),c("br"),c("span",{class:"line-number"},"9"),c("br"),c("span",{class:"line-number"},"10"),c("br"),c("span",{class:"line-number"},"11"),c("br"),c("span",{class:"line-number"},"12"),c("br"),c("span",{class:"line-number"},"13"),c("br"),c("span",{class:"line-number"},"14"),c("br"),c("span",{class:"line-number"},"15"),c("br"),c("span",{class:"line-number"},"16"),c("br"),c("span",{class:"line-number"},"17"),c("br"),c("span",{class:"line-number"},"18"),c("br"),c("span",{class:"line-number"},"19"),c("br"),c("span",{class:"line-number"},"20"),c("br"),c("span",{class:"line-number"},"21"),c("br"),c("span",{class:"line-number"},"22"),c("br"),c("span",{class:"line-number"},"23"),c("br"),c("span",{class:"line-number"},"24"),c("br"),c("span",{class:"line-number"},"25"),c("br"),c("span",{class:"line-number"},"26"),c("br"),c("span",{class:"line-number"},"27"),c("br"),c("span",{class:"line-number"},"28"),c("br"),c("span",{class:"line-number"},"29"),c("br"),c("span",{class:"line-number"},"30"),c("br"),c("span",{class:"line-number"},"31"),c("br"),c("span",{class:"line-number"},"32"),c("br"),c("span",{class:"line-number"},"33"),c("br"),c("span",{class:"line-number"},"34"),c("br"),c("span",{class:"line-number"},"35"),c("br"),c("span",{class:"line-number"},"36"),c("br"),c("span",{class:"line-number"},"37"),c("br"),c("span",{class:"line-number"},"38"),c("br"),c("span",{class:"line-number"},"39"),c("br"),c("span",{class:"line-number"},"40"),c("br"),c("span",{class:"line-number"},"41"),c("br"),c("span",{class:"line-number"},"42"),c("br"),c("span",{class:"line-number"},"43"),c("br"),c("span",{class:"line-number"},"44"),c("br"),c("span",{class:"line-number"},"45"),c("br"),c("span",{class:"line-number"},"46"),c("br"),c("span",{class:"line-number"},"47"),c("br"),c("span",{class:"line-number"},"48"),c("br"),c("span",{class:"line-number"},"49"),c("br"),c("span",{class:"line-number"},"50"),c("br"),c("span",{class:"line-number"},"51"),c("br"),c("span",{class:"line-number"},"52"),c("br"),c("span",{class:"line-number"},"53"),c("br")])],-1);var _=n(r,[["render",function(n,o,c,p,u,r){const _=s("code-block");return l(),a("div",null,[i,t(_,{showAction:!1},{default:e((()=>[k])),_:1}),b,m,d,t(_,{showAction:!1},{default:e((()=>[f])),_:1}),w,y,g,h,t(_,{showAction:!1},{default:e((()=>[v])),_:1})])}]]);export{u as __pageData,_ as default};
