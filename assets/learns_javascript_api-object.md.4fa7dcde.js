import{_ as n,r as s,c as a,a as e,w as t,f as o,e as c,b as p,o as l}from"./app.82084a0b.js";const u='{"title":"重学之JavaScript 对象所有API解析","description":"","frontmatter":{},"headers":[{"level":2,"title":"Object构造器的成员","slug":"object构造器的成员"},{"level":3,"title":"Object.prototype","slug":"object-prototype"},{"level":2,"title":"Object.prototype 的成员","slug":"object-prototype-的成员"},{"level":3,"title":"Object.prototype.constructor","slug":"object-prototype-constructor"},{"level":3,"title":"Object.prototype.toString(radix)","slug":"object-prototype-tostring-radix"},{"level":3,"title":"Object.prototype.toLocaleString()","slug":"object-prototype-tolocalestring"},{"level":3,"title":"Object.prototype.valueOf()","slug":"object-prototype-valueof"},{"level":3,"title":"Object.prototype.hasOwnProperty(prop)","slug":"object-prototype-hasownproperty-prop"},{"level":3,"title":"Object.prototype.isPrototypeOf(obj)","slug":"object-prototype-isprototypeof-obj"},{"level":3,"title":"Object.prototype.propertyIsEnumerable(prop)","slug":"object-prototype-propertyisenumerable-prop"},{"level":2,"title":"在ES5中附加的Object属性","slug":"在es5中附加的object属性"},{"level":3,"title":"Object.defineProperty(obj, prop, descriptor) (ES5)","slug":"object-defineproperty-obj-prop-descriptor-es5"},{"level":3,"title":"Object.defineProperties(obj, props) (ES5)","slug":"object-defineproperties-obj-props-es5"},{"level":3,"title":"Object.getPrototypeOf(obj) (ES5)","slug":"object-getprototypeof-obj-es5"},{"level":3,"title":"Object.create(obj, descr) (ES5)","slug":"object-create-obj-descr-es5"},{"level":3,"title":"Object.getOwnPropertyDesciptor(obj, property) (ES5)","slug":"object-getownpropertydesciptor-obj-property-es5"},{"level":3,"title":"Object.getOwnPropertyNames(obj) (ES5)","slug":"object-getownpropertynames-obj-es5"},{"level":3,"title":"Object.preventExtensions(obj) (ES5) & Object.isExtensible(obj) (ES5)","slug":"object-preventextensions-obj-es5-object-isextensible-obj-es5"},{"level":3,"title":"Object.seal(obj) (ES5) & Object.isSeal(obj) (ES5)","slug":"object-seal-obj-es5-object-isseal-obj-es5"},{"level":3,"title":"Object.freeze(obj) (ES5) & Object.isFrozen(obj) (ES5)","slug":"object-freeze-obj-es5-object-isfrozen-obj-es5"},{"level":3,"title":"Object.keys(obj) (ES5)","slug":"object-keys-obj-es5"},{"level":2,"title":"在ES6中附加的Object属性","slug":"在es6中附加的object属性"},{"level":3,"title":"Object.is(value1, value2) (ES6)","slug":"object-is-value1-value2-es6"},{"level":3,"title":"Object.assign(target, ...sources) (ES6)","slug":"object-assign-target-sources-es6"},{"level":3,"title":"Object.getOwnPropertySymbols(obj) (ES6)","slug":"object-getownpropertysymbols-obj-es6"},{"level":3,"title":"Object.setPrototypeOf(obj, prototype) (ES6)","slug":"object-setprototypeof-obj-prototype-es6"},{"level":2,"title":"在ES8中附加的Object属性","slug":"在es8中附加的object属性"},{"level":3,"title":"Object.getOwnPropertyDescriptors(obj) (ES8)","slug":"object-getownpropertydescriptors-obj-es8"},{"level":3,"title":"Object.values(obj) (ES8)","slug":"object-values-obj-es8"},{"level":3,"title":"Object.entries(obj) (ES8)","slug":"object-entries-obj-es8"},{"level":2,"title":"小结","slug":"小结"}],"relativePath":"learns/javascript/api-object.md","lastUpdated":1638452551944}',r={},i=o('<p><div class="table-of-contents"><ul><li><a href="#object构造器的成员">Object构造器的成员</a><ul><li><a href="#object-prototype">Object.prototype</a></li></ul></li><li><a href="#object-prototype-的成员">Object.prototype 的成员</a><ul><li><a href="#object-prototype-constructor">Object.prototype.constructor</a></li><li><a href="#object-prototype-tostring-radix">Object.prototype.toString(radix)</a></li><li><a href="#object-prototype-tolocalestring">Object.prototype.toLocaleString()</a></li><li><a href="#object-prototype-valueof">Object.prototype.valueOf()</a></li><li><a href="#object-prototype-hasownproperty-prop">Object.prototype.hasOwnProperty(prop)</a></li><li><a href="#object-prototype-isprototypeof-obj">Object.prototype.isPrototypeOf(obj)</a></li><li><a href="#object-prototype-propertyisenumerable-prop">Object.prototype.propertyIsEnumerable(prop)</a></li></ul></li><li><a href="#在es5中附加的object属性">在ES5中附加的Object属性</a><ul><li><a href="#object-defineproperty-obj-prop-descriptor-es5">Object.defineProperty(obj, prop, descriptor) (ES5)</a></li><li><a href="#object-defineproperties-obj-props-es5">Object.defineProperties(obj, props) (ES5)</a></li><li><a href="#object-getprototypeof-obj-es5">Object.getPrototypeOf(obj) (ES5)</a></li><li><a href="#object-create-obj-descr-es5">Object.create(obj, descr) (ES5)</a></li><li><a href="#object-getownpropertydesciptor-obj-property-es5">Object.getOwnPropertyDesciptor(obj, property) (ES5)</a></li><li><a href="#object-getownpropertynames-obj-es5">Object.getOwnPropertyNames(obj) (ES5)</a></li><li><a href="#object-preventextensions-obj-es5-object-isextensible-obj-es5">Object.preventExtensions(obj) (ES5) &amp; Object.isExtensible(obj) (ES5)</a></li><li><a href="#object-seal-obj-es5-object-isseal-obj-es5">Object.seal(obj) (ES5) &amp; Object.isSeal(obj) (ES5)</a></li><li><a href="#object-freeze-obj-es5-object-isfrozen-obj-es5">Object.freeze(obj) (ES5) &amp; Object.isFrozen(obj) (ES5)</a></li><li><a href="#object-keys-obj-es5">Object.keys(obj) (ES5)</a></li></ul></li><li><a href="#在es6中附加的object属性">在ES6中附加的Object属性</a><ul><li><a href="#object-is-value1-value2-es6">Object.is(value1, value2) (ES6)</a></li><li><a href="#object-assign-target-sources-es6">Object.assign(target, ...sources) (ES6)</a></li><li><a href="#object-getownpropertysymbols-obj-es6">Object.getOwnPropertySymbols(obj) (ES6)</a></li><li><a href="#object-setprototypeof-obj-prototype-es6">Object.setPrototypeOf(obj, prototype) (ES6)</a></li></ul></li><li><a href="#在es8中附加的object属性">在ES8中附加的Object属性</a><ul><li><a href="#object-getownpropertydescriptors-obj-es8">Object.getOwnPropertyDescriptors(obj) (ES8)</a></li><li><a href="#object-values-obj-es8">Object.values(obj) (ES8)</a></li><li><a href="#object-entries-obj-es8">Object.entries(obj) (ES8)</a></li></ul></li><li><a href="#小结">小结</a></li></ul></div></p><h1 id="重学之javascript-对象所有api解析" tabindex="-1">重学之JavaScript 对象所有API解析 <a class="header-anchor" href="#重学之javascript-对象所有api解析" aria-hidden="true">#</a></h1><p>创建对象的两种方式：</p>',3),b=c("div",{class:"language-js line-numbers-mode"},[c("pre",null,[c("code",null,[c("span",{class:"token keyword"},"var"),p(" o "),c("span",{class:"token operator"},"="),p(),c("span",{class:"token keyword"},"new"),p(),c("span",{class:"token class-name"},"Object"),c("span",{class:"token punctuation"},"("),c("span",{class:"token punctuation"},")"),c("span",{class:"token punctuation"},";"),p("\n"),c("span",{class:"token keyword"},"var"),p(" o "),c("span",{class:"token operator"},"="),p(),c("span",{class:"token punctuation"},"{"),c("span",{class:"token punctuation"},"}"),c("span",{class:"token punctuation"},";"),p(),c("span",{class:"token comment"},"// 推荐"),p("\n")])]),c("div",{class:"line-numbers-wrapper"},[c("span",{class:"line-number"},"1"),c("br"),c("span",{class:"line-number"},"2"),c("br")])],-1),k=c("p",null,"该构造器可以接受任何类型的参数，并且会自动识别参数的类型，并选择更合适的构造器来完成相关操作。比如：",-1),m=c("div",{class:"language-js line-numbers-mode"},[c("pre",null,[c("code",null,[c("span",{class:"token keyword"},"var"),p(" o "),c("span",{class:"token operator"},"="),p(),c("span",{class:"token keyword"},"new"),p(),c("span",{class:"token class-name"},"Object"),c("span",{class:"token punctuation"},"("),c("span",{class:"token string"},"'something'"),c("span",{class:"token punctuation"},")"),c("span",{class:"token punctuation"},";"),p("\no"),c("span",{class:"token punctuation"},"."),p("constructor"),c("span",{class:"token punctuation"},";"),p(),c("span",{class:"token comment"},"// ƒ String() { [native code] }"),p("\n"),c("span",{class:"token keyword"},"var"),p(" n "),c("span",{class:"token operator"},"="),p(),c("span",{class:"token keyword"},"new"),p(),c("span",{class:"token class-name"},"Object"),c("span",{class:"token punctuation"},"("),c("span",{class:"token number"},"123"),c("span",{class:"token punctuation"},")"),c("span",{class:"token punctuation"},";"),p("\nn"),c("span",{class:"token punctuation"},"."),p("constructor"),c("span",{class:"token punctuation"},";"),p(),c("span",{class:"token comment"},"// ƒ Number() { [native code] }"),p("\nn"),c("span",{class:"token punctuation"},"."),p("constructor "),c("span",{class:"token operator"},"==="),p(" Number"),c("span",{class:"token punctuation"},";"),p(),c("span",{class:"token comment"},"// true"),p("\n")])]),c("div",{class:"line-numbers-wrapper"},[c("span",{class:"line-number"},"1"),c("br"),c("span",{class:"line-number"},"2"),c("br"),c("span",{class:"line-number"},"3"),c("br"),c("span",{class:"line-number"},"4"),c("br"),c("span",{class:"line-number"},"5"),c("br")])],-1),d=c("h2",{id:"object构造器的成员",tabindex:"-1"},[p("Object构造器的成员 "),c("a",{class:"header-anchor",href:"#object构造器的成员","aria-hidden":"true"},"#")],-1),j=c("h3",{id:"object-prototype",tabindex:"-1"},[p("Object.prototype "),c("a",{class:"header-anchor",href:"#object-prototype","aria-hidden":"true"},"#")],-1),f=c("p",null,"该属性是所有对象的原型（包括 Object对象本身），语言中的其他对象正是通过对该属性上添加东西来实现它们之间的继承关系的。所以要小心使用。 比如",-1),y=c("div",{class:"language-js line-numbers-mode"},[c("pre",null,[c("code",null,[c("span",{class:"token keyword"},"var"),p(" s "),c("span",{class:"token operator"},"="),p(),c("span",{class:"token keyword"},"new"),p(),c("span",{class:"token class-name"},"String"),c("span",{class:"token punctuation"},"("),c("span",{class:"token string"},"'xuanyuan'"),c("span",{class:"token punctuation"},")"),c("span",{class:"token punctuation"},";"),p("\n"),c("span",{class:"token class-name"},"Object"),c("span",{class:"token punctuation"},"."),p("prototype"),c("span",{class:"token punctuation"},"."),p("custom "),c("span",{class:"token operator"},"="),p(),c("span",{class:"token number"},"1"),c("span",{class:"token punctuation"},";"),p("\nconsole"),c("span",{class:"token punctuation"},"."),c("span",{class:"token function"},"log"),c("span",{class:"token punctuation"},"("),p("s"),c("span",{class:"token punctuation"},"."),p("custom"),c("span",{class:"token punctuation"},")"),c("span",{class:"token punctuation"},";"),p(),c("span",{class:"token comment"},"// 1"),p("\n")])]),c("div",{class:"line-numbers-wrapper"},[c("span",{class:"line-number"},"1"),c("br"),c("span",{class:"line-number"},"2"),c("br"),c("span",{class:"line-number"},"3"),c("br")])],-1),g=c("h2",{id:"object-prototype-的成员",tabindex:"-1"},[p("Object.prototype 的成员 "),c("a",{class:"header-anchor",href:"#object-prototype-的成员","aria-hidden":"true"},"#")],-1),O=c("h3",{id:"object-prototype-constructor",tabindex:"-1"},[p("Object.prototype.constructor "),c("a",{class:"header-anchor",href:"#object-prototype-constructor","aria-hidden":"true"},"#")],-1),h=c("p",null,"该属性指向用来构造该函数对象的构造器，在这里为Object()",-1),v=c("div",{class:"language-js line-numbers-mode"},[c("pre",null,[c("code",null,[c("span",{class:"token class-name"},"Object"),c("span",{class:"token punctuation"},"."),p("prototype"),c("span",{class:"token punctuation"},"."),p("constructor "),c("span",{class:"token operator"},"==="),p(" Object"),c("span",{class:"token punctuation"},";"),p(),c("span",{class:"token comment"},"// true"),p("\n"),c("span",{class:"token keyword"},"var"),p(" o "),c("span",{class:"token operator"},"="),p(),c("span",{class:"token keyword"},"new"),p(),c("span",{class:"token class-name"},"Object"),c("span",{class:"token punctuation"},"("),c("span",{class:"token punctuation"},")"),c("span",{class:"token punctuation"},";"),p("\no"),c("span",{class:"token punctuation"},"."),p("constructor "),c("span",{class:"token operator"},"==="),p(" Object"),c("span",{class:"token punctuation"},";"),p(),c("span",{class:"token comment"},"// true"),p("\n")])]),c("div",{class:"line-numbers-wrapper"},[c("span",{class:"line-number"},"1"),c("br"),c("span",{class:"line-number"},"2"),c("br"),c("span",{class:"line-number"},"3"),c("br")])],-1),w=c("h3",{id:"object-prototype-tostring-radix",tabindex:"-1"},[p("Object.prototype.toString(radix) "),c("a",{class:"header-anchor",href:"#object-prototype-tostring-radix","aria-hidden":"true"},"#")],-1),S=c("p",null,"该方法返回的是一个用于描述目标对象的字符串。特别地，当目标是一个Number对象时，可以传递一个用于进制数的参数radix，该参数radix，该参数的默认值为10。",-1),_=c("div",{class:"language-js line-numbers-mode"},[c("pre",null,[c("code",null,[c("span",{class:"token keyword"},"var"),p(" o "),c("span",{class:"token operator"},"="),p(),c("span",{class:"token punctuation"},"{"),p("prop"),c("span",{class:"token operator"},":"),c("span",{class:"token number"},"1"),c("span",{class:"token punctuation"},"}"),c("span",{class:"token punctuation"},";"),p("\no"),c("span",{class:"token punctuation"},"."),c("span",{class:"token function"},"toString"),c("span",{class:"token punctuation"},"("),c("span",{class:"token punctuation"},")"),c("span",{class:"token punctuation"},";"),p(),c("span",{class:"token comment"},"// '[object Object]'"),p("\n"),c("span",{class:"token keyword"},"var"),p(" n "),c("span",{class:"token operator"},"="),p(),c("span",{class:"token keyword"},"new"),p(),c("span",{class:"token class-name"},"Number"),c("span",{class:"token punctuation"},"("),c("span",{class:"token number"},"255"),c("span",{class:"token punctuation"},")"),c("span",{class:"token punctuation"},";"),p("\nn"),c("span",{class:"token punctuation"},"."),c("span",{class:"token function"},"toString"),c("span",{class:"token punctuation"},"("),c("span",{class:"token punctuation"},")"),c("span",{class:"token punctuation"},";"),p(),c("span",{class:"token comment"},"// '255'"),p("\nn"),c("span",{class:"token punctuation"},"."),c("span",{class:"token function"},"toString"),c("span",{class:"token punctuation"},"("),c("span",{class:"token number"},"16"),c("span",{class:"token punctuation"},")"),c("span",{class:"token punctuation"},";"),p(),c("span",{class:"token comment"},"// 'ff'"),p("\n")])]),c("div",{class:"line-numbers-wrapper"},[c("span",{class:"line-number"},"1"),c("br"),c("span",{class:"line-number"},"2"),c("br"),c("span",{class:"line-number"},"3"),c("br"),c("span",{class:"line-number"},"4"),c("br"),c("span",{class:"line-number"},"5"),c("br")])],-1),E=c("h3",{id:"object-prototype-tolocalestring",tabindex:"-1"},[p("Object.prototype.toLocaleString() "),c("a",{class:"header-anchor",href:"#object-prototype-tolocalestring","aria-hidden":"true"},"#")],-1),P=c("p",null,"该方法的作用与toString()基本相同，只不过它做一些本地化处理。该方法会根据当前对象的不同而被重写，例如Date(),Number(),Array(),它们的值都会以本地化的形式输出。当然，对于包括Object()在内的其他大多数对象来说，该方法与toString()是基本相同的。",-1),x=c("p",null,"在浏览器环境下，可以通过BOM对象Navigator的language属性（在IE中则是userLanguage）来了解当前所使用的语言：",-1),A=c("div",{class:"language-js line-numbers-mode"},[c("pre",null,[c("code",null,[p("navigator"),c("span",{class:"token punctuation"},"."),p("language"),c("span",{class:"token punctuation"},";"),p(),c("span",{class:"token comment"},"//'en-US'"),p("\n")])]),c("div",{class:"line-numbers-wrapper"},[c("span",{class:"line-number"},"1"),c("br")])],-1),N=c("h3",{id:"object-prototype-valueof",tabindex:"-1"},[p("Object.prototype.valueOf() "),c("a",{class:"header-anchor",href:"#object-prototype-valueof","aria-hidden":"true"},"#")],-1),I=c("p",null,"该方法返回的是用基本类型所表示的this值，如果它可以用基本类型表示的话。如果Number对象返回的是它的基本数值，而Date对象返回的是一个时间戳（timestamp）。如果无法用基本数据类型表示，该方法会返回this本身。",-1),D=c("div",{class:"language-js line-numbers-mode"},[c("pre",null,[c("code",null,[c("span",{class:"token comment"},"// Object"),p("\n"),c("span",{class:"token keyword"},"var"),p(" o "),c("span",{class:"token operator"},"="),p(),c("span",{class:"token punctuation"},"{"),c("span",{class:"token punctuation"},"}"),c("span",{class:"token punctuation"},";"),p("\n"),c("span",{class:"token keyword"},"typeof"),p(" o"),c("span",{class:"token punctuation"},"."),c("span",{class:"token function"},"valueOf"),c("span",{class:"token punctuation"},"("),c("span",{class:"token punctuation"},")"),c("span",{class:"token punctuation"},";"),p(),c("span",{class:"token comment"},"// 'object'"),p("\no"),c("span",{class:"token punctuation"},"."),c("span",{class:"token function"},"valueOf"),c("span",{class:"token punctuation"},"("),c("span",{class:"token punctuation"},")"),p(),c("span",{class:"token operator"},"==="),p(" o"),c("span",{class:"token punctuation"},";"),p(),c("span",{class:"token comment"},"// true"),p("\n"),c("span",{class:"token comment"},"// Number"),p("\n"),c("span",{class:"token keyword"},"var"),p(" n "),c("span",{class:"token operator"},"="),p(),c("span",{class:"token keyword"},"new"),p(),c("span",{class:"token class-name"},"Number"),c("span",{class:"token punctuation"},"("),c("span",{class:"token number"},"101"),c("span",{class:"token punctuation"},")"),c("span",{class:"token punctuation"},";"),p("\n"),c("span",{class:"token keyword"},"typeof"),p(" n"),c("span",{class:"token punctuation"},";"),p(),c("span",{class:"token comment"},"// 'object'"),p("\n"),c("span",{class:"token keyword"},"typeof"),p(" n"),c("span",{class:"token punctuation"},"."),p("vauleOf"),c("span",{class:"token punctuation"},";"),p(),c("span",{class:"token comment"},"// 'function'"),p("\n"),c("span",{class:"token keyword"},"typeof"),p(" n"),c("span",{class:"token punctuation"},"."),c("span",{class:"token function"},"valueOf"),c("span",{class:"token punctuation"},"("),c("span",{class:"token punctuation"},")"),c("span",{class:"token punctuation"},";"),p(),c("span",{class:"token comment"},"// 'number'"),p("\nn"),c("span",{class:"token punctuation"},"."),c("span",{class:"token function"},"valueOf"),c("span",{class:"token punctuation"},"("),c("span",{class:"token punctuation"},")"),p(),c("span",{class:"token operator"},"==="),p(" n"),c("span",{class:"token punctuation"},";"),p(),c("span",{class:"token comment"},"// false"),p("\n"),c("span",{class:"token comment"},"// Date"),p("\n"),c("span",{class:"token keyword"},"var"),p(" d "),c("span",{class:"token operator"},"="),p(),c("span",{class:"token keyword"},"new"),p(),c("span",{class:"token class-name"},"Date"),c("span",{class:"token punctuation"},"("),c("span",{class:"token punctuation"},")"),c("span",{class:"token punctuation"},";"),p("\n"),c("span",{class:"token keyword"},"typeof"),p(" d"),c("span",{class:"token punctuation"},"."),c("span",{class:"token function"},"valueOf"),c("span",{class:"token punctuation"},"("),c("span",{class:"token punctuation"},")"),c("span",{class:"token punctuation"},";"),p(),c("span",{class:"token comment"},"// 'number'"),p("\nd"),c("span",{class:"token punctuation"},"."),c("span",{class:"token function"},"valueOf"),c("span",{class:"token punctuation"},"("),c("span",{class:"token punctuation"},")"),c("span",{class:"token punctuation"},";"),p(),c("span",{class:"token comment"},"// 1503146772355"),p("\n")])]),c("div",{class:"line-numbers-wrapper"},[c("span",{class:"line-number"},"1"),c("br"),c("span",{class:"line-number"},"2"),c("br"),c("span",{class:"line-number"},"3"),c("br"),c("span",{class:"line-number"},"4"),c("br"),c("span",{class:"line-number"},"5"),c("br"),c("span",{class:"line-number"},"6"),c("br"),c("span",{class:"line-number"},"7"),c("br"),c("span",{class:"line-number"},"8"),c("br"),c("span",{class:"line-number"},"9"),c("br"),c("span",{class:"line-number"},"10"),c("br"),c("span",{class:"line-number"},"11"),c("br"),c("span",{class:"line-number"},"12"),c("br"),c("span",{class:"line-number"},"13"),c("br"),c("span",{class:"line-number"},"14"),c("br")])],-1),T=c("h3",{id:"object-prototype-hasownproperty-prop",tabindex:"-1"},[p("Object.prototype.hasOwnProperty(prop) "),c("a",{class:"header-anchor",href:"#object-prototype-hasownproperty-prop","aria-hidden":"true"},"#")],-1),z=c("p",null,"该方法仅在目标属性为对象自身属性时返回true,而当该属性是从原型链中继承而来或根本不存在时，返回false。",-1),V=c("p",null,"var o = {prop:1}; o.hasOwnProperty('prop'); // true o.hasOwnProperty('toString'); // false o.hasOwnProperty('formString'); // false",-1),C=c("h3",{id:"object-prototype-isprototypeof-obj",tabindex:"-1"},[p("Object.prototype.isPrototypeOf(obj) "),c("a",{class:"header-anchor",href:"#object-prototype-isprototypeof-obj","aria-hidden":"true"},"#")],-1),L=c("p",null,"如果目标对象是当前对象的原型，该方法就会返回true，而且，当前对象所在原型上的所有对象都能通过该测试，并不局限与它的直系关系。",-1),F=c("div",{class:"language-js line-numbers-mode"},[c("pre",null,[c("code",null,[c("span",{class:"token keyword"},"var"),p(" s "),c("span",{class:"token operator"},"="),p(),c("span",{class:"token keyword"},"new"),p(),c("span",{class:"token class-name"},"String"),c("span",{class:"token punctuation"},"("),c("span",{class:"token string"},"''"),c("span",{class:"token punctuation"},")"),c("span",{class:"token punctuation"},";"),p("\n"),c("span",{class:"token class-name"},"Object"),c("span",{class:"token punctuation"},"."),p("prototype"),c("span",{class:"token punctuation"},"."),c("span",{class:"token function"},"isPrototypeOf"),c("span",{class:"token punctuation"},"("),p("s"),c("span",{class:"token punctuation"},")"),c("span",{class:"token punctuation"},";"),p(),c("span",{class:"token comment"},"// true"),p("\n"),c("span",{class:"token class-name"},"String"),c("span",{class:"token punctuation"},"."),p("prototype"),c("span",{class:"token punctuation"},"."),c("span",{class:"token function"},"isPrototypeOf"),c("span",{class:"token punctuation"},"("),p("s"),c("span",{class:"token punctuation"},")"),c("span",{class:"token punctuation"},";"),p(),c("span",{class:"token comment"},"// true"),p("\n"),c("span",{class:"token class-name"},"Array"),c("span",{class:"token punctuation"},"."),p("prototype"),c("span",{class:"token punctuation"},"."),c("span",{class:"token function"},"isPrototypeOf"),c("span",{class:"token punctuation"},"("),p("s"),c("span",{class:"token punctuation"},")"),c("span",{class:"token punctuation"},";"),p(),c("span",{class:"token comment"},"// false"),p("\n")])]),c("div",{class:"line-numbers-wrapper"},[c("span",{class:"line-number"},"1"),c("br"),c("span",{class:"line-number"},"2"),c("br"),c("span",{class:"line-number"},"3"),c("br"),c("span",{class:"line-number"},"4"),c("br")])],-1),G=c("h3",{id:"object-prototype-propertyisenumerable-prop",tabindex:"-1"},[p("Object.prototype.propertyIsEnumerable(prop) "),c("a",{class:"header-anchor",href:"#object-prototype-propertyisenumerable-prop","aria-hidden":"true"},"#")],-1),H=c("p",null,"如果目标属性能在for in循环中被显示出来，该方法就返回true",-1),J=c("div",{class:"language-js line-numbers-mode"},[c("pre",null,[c("code",null,[c("span",{class:"token keyword"},"var"),p(" a "),c("span",{class:"token operator"},"="),p(),c("span",{class:"token punctuation"},"["),c("span",{class:"token number"},"1"),c("span",{class:"token punctuation"},","),c("span",{class:"token number"},"2"),c("span",{class:"token punctuation"},","),c("span",{class:"token number"},"3"),c("span",{class:"token punctuation"},"]"),c("span",{class:"token punctuation"},";"),p("\na"),c("span",{class:"token punctuation"},"."),c("span",{class:"token function"},"propertyIsEnumerable"),c("span",{class:"token punctuation"},"("),c("span",{class:"token string"},"'length'"),c("span",{class:"token punctuation"},")"),c("span",{class:"token punctuation"},";"),p(),c("span",{class:"token comment"},"// false"),p("\na"),c("span",{class:"token punctuation"},"."),c("span",{class:"token function"},"propertyIsEnumerable"),c("span",{class:"token punctuation"},"("),c("span",{class:"token number"},"0"),c("span",{class:"token punctuation"},")"),c("span",{class:"token punctuation"},";"),p(),c("span",{class:"token comment"},"// true"),p("\n")])]),c("div",{class:"line-numbers-wrapper"},[c("span",{class:"line-number"},"1"),c("br"),c("span",{class:"line-number"},"2"),c("br"),c("span",{class:"line-number"},"3"),c("br")])],-1),M=o('<h2 id="在es5中附加的object属性" tabindex="-1">在ES5中附加的Object属性 <a class="header-anchor" href="#在es5中附加的object属性" aria-hidden="true">#</a></h2><p>在ES3中，除了一些内置属性（如：Math.PI），对象的所有的属性在任何时候都可以被修改、插入、删除。在ES5中，我们可以设置属性是否可以被改变或是被删除——在这之前，它是内置属性的特权。ES5中引入了属性描述符的概念，我们可以通过它对所定义的属性有更大的控制权。这些属性描述符（特性）包括：</p><ul><li>value——当试图获取属性时所返回的值。</li><li>writable——该属性是否可写。</li><li>enumerable——该属性在for in循环中是否会被枚举</li><li>configurable——该属性是否可被删除。</li><li>set()——该属性的更新操作所调用的函数。</li><li>get()——获取属性值时所调用的函数。</li></ul><p>另外，数据描述符（其中属性为：enumerable，configurable，value，writable）与存取描述符（其中属性为enumerable，configurable，set()，get()）之间是有互斥关系的。在定义了set()和get()之后，描述符会认为存取操作已被 定义了，其中再定义value和writable会引起错误。 以下是ES3风格的属性定义方式：</p>',4),R=c("div",{class:"language-js line-numbers-mode"},[c("pre",null,[c("code",null,[c("span",{class:"token keyword"},"var"),p(" person "),c("span",{class:"token operator"},"="),p(),c("span",{class:"token punctuation"},"{"),c("span",{class:"token punctuation"},"}"),c("span",{class:"token punctuation"},";"),p("\nperson"),c("span",{class:"token punctuation"},"."),p("legs "),c("span",{class:"token operator"},"="),p(),c("span",{class:"token number"},"2"),c("span",{class:"token punctuation"},";"),p("\n")])]),c("div",{class:"line-numbers-wrapper"},[c("span",{class:"line-number"},"1"),c("br"),c("span",{class:"line-number"},"2"),c("br")])],-1),q=c("p",null,"以下是等价的ES5通过数据描述符定义属性的方式：",-1),U=c("div",{class:"language-js line-numbers-mode"},[c("pre",null,[c("code",null,[c("span",{class:"token keyword"},"var"),p(" person "),c("span",{class:"token operator"},"="),p(),c("span",{class:"token punctuation"},"{"),c("span",{class:"token punctuation"},"}"),c("span",{class:"token punctuation"},";"),p("\nObject"),c("span",{class:"token punctuation"},"."),c("span",{class:"token function"},"defineProperty"),c("span",{class:"token punctuation"},"("),p("person"),c("span",{class:"token punctuation"},","),p(),c("span",{class:"token string"},"'legs'"),c("span",{class:"token punctuation"},","),p(),c("span",{class:"token punctuation"},"{"),p("\n    value"),c("span",{class:"token operator"},":"),p(),c("span",{class:"token number"},"2"),c("span",{class:"token punctuation"},","),p("\n    writable"),c("span",{class:"token operator"},":"),p(),c("span",{class:"token boolean"},"true"),c("span",{class:"token punctuation"},","),p("\n    configurable"),c("span",{class:"token operator"},":"),p(),c("span",{class:"token boolean"},"true"),c("span",{class:"token punctuation"},","),p("\n    enumerable"),c("span",{class:"token operator"},":"),p(),c("span",{class:"token boolean"},"true"),p("\n"),c("span",{class:"token punctuation"},"}"),c("span",{class:"token punctuation"},")"),c("span",{class:"token punctuation"},";"),p("\n")])]),c("div",{class:"line-numbers-wrapper"},[c("span",{class:"line-number"},"1"),c("br"),c("span",{class:"line-number"},"2"),c("br"),c("span",{class:"line-number"},"3"),c("br"),c("span",{class:"line-number"},"4"),c("br"),c("span",{class:"line-number"},"5"),c("br"),c("span",{class:"line-number"},"6"),c("br"),c("span",{class:"line-number"},"7"),c("br")])],-1),B=c("p",null,"其中， 除了value的默认值为undefined以外，其他的默认值都为false。这就意味着，如果想要通过这一方式定义一个可写的属性，必须显示将它们设为true。 或者，我们也可以通过ES5的存储描述符来定义：",-1),K=c("div",{class:"language-js line-numbers-mode"},[c("pre",null,[c("code",null,[c("span",{class:"token keyword"},"var"),p(" person "),c("span",{class:"token operator"},"="),p(),c("span",{class:"token punctuation"},"{"),c("span",{class:"token punctuation"},"}"),c("span",{class:"token punctuation"},";"),p("\nObject"),c("span",{class:"token punctuation"},"."),c("span",{class:"token function"},"defineProperty"),c("span",{class:"token punctuation"},"("),p("person"),c("span",{class:"token punctuation"},","),p(),c("span",{class:"token string"},"'legs'"),c("span",{class:"token punctuation"},","),p(),c("span",{class:"token punctuation"},"{"),p("\n    "),c("span",{class:"token function-variable function"},"set"),c("span",{class:"token operator"},":"),c("span",{class:"token keyword"},"function"),c("span",{class:"token punctuation"},"("),c("span",{class:"token parameter"},"v"),c("span",{class:"token punctuation"},")"),p(),c("span",{class:"token punctuation"},"{"),p("\n        "),c("span",{class:"token keyword"},"return"),p(),c("span",{class:"token keyword"},"this"),c("span",{class:"token punctuation"},"."),p("value "),c("span",{class:"token operator"},"="),p(" v"),c("span",{class:"token punctuation"},";"),p("\n    "),c("span",{class:"token punctuation"},"}"),c("span",{class:"token punctuation"},","),p("\n    "),c("span",{class:"token function-variable function"},"get"),c("span",{class:"token operator"},":"),p(),c("span",{class:"token keyword"},"function"),c("span",{class:"token punctuation"},"("),c("span",{class:"token parameter"},"v"),c("span",{class:"token punctuation"},")"),p(),c("span",{class:"token punctuation"},"{"),p("\n        "),c("span",{class:"token keyword"},"return"),p(),c("span",{class:"token keyword"},"this"),c("span",{class:"token punctuation"},"."),p("value"),c("span",{class:"token punctuation"},";"),p("\n    "),c("span",{class:"token punctuation"},"}"),c("span",{class:"token punctuation"},","),p("\n    configurable"),c("span",{class:"token operator"},":"),p(),c("span",{class:"token boolean"},"true"),c("span",{class:"token punctuation"},","),p("\n    enumerable"),c("span",{class:"token operator"},":"),p(),c("span",{class:"token boolean"},"true"),p("\n"),c("span",{class:"token punctuation"},"}"),c("span",{class:"token punctuation"},")"),c("span",{class:"token punctuation"},";"),p("\nperson"),c("span",{class:"token punctuation"},"."),p("legs "),c("span",{class:"token operator"},"="),p(),c("span",{class:"token number"},"2"),c("span",{class:"token punctuation"},";"),p("\n")])]),c("div",{class:"line-numbers-wrapper"},[c("span",{class:"line-number"},"1"),c("br"),c("span",{class:"line-number"},"2"),c("br"),c("span",{class:"line-number"},"3"),c("br"),c("span",{class:"line-number"},"4"),c("br"),c("span",{class:"line-number"},"5"),c("br"),c("span",{class:"line-number"},"6"),c("br"),c("span",{class:"line-number"},"7"),c("br"),c("span",{class:"line-number"},"8"),c("br"),c("span",{class:"line-number"},"9"),c("br"),c("span",{class:"line-number"},"10"),c("br"),c("span",{class:"line-number"},"11"),c("br"),c("span",{class:"line-number"},"12"),c("br")])],-1),Q=c("p",null,"这样一来，多了许多可以用来描述属性的代码，如果想要防止别人篡改我们的属性，就必须要用到它们。此外，也不要忘了浏览器向后兼容ES3方面所做的考虑。例如，跟添加Array.prototype属性不一样，我们不能再旧版的浏览器中使用shim这一特性。",-1),W=c("p",null,"另外，我们还可以（通过定义nonmalleable属性），在具体行为中运用这些描述符：",-1),X=c("div",{class:"language-js line-numbers-mode"},[c("pre",null,[c("code",null,[c("span",{class:"token keyword"},"var"),p(" person "),c("span",{class:"token operator"},"="),p(),c("span",{class:"token punctuation"},"{"),c("span",{class:"token punctuation"},"}"),c("span",{class:"token punctuation"},";"),p("\nObject"),c("span",{class:"token punctuation"},"."),c("span",{class:"token function"},"defineProperty"),c("span",{class:"token punctuation"},"("),p("person"),c("span",{class:"token punctuation"},","),p(),c("span",{class:"token string"},"'heads'"),c("span",{class:"token punctuation"},","),p(),c("span",{class:"token punctuation"},"{"),p("value"),c("span",{class:"token operator"},":"),p(),c("span",{class:"token number"},"1"),c("span",{class:"token punctuation"},"}"),c("span",{class:"token punctuation"},")"),c("span",{class:"token punctuation"},";"),p("\nperson"),c("span",{class:"token punctuation"},"."),p("heads "),c("span",{class:"token operator"},"="),p(),c("span",{class:"token number"},"0"),c("span",{class:"token punctuation"},";"),p(),c("span",{class:"token comment"},"// 0"),p("\nperson"),c("span",{class:"token punctuation"},"."),p("heads"),c("span",{class:"token punctuation"},";"),p(),c("span",{class:"token comment"},"// 1  (改不了)"),p("\n"),c("span",{class:"token keyword"},"delete"),p(" person"),c("span",{class:"token punctuation"},"."),p("heads"),c("span",{class:"token punctuation"},";"),p(),c("span",{class:"token comment"},"// false"),p("\nperson"),c("span",{class:"token punctuation"},"."),p("heads "),c("span",{class:"token comment"},"// 1 (删不掉)"),p("\n")])]),c("div",{class:"line-numbers-wrapper"},[c("span",{class:"line-number"},"1"),c("br"),c("span",{class:"line-number"},"2"),c("br"),c("span",{class:"line-number"},"3"),c("br"),c("span",{class:"line-number"},"4"),c("br"),c("span",{class:"line-number"},"5"),c("br"),c("span",{class:"line-number"},"6"),c("br")])],-1),Y=c("h3",{id:"object-defineproperty-obj-prop-descriptor-es5",tabindex:"-1"},[p("Object.defineProperty(obj, prop, descriptor) (ES5) "),c("a",{class:"header-anchor",href:"#object-defineproperty-obj-prop-descriptor-es5","aria-hidden":"true"},"#")],-1),Z=c("blockquote",null,[c("p",null,"Vue.js文档：如何追踪变化 把一个普通 JavaScript 对象传给 Vue 实例的 data 选项，Vue 将遍历此对象所有的属性，并使用 Object.defineProperty 把这些属性全部转为 getter/setter。Object.defineProperty 是仅 ES5 支持，且无法 shim 的特性，这也就是为什么 Vue 不支持 IE8 以及更低版本浏览器的原因。")],-1),$=c("h3",{id:"object-defineproperties-obj-props-es5",tabindex:"-1"},[p("Object.defineProperties(obj, props) (ES5) "),c("a",{class:"header-anchor",href:"#object-defineproperties-obj-props-es5","aria-hidden":"true"},"#")],-1),nn=c("p",null,"该方法的作用与defineProperty()基本相同，只不过它可以用来一次定义多个属性。 比如：",-1),sn=c("div",{class:"language-js line-numbers-mode"},[c("pre",null,[c("code",null,[c("span",{class:"token keyword"},"var"),p(" glass "),c("span",{class:"token operator"},"="),p(" Object"),c("span",{class:"token punctuation"},"."),c("span",{class:"token function"},"defineProperties"),c("span",{class:"token punctuation"},"("),c("span",{class:"token punctuation"},"{"),c("span",{class:"token punctuation"},"}"),c("span",{class:"token punctuation"},","),p(),c("span",{class:"token punctuation"},"{"),p("\n  "),c("span",{class:"token string"},"'color'"),c("span",{class:"token operator"},":"),p(),c("span",{class:"token punctuation"},"{"),p("\n      value"),c("span",{class:"token operator"},":"),p(),c("span",{class:"token string"},"'transparent'"),c("span",{class:"token punctuation"},","),p("\n      writable"),c("span",{class:"token operator"},":"),p(),c("span",{class:"token boolean"},"true"),p("\n  "),c("span",{class:"token punctuation"},"}"),c("span",{class:"token punctuation"},","),p("\n  "),c("span",{class:"token string"},"'fullness'"),c("span",{class:"token operator"},":"),p(),c("span",{class:"token punctuation"},"{"),p("\n      value"),c("span",{class:"token operator"},":"),p(),c("span",{class:"token string"},"'half'"),c("span",{class:"token punctuation"},","),p("\n      writable"),c("span",{class:"token operator"},":"),p(),c("span",{class:"token boolean"},"false"),p("\n  "),c("span",{class:"token punctuation"},"}"),p("\n"),c("span",{class:"token punctuation"},"}"),c("span",{class:"token punctuation"},")"),c("span",{class:"token punctuation"},";"),p("\nglass"),c("span",{class:"token punctuation"},"."),p("fullness"),c("span",{class:"token punctuation"},";"),p(),c("span",{class:"token comment"},"// 'half'"),p("\n")])]),c("div",{class:"line-numbers-wrapper"},[c("span",{class:"line-number"},"1"),c("br"),c("span",{class:"line-number"},"2"),c("br"),c("span",{class:"line-number"},"3"),c("br"),c("span",{class:"line-number"},"4"),c("br"),c("span",{class:"line-number"},"5"),c("br"),c("span",{class:"line-number"},"6"),c("br"),c("span",{class:"line-number"},"7"),c("br"),c("span",{class:"line-number"},"8"),c("br"),c("span",{class:"line-number"},"9"),c("br"),c("span",{class:"line-number"},"10"),c("br"),c("span",{class:"line-number"},"11"),c("br")])],-1),an=c("h3",{id:"object-getprototypeof-obj-es5",tabindex:"-1"},[p("Object.getPrototypeOf(obj) (ES5) "),c("a",{class:"header-anchor",href:"#object-getprototypeof-obj-es5","aria-hidden":"true"},"#")],-1),en=c("p",null,"之前在ES3中，我们往往需要通过Object.prototype.isPrototypeOf()去猜测某个给定的对象的原型是什么，如今在ES5中，我们可以直接询问改对象“你的原型是什么？”",-1),tn=c("div",{class:"language-js line-numbers-mode"},[c("pre",null,[c("code",null,[p("Object"),c("span",{class:"token punctuation"},"."),c("span",{class:"token function"},"getPrototypeOf"),c("span",{class:"token punctuation"},"("),c("span",{class:"token punctuation"},"["),c("span",{class:"token punctuation"},"]"),c("span",{class:"token punctuation"},")"),p(),c("span",{class:"token operator"},"==="),p(),c("span",{class:"token class-name"},"Array"),c("span",{class:"token punctuation"},"."),p("prototype"),c("span",{class:"token punctuation"},";"),p(),c("span",{class:"token comment"},"// true"),p("\nObject"),c("span",{class:"token punctuation"},"."),c("span",{class:"token function"},"getPrototypeOf"),c("span",{class:"token punctuation"},"("),c("span",{class:"token class-name"},"Array"),c("span",{class:"token punctuation"},"."),p("prototype"),c("span",{class:"token punctuation"},")"),p(),c("span",{class:"token operator"},"==="),p(),c("span",{class:"token class-name"},"Object"),c("span",{class:"token punctuation"},"."),p("prototype"),c("span",{class:"token punctuation"},";"),p(),c("span",{class:"token comment"},"// true"),p("\nObject"),c("span",{class:"token punctuation"},"."),c("span",{class:"token function"},"getPrototypeOf"),c("span",{class:"token punctuation"},"("),c("span",{class:"token class-name"},"Object"),c("span",{class:"token punctuation"},"."),p("prototype"),c("span",{class:"token punctuation"},")"),p(),c("span",{class:"token operator"},"==="),p(),c("span",{class:"token keyword"},"null"),c("span",{class:"token punctuation"},";"),p(),c("span",{class:"token comment"},"// true"),p("\n")])]),c("div",{class:"line-numbers-wrapper"},[c("span",{class:"line-number"},"1"),c("br"),c("span",{class:"line-number"},"2"),c("br"),c("span",{class:"line-number"},"3"),c("br")])],-1),on=c("h3",{id:"object-create-obj-descr-es5",tabindex:"-1"},[p("Object.create(obj, descr) (ES5) "),c("a",{class:"header-anchor",href:"#object-create-obj-descr-es5","aria-hidden":"true"},"#")],-1),cn=c("p",null,"该方法主要用于创建一个新对象，并为其设置原型，用（上述）属性描述符来定义对象的原型属性。",-1),pn=c("div",{class:"language-js line-numbers-mode"},[c("pre",null,[c("code",null,[c("span",{class:"token keyword"},"var"),p(" o "),c("span",{class:"token operator"},"="),p(" Object"),c("span",{class:"token punctuation"},"."),c("span",{class:"token function"},"create"),c("span",{class:"token punctuation"},"("),p("parent"),c("span",{class:"token punctuation"},","),p(),c("span",{class:"token punctuation"},"{"),p("\n    prop"),c("span",{class:"token operator"},":"),p(),c("span",{class:"token punctuation"},"{"),p("\n        value"),c("span",{class:"token operator"},":"),p(),c("span",{class:"token number"},"1"),p("\n    "),c("span",{class:"token punctuation"},"}"),p("\n"),c("span",{class:"token punctuation"},"}"),c("span",{class:"token punctuation"},")"),c("span",{class:"token punctuation"},";"),p("\no"),c("span",{class:"token punctuation"},"."),p("hi"),c("span",{class:"token punctuation"},";"),p(),c("span",{class:"token comment"},"// 'Hello'"),p("\n"),c("span",{class:"token comment"},"// 获得它的原型"),p("\nObject"),c("span",{class:"token punctuation"},"."),c("span",{class:"token function"},"getPrototypeOf"),c("span",{class:"token punctuation"},"("),p("parent"),c("span",{class:"token punctuation"},")"),p(),c("span",{class:"token operator"},"==="),p(),c("span",{class:"token class-name"},"Object"),c("span",{class:"token punctuation"},"."),p("prototype"),c("span",{class:"token punctuation"},";"),p(),c("span",{class:"token comment"},"// true 说明parent的原型是Object.prototype"),p("\nObject"),c("span",{class:"token punctuation"},"."),c("span",{class:"token function"},"getPrototypeOf"),c("span",{class:"token punctuation"},"("),p("o"),c("span",{class:"token punctuation"},")"),c("span",{class:"token punctuation"},";"),p(),c("span",{class:"token comment"},'// {hi: "Hello"} // 说明o的原型是{hi: "Hello"}'),p("\no"),c("span",{class:"token punctuation"},"."),c("span",{class:"token function"},"hasOwnProperty"),c("span",{class:"token punctuation"},"("),c("span",{class:"token string"},"'hi'"),c("span",{class:"token punctuation"},")"),c("span",{class:"token punctuation"},";"),p(),c("span",{class:"token comment"},"// false 说明hi是原型上的"),p("\no"),c("span",{class:"token punctuation"},"."),c("span",{class:"token function"},"hasOwnProperty"),c("span",{class:"token punctuation"},"("),c("span",{class:"token string"},"'prop'"),c("span",{class:"token punctuation"},")"),c("span",{class:"token punctuation"},";"),p(),c("span",{class:"token comment"},"// true 说明prop是原型上的自身上的属性。"),p("\n")])]),c("div",{class:"line-numbers-wrapper"},[c("span",{class:"line-number"},"1"),c("br"),c("span",{class:"line-number"},"2"),c("br"),c("span",{class:"line-number"},"3"),c("br"),c("span",{class:"line-number"},"4"),c("br"),c("span",{class:"line-number"},"5"),c("br"),c("span",{class:"line-number"},"6"),c("br"),c("span",{class:"line-number"},"7"),c("br"),c("span",{class:"line-number"},"8"),c("br"),c("span",{class:"line-number"},"9"),c("br"),c("span",{class:"line-number"},"10"),c("br"),c("span",{class:"line-number"},"11"),c("br")])],-1),ln=c("p",null,"现在，我们甚至可以用它来创建一个完全空白的对象，这样的事情在ES3中可是做不到的。",-1),un=c("div",{class:"language-js line-numbers-mode"},[c("pre",null,[c("code",null,[c("span",{class:"token keyword"},"var"),p(" o "),c("span",{class:"token operator"},"="),p(" Object"),c("span",{class:"token punctuation"},"."),c("span",{class:"token function"},"create"),c("span",{class:"token punctuation"},"("),c("span",{class:"token keyword"},"null"),c("span",{class:"token punctuation"},")"),c("span",{class:"token punctuation"},";"),p("\n"),c("span",{class:"token keyword"},"typeof"),p(" o"),c("span",{class:"token punctuation"},"."),c("span",{class:"token function"},"toString"),c("span",{class:"token punctuation"},"("),c("span",{class:"token punctuation"},")"),c("span",{class:"token punctuation"},";"),p(),c("span",{class:"token comment"},"// 'undefined'"),p("\n")])]),c("div",{class:"line-numbers-wrapper"},[c("span",{class:"line-number"},"1"),c("br"),c("span",{class:"line-number"},"2"),c("br")])],-1),rn=c("h3",{id:"object-getownpropertydesciptor-obj-property-es5",tabindex:"-1"},[p("Object.getOwnPropertyDesciptor(obj, property) (ES5) "),c("a",{class:"header-anchor",href:"#object-getownpropertydesciptor-obj-property-es5","aria-hidden":"true"},"#")],-1),bn=c("p",null,"该方法可以让我们详细查看一个属性的定义。甚至可以通过它一窥那些内置的，之前不可见的隐藏属性。",-1),kn=c("div",{class:"language-js line-numbers-mode"},[c("pre",null,[c("code",null,[p("Object"),c("span",{class:"token punctuation"},"."),c("span",{class:"token function"},"getOwnPropertyDescriptor"),c("span",{class:"token punctuation"},"("),c("span",{class:"token class-name"},"Object"),c("span",{class:"token punctuation"},"."),p("prototype"),c("span",{class:"token punctuation"},","),p(),c("span",{class:"token string"},"'toString'"),c("span",{class:"token punctuation"},")"),c("span",{class:"token punctuation"},";"),p("\n"),c("span",{class:"token comment"},"// {writable: true, enumerable: false, configurable: true, value: ƒ toString()}"),p("\n")])]),c("div",{class:"line-numbers-wrapper"},[c("span",{class:"line-number"},"1"),c("br"),c("span",{class:"line-number"},"2"),c("br")])],-1),mn=c("h3",{id:"object-getownpropertynames-obj-es5",tabindex:"-1"},[p("Object.getOwnPropertyNames(obj) (ES5) "),c("a",{class:"header-anchor",href:"#object-getownpropertynames-obj-es5","aria-hidden":"true"},"#")],-1),dn=c("p",null,"该方法返回一个数组，其中包含了当前对象所有属性的名称（字符串），不论它们是否可枚举。当然，也可以用Object.keys()来单独返回可枚举的属性。",-1),jn=c("div",{class:"language-js line-numbers-mode"},[c("pre",null,[c("code",null,[p("Object"),c("span",{class:"token punctuation"},"."),c("span",{class:"token function"},"getOwnPropertyNames"),c("span",{class:"token punctuation"},"("),c("span",{class:"token class-name"},"Object"),c("span",{class:"token punctuation"},"."),p("prototype"),c("span",{class:"token punctuation"},")"),c("span",{class:"token punctuation"},";"),p("\n"),c("span",{class:"token comment"},'// ["__defineGetter__", "__defineSetter__", "hasOwnProperty", "__lookupGetter__", "__lookupSetter__", "propertyIsEnumerable", "toString", "valueOf", "__proto__", "constructor", "toLocaleString", "isPrototypeOf"]'),p("\nObject"),c("span",{class:"token punctuation"},"."),c("span",{class:"token function"},"keys"),c("span",{class:"token punctuation"},"("),c("span",{class:"token class-name"},"Object"),c("span",{class:"token punctuation"},"."),p("prototype"),c("span",{class:"token punctuation"},")"),c("span",{class:"token punctuation"},";"),p("\n"),c("span",{class:"token comment"},"// []"),p("\nObject"),c("span",{class:"token punctuation"},"."),c("span",{class:"token function"},"getOwnPropertyNames"),c("span",{class:"token punctuation"},"("),p("Object"),c("span",{class:"token punctuation"},")"),c("span",{class:"token punctuation"},";"),p("\n"),c("span",{class:"token comment"},'// ["length", "name", "arguments", "caller", "prototype", "assign", "getOwnPropertyDescriptor", "getOwnPropertyDescriptors", "getOwnPropertyNames", "getOwnPropertySymbols", "is", "preventExtensions", "seal", "create", "defineProperties", "defineProperty", "freeze", "getPrototypeOf", "setPrototypeOf", "isExtensible", "isFrozen", "isSealed", "keys", "entries", "values"]'),p("\nObject"),c("span",{class:"token punctuation"},"."),c("span",{class:"token function"},"keys"),c("span",{class:"token punctuation"},"("),p("Object"),c("span",{class:"token punctuation"},")"),c("span",{class:"token punctuation"},";"),p("\n"),c("span",{class:"token comment"},"// []"),p("\n")])]),c("div",{class:"line-numbers-wrapper"},[c("span",{class:"line-number"},"1"),c("br"),c("span",{class:"line-number"},"2"),c("br"),c("span",{class:"line-number"},"3"),c("br"),c("span",{class:"line-number"},"4"),c("br"),c("span",{class:"line-number"},"5"),c("br"),c("span",{class:"line-number"},"6"),c("br"),c("span",{class:"line-number"},"7"),c("br"),c("span",{class:"line-number"},"8"),c("br")])],-1),fn=c("h3",{id:"object-preventextensions-obj-es5-object-isextensible-obj-es5",tabindex:"-1"},[p("Object.preventExtensions(obj) (ES5) & Object.isExtensible(obj) (ES5) "),c("a",{class:"header-anchor",href:"#object-preventextensions-obj-es5-object-isextensible-obj-es5","aria-hidden":"true"},"#")],-1),yn=c("p",null,"preventExtensions()方法用于禁止向某一对象添加更多属性，而isExtensible()方法则用于检查某对象是否还可以被添加属性。",-1),gn=c("div",{class:"language-js line-numbers-mode"},[c("pre",null,[c("code",null,[c("span",{class:"token keyword"},"var"),p(" deadline "),c("span",{class:"token operator"},"="),p(),c("span",{class:"token punctuation"},"{"),c("span",{class:"token punctuation"},"}"),c("span",{class:"token punctuation"},";"),p("\nObject"),c("span",{class:"token punctuation"},"."),c("span",{class:"token function"},"isExtensible"),c("span",{class:"token punctuation"},"("),p("deadline"),c("span",{class:"token punctuation"},")"),c("span",{class:"token punctuation"},";"),p(),c("span",{class:"token comment"},"// true"),p("\ndeadline"),c("span",{class:"token punctuation"},"."),p("date "),c("span",{class:"token operator"},"="),p(),c("span",{class:"token string"},"'yesterday'"),c("span",{class:"token punctuation"},";"),p(),c("span",{class:"token comment"},"// 'yesterday'"),p("\nObject"),c("span",{class:"token punctuation"},"."),c("span",{class:"token function"},"preventExtensions"),c("span",{class:"token punctuation"},"("),p("deadline"),c("span",{class:"token punctuation"},")"),c("span",{class:"token punctuation"},";"),p("\nObject"),c("span",{class:"token punctuation"},"."),c("span",{class:"token function"},"isExtensible"),c("span",{class:"token punctuation"},"("),p("deadline"),c("span",{class:"token punctuation"},")"),c("span",{class:"token punctuation"},";"),p(),c("span",{class:"token comment"},"// false"),p("\ndeadline"),c("span",{class:"token punctuation"},"."),p("date "),c("span",{class:"token operator"},"="),p(),c("span",{class:"token string"},"'today'"),c("span",{class:"token punctuation"},";"),p("\ndeadline"),c("span",{class:"token punctuation"},"."),p("date"),c("span",{class:"token punctuation"},";"),p(),c("span",{class:"token comment"},"// 'today'"),p("\n"),c("span",{class:"token comment"},"// 尽管向某个不可扩展的对象中添加属性不算是一个错误操作，但它没有任何作用。"),p("\ndeadline"),c("span",{class:"token punctuation"},"."),p("report "),c("span",{class:"token operator"},"="),p(),c("span",{class:"token boolean"},"true"),c("span",{class:"token punctuation"},";"),p("\ndeadline"),c("span",{class:"token punctuation"},"."),p("report"),c("span",{class:"token punctuation"},";"),p(),c("span",{class:"token comment"},"// undefined"),p("\n")])]),c("div",{class:"line-numbers-wrapper"},[c("span",{class:"line-number"},"1"),c("br"),c("span",{class:"line-number"},"2"),c("br"),c("span",{class:"line-number"},"3"),c("br"),c("span",{class:"line-number"},"4"),c("br"),c("span",{class:"line-number"},"5"),c("br"),c("span",{class:"line-number"},"6"),c("br"),c("span",{class:"line-number"},"7"),c("br"),c("span",{class:"line-number"},"8"),c("br"),c("span",{class:"line-number"},"9"),c("br"),c("span",{class:"line-number"},"10"),c("br")])],-1),On=c("h3",{id:"object-seal-obj-es5-object-isseal-obj-es5",tabindex:"-1"},[p("Object.seal(obj) (ES5) & Object.isSeal(obj) (ES5) "),c("a",{class:"header-anchor",href:"#object-seal-obj-es5-object-isseal-obj-es5","aria-hidden":"true"},"#")],-1),hn=c("p",null,"seal()方法可以让一个对象密封，并返回被密封后的对象。 seal()方法的作用与preventExtensions()基本相同，但除此之外，它还会将现有属性 设置成不可配置。也就是说，在这种情况下，我们只能变更现有属性的值，但不能删除或（用defineProperty()）重新配置这些属性，例如不能将一个可枚举的属性改成不可枚举。",-1),vn=c("div",{class:"language-js line-numbers-mode"},[c("pre",null,[c("code",null,[c("span",{class:"token keyword"},"var"),p(" person "),c("span",{class:"token operator"},"="),p(),c("span",{class:"token punctuation"},"{"),p("legs"),c("span",{class:"token operator"},":"),c("span",{class:"token number"},"2"),c("span",{class:"token punctuation"},"}"),c("span",{class:"token punctuation"},";"),p("\nperson "),c("span",{class:"token operator"},"==="),p(" Object"),c("span",{class:"token punctuation"},"."),c("span",{class:"token function"},"seal"),c("span",{class:"token punctuation"},"("),p("person"),c("span",{class:"token punctuation"},")"),c("span",{class:"token punctuation"},";"),p(),c("span",{class:"token comment"},"// true"),p("\nObject"),c("span",{class:"token punctuation"},"."),c("span",{class:"token function"},"isSealed"),c("span",{class:"token punctuation"},"("),p("person"),c("span",{class:"token punctuation"},")"),c("span",{class:"token punctuation"},";"),p(),c("span",{class:"token comment"},"// true"),p("\nObject"),c("span",{class:"token punctuation"},"."),c("span",{class:"token function"},"getOwnPropertyDescriptor"),c("span",{class:"token punctuation"},"("),p("person"),c("span",{class:"token punctuation"},","),p(),c("span",{class:"token string"},"'legs'"),c("span",{class:"token punctuation"},")"),c("span",{class:"token punctuation"},";"),p("\n"),c("span",{class:"token comment"},"// {value: 2, writable: true, enumerable: true, configurable: false}"),p("\n"),c("span",{class:"token keyword"},"delete"),p(" person"),c("span",{class:"token punctuation"},"."),p("legs"),c("span",{class:"token punctuation"},";"),p(),c("span",{class:"token comment"},"// false (不可删除，不可配置)"),p("\nObject"),c("span",{class:"token punctuation"},"."),c("span",{class:"token function"},"defineProperty"),c("span",{class:"token punctuation"},"("),p("person"),c("span",{class:"token punctuation"},","),p(),c("span",{class:"token string"},"'legs'"),c("span",{class:"token punctuation"},","),c("span",{class:"token punctuation"},"{"),p("value"),c("span",{class:"token operator"},":"),c("span",{class:"token number"},"2"),c("span",{class:"token punctuation"},"}"),c("span",{class:"token punctuation"},")"),c("span",{class:"token punctuation"},";"),p("\nperson"),c("span",{class:"token punctuation"},"."),p("legs"),c("span",{class:"token punctuation"},";"),p(),c("span",{class:"token comment"},"// 2"),p("\nperson"),c("span",{class:"token punctuation"},"."),p("legs "),c("span",{class:"token operator"},"="),p(),c("span",{class:"token number"},"1"),c("span",{class:"token punctuation"},";"),p("\nperson"),c("span",{class:"token punctuation"},"."),p("legs"),c("span",{class:"token punctuation"},";"),p(),c("span",{class:"token comment"},"// 1 (可写)"),p("\nObject"),c("span",{class:"token punctuation"},"."),c("span",{class:"token function"},"defineProperty"),c("span",{class:"token punctuation"},"("),p("person"),c("span",{class:"token punctuation"},","),p(),c("span",{class:"token string"},'"legs"'),c("span",{class:"token punctuation"},","),p(),c("span",{class:"token punctuation"},"{"),p(),c("span",{class:"token function-variable function"},"get"),c("span",{class:"token operator"},":"),p(),c("span",{class:"token keyword"},"function"),c("span",{class:"token punctuation"},"("),c("span",{class:"token punctuation"},")"),p(),c("span",{class:"token punctuation"},"{"),p(),c("span",{class:"token keyword"},"return"),p(),c("span",{class:"token string"},'"legs"'),c("span",{class:"token punctuation"},";"),p(),c("span",{class:"token punctuation"},"}"),p(),c("span",{class:"token punctuation"},"}"),c("span",{class:"token punctuation"},")"),c("span",{class:"token punctuation"},";"),p("\n"),c("span",{class:"token comment"},"// 抛出TypeError异常"),p("\nObject"),c("span",{class:"token punctuation"},"."),c("span",{class:"token function"},"defineProperty"),c("span",{class:"token punctuation"},"("),p("person"),c("span",{class:"token punctuation"},","),p(),c("span",{class:"token string"},'"age"'),c("span",{class:"token punctuation"},","),p(),c("span",{class:"token punctuation"},"{"),p(),c("span",{class:"token function-variable function"},"get"),c("span",{class:"token operator"},":"),p(),c("span",{class:"token keyword"},"function"),c("span",{class:"token punctuation"},"("),c("span",{class:"token punctuation"},")"),p(),c("span",{class:"token punctuation"},"{"),p(),c("span",{class:"token keyword"},"return"),p(),c("span",{class:"token number"},"12"),c("span",{class:"token punctuation"},";"),p(),c("span",{class:"token punctuation"},"}"),p(),c("span",{class:"token punctuation"},"}"),c("span",{class:"token punctuation"},")"),c("span",{class:"token punctuation"},";"),p("\n"),c("span",{class:"token comment"},"// TypeError: Cannot define property age, object is not extensible"),p("\n")])]),c("div",{class:"line-numbers-wrapper"},[c("span",{class:"line-number"},"1"),c("br"),c("span",{class:"line-number"},"2"),c("br"),c("span",{class:"line-number"},"3"),c("br"),c("span",{class:"line-number"},"4"),c("br"),c("span",{class:"line-number"},"5"),c("br"),c("span",{class:"line-number"},"6"),c("br"),c("span",{class:"line-number"},"7"),c("br"),c("span",{class:"line-number"},"8"),c("br"),c("span",{class:"line-number"},"9"),c("br"),c("span",{class:"line-number"},"10"),c("br"),c("span",{class:"line-number"},"11"),c("br"),c("span",{class:"line-number"},"12"),c("br"),c("span",{class:"line-number"},"13"),c("br"),c("span",{class:"line-number"},"14"),c("br")])],-1),wn=c("h3",{id:"object-freeze-obj-es5-object-isfrozen-obj-es5",tabindex:"-1"},[p("Object.freeze(obj) (ES5) & Object.isFrozen(obj) (ES5) "),c("a",{class:"header-anchor",href:"#object-freeze-obj-es5-object-isfrozen-obj-es5","aria-hidden":"true"},"#")],-1),Sn=c("p",null,"freeze()方法用于执行一切不受seal()方法限制的属性值变更。Object.freeze() 方法可以冻结一个对象，冻结指的是不能向这个对象添加新的属性，不能修改其已有属性的值，不能删除已有属性，以及不能修改该对象已有属性的可枚举性、可配置性、可写性。也就是说，这个对象永远是不可变的。该方法返回被冻结的对象。",-1),_n=c("div",{class:"language-js line-numbers-mode"},[c("pre",null,[c("code",null,[c("span",{class:"token keyword"},"var"),p(" deadline "),c("span",{class:"token operator"},"="),p(" Object"),c("span",{class:"token punctuation"},"."),c("span",{class:"token function"},"freeze"),c("span",{class:"token punctuation"},"("),c("span",{class:"token punctuation"},"{"),p("date"),c("span",{class:"token operator"},":"),p(),c("span",{class:"token string"},"'yesterday'"),c("span",{class:"token punctuation"},"}"),c("span",{class:"token punctuation"},")"),c("span",{class:"token punctuation"},";"),p("\ndeadline"),c("span",{class:"token punctuation"},"."),p("date "),c("span",{class:"token operator"},"="),p(),c("span",{class:"token string"},"'tomorrow'"),c("span",{class:"token punctuation"},";"),p("\ndeadline"),c("span",{class:"token punctuation"},"."),p("excuse "),c("span",{class:"token operator"},"="),p(),c("span",{class:"token string"},"'lame'"),c("span",{class:"token punctuation"},";"),p("\ndeadline"),c("span",{class:"token punctuation"},"."),p("date"),c("span",{class:"token punctuation"},";"),p(),c("span",{class:"token comment"},"// 'yesterday'"),p("\ndeadline"),c("span",{class:"token punctuation"},"."),p("excuse"),c("span",{class:"token punctuation"},";"),p(),c("span",{class:"token comment"},"// undefined"),p("\nObject"),c("span",{class:"token punctuation"},"."),c("span",{class:"token function"},"isSealed"),c("span",{class:"token punctuation"},"("),p("deadline"),c("span",{class:"token punctuation"},")"),c("span",{class:"token punctuation"},";"),p(),c("span",{class:"token comment"},"// true;"),p("\nObject"),c("span",{class:"token punctuation"},"."),c("span",{class:"token function"},"isFrozen"),c("span",{class:"token punctuation"},"("),p("deadline"),c("span",{class:"token punctuation"},")"),c("span",{class:"token punctuation"},";"),p(),c("span",{class:"token comment"},"// true"),p("\nObject"),c("span",{class:"token punctuation"},"."),c("span",{class:"token function"},"getOwnPropertyDescriptor"),c("span",{class:"token punctuation"},"("),p("deadline"),c("span",{class:"token punctuation"},","),p(),c("span",{class:"token string"},"'date'"),c("span",{class:"token punctuation"},")"),c("span",{class:"token punctuation"},";"),p("\n"),c("span",{class:"token comment"},'// {value: "yesterday", writable: false, enumerable: true, configurable: false} (不可配置，不可写)'),p("\nObject"),c("span",{class:"token punctuation"},"."),c("span",{class:"token function"},"keys"),c("span",{class:"token punctuation"},"("),p("deadline"),c("span",{class:"token punctuation"},")"),c("span",{class:"token punctuation"},";"),p(),c("span",{class:"token comment"},"// ['date'] (可枚举)"),p("\n")])]),c("div",{class:"line-numbers-wrapper"},[c("span",{class:"line-number"},"1"),c("br"),c("span",{class:"line-number"},"2"),c("br"),c("span",{class:"line-number"},"3"),c("br"),c("span",{class:"line-number"},"4"),c("br"),c("span",{class:"line-number"},"5"),c("br"),c("span",{class:"line-number"},"6"),c("br"),c("span",{class:"line-number"},"7"),c("br"),c("span",{class:"line-number"},"8"),c("br"),c("span",{class:"line-number"},"9"),c("br"),c("span",{class:"line-number"},"10"),c("br")])],-1),En=c("h3",{id:"object-keys-obj-es5",tabindex:"-1"},[p("Object.keys(obj) (ES5) "),c("a",{class:"header-anchor",href:"#object-keys-obj-es5","aria-hidden":"true"},"#")],-1),Pn=c("p",null,"该方法是一种特殊的for-in循环。它只返回当前对象的属性（不像for-in），而且这些属性也必须是可枚举的（这点和Object.getOwnPropertyNames()不同，不论是否可以枚举）。返回值是一个字符串数组。",-1),xn=c("div",{class:"language-js line-numbers-mode"},[c("pre",null,[c("code",null,[c("span",{class:"token class-name"},"Object"),c("span",{class:"token punctuation"},"."),p("prototype"),c("span",{class:"token punctuation"},"."),p("customProto "),c("span",{class:"token operator"},"="),p(),c("span",{class:"token number"},"101"),c("span",{class:"token punctuation"},";"),p("\nObject"),c("span",{class:"token punctuation"},"."),c("span",{class:"token function"},"getOwnPropertyNames"),c("span",{class:"token punctuation"},"("),c("span",{class:"token class-name"},"Object"),c("span",{class:"token punctuation"},"."),p("prototype"),c("span",{class:"token punctuation"},")"),c("span",{class:"token punctuation"},";"),p("\n"),c("span",{class:"token comment"},'// [..., "constructor", "toLocaleString", "isPrototypeOf", "customProto"]'),p("\nObject"),c("span",{class:"token punctuation"},"."),c("span",{class:"token function"},"keys"),c("span",{class:"token punctuation"},"("),c("span",{class:"token class-name"},"Object"),c("span",{class:"token punctuation"},"."),p("prototype"),c("span",{class:"token punctuation"},")"),c("span",{class:"token punctuation"},";"),p(),c("span",{class:"token comment"},"// ['customProto']"),p("\n\n\n"),c("span",{class:"token keyword"},"var"),p(" o "),c("span",{class:"token operator"},"="),p(),c("span",{class:"token punctuation"},"{"),p("own"),c("span",{class:"token operator"},":"),p(),c("span",{class:"token number"},"202"),c("span",{class:"token punctuation"},"}"),c("span",{class:"token punctuation"},";"),p("\no"),c("span",{class:"token punctuation"},"."),p("customProto"),c("span",{class:"token punctuation"},";"),p(),c("span",{class:"token comment"},"// 101"),p("\nObject"),c("span",{class:"token punctuation"},"."),c("span",{class:"token function"},"keys"),c("span",{class:"token punctuation"},"("),p("o"),c("span",{class:"token punctuation"},")"),c("span",{class:"token punctuation"},";"),p(),c("span",{class:"token comment"},"// ['own']"),p("\n")])]),c("div",{class:"line-numbers-wrapper"},[c("span",{class:"line-number"},"1"),c("br"),c("span",{class:"line-number"},"2"),c("br"),c("span",{class:"line-number"},"3"),c("br"),c("span",{class:"line-number"},"4"),c("br"),c("span",{class:"line-number"},"5"),c("br"),c("span",{class:"line-number"},"6"),c("br"),c("span",{class:"line-number"},"7"),c("br"),c("span",{class:"line-number"},"8"),c("br"),c("span",{class:"line-number"},"9"),c("br")])],-1),An=o('<h2 id="在es6中附加的object属性" tabindex="-1">在ES6中附加的Object属性 <a class="header-anchor" href="#在es6中附加的object属性" aria-hidden="true">#</a></h2><h3 id="object-is-value1-value2-es6" tabindex="-1"><a href="http://Object.is" target="_blank" rel="noopener noreferrer">Object.is</a>(value1, value2) (ES6) <a class="header-anchor" href="#object-is-value1-value2-es6" aria-hidden="true">#</a></h3><p>该方法用来比较两个值是否严格相等。它与严格比较运算符（===）的行为基本一致。 不同之处只有两个：一是+0不等于-0，而是NaN等于自身</p>',3),Nn=c("div",{class:"language-js line-numbers-mode"},[c("pre",null,[c("code",null,[p("bject"),c("span",{class:"token punctuation"},"."),c("span",{class:"token function"},"is"),c("span",{class:"token punctuation"},"("),c("span",{class:"token string"},"'xuanyuan'"),c("span",{class:"token punctuation"},","),p(),c("span",{class:"token string"},"'xuanyuan'"),c("span",{class:"token punctuation"},")"),c("span",{class:"token punctuation"},";"),p(),c("span",{class:"token comment"},"// true"),p("\nObject"),c("span",{class:"token punctuation"},"."),c("span",{class:"token function"},"is"),c("span",{class:"token punctuation"},"("),c("span",{class:"token punctuation"},"{"),c("span",{class:"token punctuation"},"}"),c("span",{class:"token punctuation"},","),c("span",{class:"token punctuation"},"{"),c("span",{class:"token punctuation"},"}"),c("span",{class:"token punctuation"},")"),c("span",{class:"token punctuation"},";"),p(),c("span",{class:"token comment"},"// false"),p("\nObject"),c("span",{class:"token punctuation"},"."),c("span",{class:"token function"},"is"),c("span",{class:"token punctuation"},"("),c("span",{class:"token operator"},"+"),c("span",{class:"token number"},"0"),c("span",{class:"token punctuation"},","),p(),c("span",{class:"token operator"},"-"),c("span",{class:"token number"},"0"),c("span",{class:"token punctuation"},")"),c("span",{class:"token punctuation"},";"),p(),c("span",{class:"token comment"},"// false"),p("\n"),c("span",{class:"token operator"},"+"),c("span",{class:"token number"},"0"),p(),c("span",{class:"token operator"},"==="),p(),c("span",{class:"token operator"},"-"),c("span",{class:"token number"},"0"),c("span",{class:"token punctuation"},";"),p(),c("span",{class:"token comment"},"// true"),p("\nObject"),c("span",{class:"token punctuation"},"."),c("span",{class:"token function"},"is"),c("span",{class:"token punctuation"},"("),c("span",{class:"token number"},"NaN"),c("span",{class:"token punctuation"},","),p(),c("span",{class:"token number"},"NaN"),c("span",{class:"token punctuation"},")"),c("span",{class:"token punctuation"},";"),p(),c("span",{class:"token comment"},"// true"),p("\n"),c("span",{class:"token number"},"NaN"),p(),c("span",{class:"token operator"},"==="),p(),c("span",{class:"token number"},"NaN"),c("span",{class:"token punctuation"},";"),p(),c("span",{class:"token comment"},"// false"),p("\n")])]),c("div",{class:"line-numbers-wrapper"},[c("span",{class:"line-number"},"1"),c("br"),c("span",{class:"line-number"},"2"),c("br"),c("span",{class:"line-number"},"3"),c("br"),c("span",{class:"line-number"},"4"),c("br"),c("span",{class:"line-number"},"5"),c("br"),c("span",{class:"line-number"},"6"),c("br")])],-1),In=c("p",null,[c("a",{href:"http://xn--ES5Object-2b6ni8ewaa271ptu1k44yaw91dxhb87g.is",target:"_blank",rel:"noopener noreferrer"},"ES5可以通过以下代码部署Object.is")],-1),Dn=c("div",{class:"language-js line-numbers-mode"},[c("pre",null,[c("code",null,[p("Object"),c("span",{class:"token punctuation"},"."),c("span",{class:"token function"},"defineProperty"),c("span",{class:"token punctuation"},"("),p("Object"),c("span",{class:"token punctuation"},","),p(),c("span",{class:"token string"},"'is'"),c("span",{class:"token punctuation"},","),p(),c("span",{class:"token punctuation"},"{"),p("\n  "),c("span",{class:"token function-variable function"},"value"),c("span",{class:"token operator"},":"),p(),c("span",{class:"token keyword"},"function"),c("span",{class:"token punctuation"},"("),c("span",{class:"token punctuation"},")"),p(),c("span",{class:"token punctuation"},"{"),p("x"),c("span",{class:"token punctuation"},","),p(" y"),c("span",{class:"token punctuation"},"}"),p(),c("span",{class:"token punctuation"},"{"),p("\n    "),c("span",{class:"token keyword"},"if"),p(),c("span",{class:"token punctuation"},"("),p("x "),c("span",{class:"token operator"},"==="),p(" y"),c("span",{class:"token punctuation"},")"),p(),c("span",{class:"token punctuation"},"{"),p("\n      "),c("span",{class:"token comment"},"// 针对+0不等于-0的情况"),p("\n      "),c("span",{class:"token keyword"},"return"),p(" x "),c("span",{class:"token operator"},"!=="),p(),c("span",{class:"token number"},"0"),p(),c("span",{class:"token operator"},"||"),p(),c("span",{class:"token number"},"1"),p(),c("span",{class:"token operator"},"/"),p(" x "),c("span",{class:"token operator"},"==="),p(),c("span",{class:"token number"},"1"),p(),c("span",{class:"token operator"},"/"),p(" y"),c("span",{class:"token punctuation"},";"),p("\n    "),c("span",{class:"token punctuation"},"}"),p("\n    "),c("span",{class:"token comment"},"// 针对 NaN的情况"),p("\n    "),c("span",{class:"token keyword"},"return"),p(" x "),c("span",{class:"token operator"},"!=="),p(" x "),c("span",{class:"token operator"},"&&"),p(" y "),c("span",{class:"token operator"},"!=="),p(" y"),c("span",{class:"token punctuation"},";"),p("\n  "),c("span",{class:"token punctuation"},"}"),c("span",{class:"token punctuation"},","),p("\n  configurable"),c("span",{class:"token operator"},":"),p(),c("span",{class:"token boolean"},"true"),c("span",{class:"token punctuation"},","),p("\n  enumerable"),c("span",{class:"token operator"},":"),p(),c("span",{class:"token boolean"},"false"),c("span",{class:"token punctuation"},","),p("\n  writable"),c("span",{class:"token operator"},":"),p(),c("span",{class:"token boolean"},"true"),p("\n"),c("span",{class:"token punctuation"},"}"),c("span",{class:"token punctuation"},")"),c("span",{class:"token punctuation"},";"),p("\n")])]),c("div",{class:"line-numbers-wrapper"},[c("span",{class:"line-number"},"1"),c("br"),c("span",{class:"line-number"},"2"),c("br"),c("span",{class:"line-number"},"3"),c("br"),c("span",{class:"line-number"},"4"),c("br"),c("span",{class:"line-number"},"5"),c("br"),c("span",{class:"line-number"},"6"),c("br"),c("span",{class:"line-number"},"7"),c("br"),c("span",{class:"line-number"},"8"),c("br"),c("span",{class:"line-number"},"9"),c("br"),c("span",{class:"line-number"},"10"),c("br"),c("span",{class:"line-number"},"11"),c("br"),c("span",{class:"line-number"},"12"),c("br"),c("span",{class:"line-number"},"13"),c("br")])],-1),Tn=c("h3",{id:"object-assign-target-sources-es6",tabindex:"-1"},[p("Object.assign(target, ...sources) (ES6) "),c("a",{class:"header-anchor",href:"#object-assign-target-sources-es6","aria-hidden":"true"},"#")],-1),zn=c("p",null,"该方法用来源对象（source）的所有可枚举的属性复制到目标对象（target）。它至少需要两个对象作为参数，第一个参数是目标对象target，后面的参数都是源对象（source）。只有一个参数不是对象，就会抛出TypeError错误。",-1),Vn=c("div",{class:"language-js line-numbers-mode"},[c("pre",null,[c("code",null,[c("span",{class:"token keyword"},"var"),p(" target "),c("span",{class:"token operator"},"="),p(),c("span",{class:"token punctuation"},"{"),p("a"),c("span",{class:"token operator"},":"),p(),c("span",{class:"token number"},"1"),c("span",{class:"token punctuation"},"}"),c("span",{class:"token punctuation"},";"),p("\n"),c("span",{class:"token keyword"},"var"),p(" source1 "),c("span",{class:"token operator"},"="),p(),c("span",{class:"token punctuation"},"{"),p("b"),c("span",{class:"token operator"},":"),p(),c("span",{class:"token number"},"2"),c("span",{class:"token punctuation"},"}"),c("span",{class:"token punctuation"},";"),p("\n"),c("span",{class:"token keyword"},"var"),p(" source2 "),c("span",{class:"token operator"},"="),p(),c("span",{class:"token punctuation"},"{"),p("c"),c("span",{class:"token operator"},":"),p(),c("span",{class:"token number"},"3"),c("span",{class:"token punctuation"},"}"),c("span",{class:"token punctuation"},";"),p("\nobj "),c("span",{class:"token operator"},"="),p(" Object"),c("span",{class:"token punctuation"},"."),c("span",{class:"token function"},"assign"),c("span",{class:"token punctuation"},"("),p("target"),c("span",{class:"token punctuation"},","),p(" source1"),c("span",{class:"token punctuation"},","),p(" source2"),c("span",{class:"token punctuation"},")"),c("span",{class:"token punctuation"},";"),p("\ntarget"),c("span",{class:"token punctuation"},";"),p(),c("span",{class:"token comment"},"// {a:1,b:2,c:3}"),p("\nobj"),c("span",{class:"token punctuation"},";"),p(),c("span",{class:"token comment"},"// {a:1,b:2,c:3}"),p("\ntarget "),c("span",{class:"token operator"},"==="),p(" obj"),c("span",{class:"token punctuation"},";"),p(),c("span",{class:"token comment"},"// true"),p("\n"),c("span",{class:"token comment"},"// 浅拷贝"),p("\nobj"),c("span",{class:"token punctuation"},"."),p("a "),c("span",{class:"token operator"},"="),p(),c("span",{class:"token number"},"100"),c("span",{class:"token punctuation"},";"),p("\ntarget"),c("span",{class:"token punctuation"},";"),p(),c("span",{class:"token comment"},"// {a:100,b:2,c:3} "),p("\n\n"),c("span",{class:"token comment"},"// 如果目标对象与源对象有同名属性，或多个源对象有同名属性，则后面的属性会覆盖前面的属性。"),p("\n"),c("span",{class:"token keyword"},"var"),p(" source3 "),c("span",{class:"token operator"},"="),p(),c("span",{class:"token punctuation"},"{"),p("a"),c("span",{class:"token operator"},":"),c("span",{class:"token number"},"2"),c("span",{class:"token punctuation"},","),p("b"),c("span",{class:"token operator"},":"),c("span",{class:"token number"},"3"),c("span",{class:"token punctuation"},","),p("c"),c("span",{class:"token operator"},":"),c("span",{class:"token number"},"4"),c("span",{class:"token punctuation"},"}"),c("span",{class:"token punctuation"},";"),p("\nObject"),c("span",{class:"token punctuation"},"."),c("span",{class:"token function"},"assign"),c("span",{class:"token punctuation"},"("),p("target"),c("span",{class:"token punctuation"},","),p(" source3"),c("span",{class:"token punctuation"},")"),c("span",{class:"token punctuation"},";"),p("\ntarget"),c("span",{class:"token punctuation"},";"),p(),c("span",{class:"token comment"},"// {a:2,b:3,c:4}"),p("\n\n"),c("span",{class:"token comment"},"// 方法也是可以复制的"),p("\n"),c("span",{class:"token keyword"},"var"),p(" source4 "),c("span",{class:"token operator"},"="),p(),c("span",{class:"token punctuation"},"{"),p("a"),c("span",{class:"token operator"},":"),c("span",{class:"token number"},"2"),c("span",{class:"token punctuation"},","),c("span",{class:"token function-variable function"},"b"),c("span",{class:"token operator"},":"),c("span",{class:"token keyword"},"function"),c("span",{class:"token punctuation"},"("),c("span",{class:"token punctuation"},")"),p(),c("span",{class:"token punctuation"},"{"),c("span",{class:"token punctuation"},"}"),c("span",{class:"token punctuation"},"}"),c("span",{class:"token punctuation"},";"),p("\nObject"),c("span",{class:"token punctuation"},"."),c("span",{class:"token function"},"assign"),c("span",{class:"token punctuation"},"("),p("target"),c("span",{class:"token punctuation"},","),p(" source4"),c("span",{class:"token punctuation"},")"),c("span",{class:"token punctuation"},";"),p("\ntarget"),c("span",{class:"token punctuation"},";"),p(),c("span",{class:"token comment"},"// {a, b: function() {}}"),p("\n")])]),c("div",{class:"line-numbers-wrapper"},[c("span",{class:"line-number"},"1"),c("br"),c("span",{class:"line-number"},"2"),c("br"),c("span",{class:"line-number"},"3"),c("br"),c("span",{class:"line-number"},"4"),c("br"),c("span",{class:"line-number"},"5"),c("br"),c("span",{class:"line-number"},"6"),c("br"),c("span",{class:"line-number"},"7"),c("br"),c("span",{class:"line-number"},"8"),c("br"),c("span",{class:"line-number"},"9"),c("br"),c("span",{class:"line-number"},"10"),c("br"),c("span",{class:"line-number"},"11"),c("br"),c("span",{class:"line-number"},"12"),c("br"),c("span",{class:"line-number"},"13"),c("br"),c("span",{class:"line-number"},"14"),c("br"),c("span",{class:"line-number"},"15"),c("br"),c("span",{class:"line-number"},"16"),c("br"),c("span",{class:"line-number"},"17"),c("br"),c("span",{class:"line-number"},"18"),c("br"),c("span",{class:"line-number"},"19"),c("br"),c("span",{class:"line-number"},"20"),c("br")])],-1),Cn=c("blockquote",null,[c("p",null,"Object.assign只复制自身属性，不可枚举的属性（enumerable为false）和继承的属性不会被复制。")],-1),Ln=c("div",{class:"language-js line-numbers-mode"},[c("pre",null,[c("code",null,[p("Object"),c("span",{class:"token punctuation"},"."),c("span",{class:"token function"},"assign"),c("span",{class:"token punctuation"},"("),c("span",{class:"token punctuation"},"{"),p("b"),c("span",{class:"token operator"},":"),p(),c("span",{class:"token string"},"'c'"),c("span",{class:"token punctuation"},"}"),c("span",{class:"token punctuation"},","),p(" \n  Object"),c("span",{class:"token punctuation"},"."),c("span",{class:"token function"},"defineProperty"),c("span",{class:"token punctuation"},"("),c("span",{class:"token punctuation"},"{"),c("span",{class:"token punctuation"},"}"),c("span",{class:"token punctuation"},","),p(),c("span",{class:"token string"},"'invisible'"),c("span",{class:"token punctuation"},","),p(),c("span",{class:"token punctuation"},"{"),p("\n    enumerable"),c("span",{class:"token operator"},":"),p(),c("span",{class:"token boolean"},"false"),c("span",{class:"token punctuation"},","),p("\n    value"),c("span",{class:"token operator"},":"),p(),c("span",{class:"token string"},"'hello'"),p("\n  "),c("span",{class:"token punctuation"},"}"),c("span",{class:"token punctuation"},")"),c("span",{class:"token punctuation"},";"),p("\n"),c("span",{class:"token punctuation"},")"),c("span",{class:"token punctuation"},";"),p("\n"),c("span",{class:"token comment"},"// {b: 'c'}"),p("\n")])]),c("div",{class:"line-numbers-wrapper"},[c("span",{class:"line-number"},"1"),c("br"),c("span",{class:"line-number"},"2"),c("br"),c("span",{class:"line-number"},"3"),c("br"),c("span",{class:"line-number"},"4"),c("br"),c("span",{class:"line-number"},"5"),c("br"),c("span",{class:"line-number"},"6"),c("br"),c("span",{class:"line-number"},"7"),c("br")])],-1),Fn=c("p",null,"属性名为Symbol值的属性，也会被Object.assign()复制。",-1),Gn=c("div",{class:"language-js line-numbers-mode"},[c("pre",null,[c("code",null,[p("Object"),c("span",{class:"token punctuation"},"."),c("span",{class:"token function"},"assign"),c("span",{class:"token punctuation"},"("),c("span",{class:"token punctuation"},"{"),p("a"),c("span",{class:"token operator"},":"),p(),c("span",{class:"token string"},"'b'"),c("span",{class:"token punctuation"},"}"),c("span",{class:"token punctuation"},","),p(),c("span",{class:"token punctuation"},"{"),c("span",{class:"token punctuation"},"["),c("span",{class:"token function"},"Symbol"),c("span",{class:"token punctuation"},"("),c("span",{class:"token string"},"'c'"),c("span",{class:"token punctuation"},")"),c("span",{class:"token punctuation"},"]"),c("span",{class:"token operator"},":"),p(),c("span",{class:"token string"},"'d'"),c("span",{class:"token punctuation"},"}"),c("span",{class:"token punctuation"},")"),c("span",{class:"token punctuation"},";"),p("\n"),c("span",{class:"token comment"},"// {a: 'b', Symbol(c): 'd'}"),p("\n")])]),c("div",{class:"line-numbers-wrapper"},[c("span",{class:"line-number"},"1"),c("br"),c("span",{class:"line-number"},"2"),c("br")])],-1),Hn=c("p",null,"对于嵌套的对象，Object.assign()的处理方法是替换，而不是添加。",-1),Jn=c("div",{class:"language-js line-numbers-mode"},[c("pre",null,[c("code",null,[p("Object"),c("span",{class:"token punctuation"},"."),c("span",{class:"token function"},"assign"),c("span",{class:"token punctuation"},"("),c("span",{class:"token punctuation"},"{"),p("a"),c("span",{class:"token operator"},":"),p(),c("span",{class:"token punctuation"},"{"),p("b"),c("span",{class:"token operator"},":"),c("span",{class:"token string"},"'c'"),c("span",{class:"token punctuation"},","),p("d"),c("span",{class:"token operator"},":"),c("span",{class:"token string"},"'e'"),c("span",{class:"token punctuation"},"}"),c("span",{class:"token punctuation"},"}"),c("span",{class:"token punctuation"},","),p(),c("span",{class:"token punctuation"},"{"),p("a"),c("span",{class:"token operator"},":"),c("span",{class:"token punctuation"},"{"),p("b"),c("span",{class:"token operator"},":"),c("span",{class:"token string"},"'hello'"),c("span",{class:"token punctuation"},"}"),c("span",{class:"token punctuation"},"}"),c("span",{class:"token punctuation"},")"),c("span",{class:"token punctuation"},";"),p("\n"),c("span",{class:"token comment"},"// {a: {b:'hello'}}"),p("\n")])]),c("div",{class:"line-numbers-wrapper"},[c("span",{class:"line-number"},"1"),c("br"),c("span",{class:"line-number"},"2"),c("br")])],-1),Mn=c("p",null,"对于数组，Object.assign()把数组视为属性名为0、1、2的对象。",-1),Rn=c("div",{class:"language-js line-numbers-mode"},[c("pre",null,[c("code",null,[p("Object"),c("span",{class:"token punctuation"},"."),c("span",{class:"token function"},"assign"),c("span",{class:"token punctuation"},"("),c("span",{class:"token punctuation"},"["),c("span",{class:"token number"},"1"),c("span",{class:"token punctuation"},","),c("span",{class:"token number"},"2"),c("span",{class:"token punctuation"},","),c("span",{class:"token number"},"3"),c("span",{class:"token punctuation"},"]"),c("span",{class:"token punctuation"},","),p(),c("span",{class:"token punctuation"},"["),c("span",{class:"token number"},"4"),c("span",{class:"token punctuation"},","),c("span",{class:"token number"},"5"),c("span",{class:"token punctuation"},"]"),c("span",{class:"token punctuation"},")"),c("span",{class:"token punctuation"},";"),p("\n"),c("span",{class:"token comment"},"// [4,5,3]"),p("\n")])]),c("div",{class:"line-numbers-wrapper"},[c("span",{class:"line-number"},"1"),c("br"),c("span",{class:"line-number"},"2"),c("br")])],-1),qn=c("h3",{id:"object-getownpropertysymbols-obj-es6",tabindex:"-1"},[p("Object.getOwnPropertySymbols(obj) (ES6) "),c("a",{class:"header-anchor",href:"#object-getownpropertysymbols-obj-es6","aria-hidden":"true"},"#")],-1),Un=c("p",null,"该方法会返回一个数组，该数组包含了指定对象自身的（非继承的）所有 symbol 属性键。 该方法和 Object.getOwnPropertyNames() 类似，但后者返回的结果只会包含字符串类型的属性键，也就是传统的属性名。",-1),Bn=c("div",{class:"language-js line-numbers-mode"},[c("pre",null,[c("code",null,[p("Object"),c("span",{class:"token punctuation"},"."),c("span",{class:"token function"},"getOwnPropertySymbols"),c("span",{class:"token punctuation"},"("),c("span",{class:"token punctuation"},"{"),p("a"),c("span",{class:"token operator"},":"),p(),c("span",{class:"token string"},"'b'"),c("span",{class:"token punctuation"},","),p(),c("span",{class:"token punctuation"},"["),c("span",{class:"token function"},"Symbol"),c("span",{class:"token punctuation"},"("),c("span",{class:"token string"},"'c'"),c("span",{class:"token punctuation"},")"),c("span",{class:"token punctuation"},"]"),c("span",{class:"token operator"},":"),p(),c("span",{class:"token string"},"'d'"),c("span",{class:"token punctuation"},"}"),c("span",{class:"token punctuation"},")"),c("span",{class:"token punctuation"},";"),p("\n"),c("span",{class:"token comment"},"// [Symbol(c)]"),p("\n")])]),c("div",{class:"line-numbers-wrapper"},[c("span",{class:"line-number"},"1"),c("br"),c("span",{class:"line-number"},"2"),c("br")])],-1),Kn=c("h3",{id:"object-setprototypeof-obj-prototype-es6",tabindex:"-1"},[p("Object.setPrototypeOf(obj, prototype) (ES6) "),c("a",{class:"header-anchor",href:"#object-setprototypeof-obj-prototype-es6","aria-hidden":"true"},"#")],-1),Qn=c("p",null,"该方法设置一个指定的对象的原型 ( 即, 内部[[Prototype]]属性）到另一个对象或 null。 __proto__属性用来读取或设置当前对象的prototype对象。目前，所有浏览器（包括IE11）都部署了这个属性。",-1),Wn=c("div",{class:"language-js line-numbers-mode"},[c("pre",null,[c("code",null,[c("span",{class:"token comment"},"// ES3写法"),p("\n"),c("span",{class:"token keyword"},"var"),p(" obj "),c("span",{class:"token operator"},"="),p(),c("span",{class:"token punctuation"},"{"),p("\n    "),c("span",{class:"token function-variable function"},"method"),c("span",{class:"token operator"},":"),p(),c("span",{class:"token keyword"},"function"),c("span",{class:"token punctuation"},"("),c("span",{class:"token punctuation"},")"),c("span",{class:"token punctuation"},"{"),p("\n        "),c("span",{class:"token comment"},"// code ..."),p("\n    "),c("span",{class:"token punctuation"},"}"),p("\n"),c("span",{class:"token punctuation"},"}"),c("span",{class:"token punctuation"},";"),p("\n"),c("span",{class:"token comment"},"// obj.__proto__ = someOtherObj;"),p("\n"),c("span",{class:"token comment"},"// ES5写法"),p("\n"),c("span",{class:"token keyword"},"var"),p(" obj "),c("span",{class:"token operator"},"="),p(" Object"),c("span",{class:"token punctuation"},"."),c("span",{class:"token function"},"create"),c("span",{class:"token punctuation"},"("),p("someOtherObj"),c("span",{class:"token punctuation"},")"),c("span",{class:"token punctuation"},";"),p("\nobj"),c("span",{class:"token punctuation"},"."),c("span",{class:"token function-variable function"},"method"),p(),c("span",{class:"token operator"},"="),p(),c("span",{class:"token keyword"},"function"),c("span",{class:"token punctuation"},"("),c("span",{class:"token punctuation"},")"),c("span",{class:"token punctuation"},"{"),p("\n    "),c("span",{class:"token comment"},"// code ..."),p("\n"),c("span",{class:"token punctuation"},"}"),c("span",{class:"token punctuation"},";"),p("\n")])]),c("div",{class:"line-numbers-wrapper"},[c("span",{class:"line-number"},"1"),c("br"),c("span",{class:"line-number"},"2"),c("br"),c("span",{class:"line-number"},"3"),c("br"),c("span",{class:"line-number"},"4"),c("br"),c("span",{class:"line-number"},"5"),c("br"),c("span",{class:"line-number"},"6"),c("br"),c("span",{class:"line-number"},"7"),c("br"),c("span",{class:"line-number"},"8"),c("br"),c("span",{class:"line-number"},"9"),c("br"),c("span",{class:"line-number"},"10"),c("br"),c("span",{class:"line-number"},"11"),c("br"),c("span",{class:"line-number"},"12"),c("br")])],-1),Xn=c("p",null,[p("该属性没有写入ES3的正文，而是写入了附录。__proto__前后的双下划线说明它本质上是一个内部属性，而不是正式对外的一个API。无论从语义的角度，还是从兼容性的角度，都不要使用这个属性。而是使用Object.setPrototypeOf()（写操作），Object.getPrototypeOf()（读操作），或Object.create()（生成操作）代替。 在实现上，__proto__调用的Object.prototype."),c("strong",null,"proto"),p("。 Object.setPrototypeOf()方法的作用与__proto__作用相同，用于设置一个对象的prototype对象。它是ES6正式推荐的设置原型对象的方法。")],-1),Yn=c("h2",{id:"在es8中附加的object属性",tabindex:"-1"},[p("在ES8中附加的Object属性 "),c("a",{class:"header-anchor",href:"#在es8中附加的object属性","aria-hidden":"true"},"#")],-1),Zn=c("h3",{id:"object-getownpropertydescriptors-obj-es8",tabindex:"-1"},[p("Object.getOwnPropertyDescriptors(obj) (ES8) "),c("a",{class:"header-anchor",href:"#object-getownpropertydescriptors-obj-es8","aria-hidden":"true"},"#")],-1),$n=c("p",null,"该方法基本与Object.getOwnPropertyDescriptor(obj, property)用法一致，只不过它可以用来获取一个对象的所有自身属性的描述符。",-1),ns=c("div",{class:"language-"},[c("pre",null,[c("code",null,"Object.getOwnPropertyDescriptor(Object.prototype, 'toString');\n// {writable: true, enumerable: false, configurable: true, value: ƒ toString()}\nObject.getOwnPropertyDescriptors(Object.prototype);\n// constructor: {value: ƒ, writable: true, enumerable: false, configurable: true}\nhasOwnProperty: {value: ƒ, writable: true, enumerable: false, configurable: true}\nisPrototypeOf: {value: ƒ, writable: true, enumerable: false, configurable: true}\npropertyIsEnumerable: {value: ƒ, writable: true, enumerable: false, configurable: true}\ntoLocaleString: {value: ƒ, writable: true, enumerable: false, configurable: true}\ntoString: {value: ƒ, writable: true, enumerable: false, configurable: true}\nvalueOf: {value: ƒ, writable: true, enumerable: false, configurable: true}\n__defineGetter__: {value: ƒ, writable: true, enumerable: false, configurable: true}\n__defineSetter__: {value: ƒ, writable: true, enumerable: false, configurable: true}\n__lookupGetter__: {value: ƒ, writable: true, enumerable: false, configurable: true}\n__lookupSetter__: {value: ƒ, writable: true, enumerable: false, configurable: true}\n__proto__: Object\n")]),c("div",{class:"line-numbers-wrapper"},[c("span",{class:"line-number"},"1"),c("br"),c("span",{class:"line-number"},"2"),c("br"),c("span",{class:"line-number"},"3"),c("br"),c("span",{class:"line-number"},"4"),c("br"),c("span",{class:"line-number"},"5"),c("br"),c("span",{class:"line-number"},"6"),c("br"),c("span",{class:"line-number"},"7"),c("br"),c("span",{class:"line-number"},"8"),c("br"),c("span",{class:"line-number"},"9"),c("br"),c("span",{class:"line-number"},"10"),c("br"),c("span",{class:"line-number"},"11"),c("br"),c("span",{class:"line-number"},"12"),c("br"),c("span",{class:"line-number"},"13"),c("br"),c("span",{class:"line-number"},"14"),c("br"),c("span",{class:"line-number"},"15"),c("br")])],-1),ss=c("h3",{id:"object-values-obj-es8",tabindex:"-1"},[p("Object.values(obj) (ES8) "),c("a",{class:"header-anchor",href:"#object-values-obj-es8","aria-hidden":"true"},"#")],-1),as=c("p",null,"Object.values() 方法与Object.keys类似。返回一个给定对象自己的所有可枚举属性值的数组，值的顺序与使用for...in循环的顺序相同 ( 区别在于for-in循环枚举原型链中的属性 )",-1),es=c("div",{class:"language-js line-numbers-mode"},[c("pre",null,[c("code",null,[c("span",{class:"token keyword"},"var"),p(" obj "),c("span",{class:"token operator"},"="),p(),c("span",{class:"token punctuation"},"{"),p("a"),c("span",{class:"token operator"},":"),c("span",{class:"token number"},"1"),c("span",{class:"token punctuation"},","),p("b"),c("span",{class:"token operator"},":"),c("span",{class:"token number"},"2"),c("span",{class:"token punctuation"},","),p("c"),c("span",{class:"token operator"},":"),c("span",{class:"token number"},"3"),c("span",{class:"token punctuation"},"}"),c("span",{class:"token punctuation"},";"),p("\nObject"),c("span",{class:"token punctuation"},"."),c("span",{class:"token function"},"keys"),c("span",{class:"token punctuation"},"("),p("obj"),c("span",{class:"token punctuation"},")"),c("span",{class:"token punctuation"},";"),p(),c("span",{class:"token comment"},"// ['a','b','c']"),p("\nObject"),c("span",{class:"token punctuation"},"."),c("span",{class:"token function"},"values"),c("span",{class:"token punctuation"},"("),p("obj"),c("span",{class:"token punctuation"},")"),c("span",{class:"token punctuation"},";"),p(),c("span",{class:"token comment"},"// [1,2,3]"),p("\n")])]),c("div",{class:"line-numbers-wrapper"},[c("span",{class:"line-number"},"1"),c("br"),c("span",{class:"line-number"},"2"),c("br"),c("span",{class:"line-number"},"3"),c("br")])],-1),ts=c("h3",{id:"object-entries-obj-es8",tabindex:"-1"},[p("Object.entries(obj) (ES8) "),c("a",{class:"header-anchor",href:"#object-entries-obj-es8","aria-hidden":"true"},"#")],-1),os=c("p",null,"Object.entries() 方法返回一个给定对象自己的可枚举属性[key，value]对的数组，数组中键值对的排列顺序和使用 for...in 循环遍历该对象时返回的顺序一致（区别在于一个for-in循环也枚举原型链中的属性）",-1),cs=c("div",{class:"language-js line-numbers-mode"},[c("pre",null,[c("code",null,[c("span",{class:"token keyword"},"var"),p(" obj "),c("span",{class:"token operator"},"="),p(),c("span",{class:"token punctuation"},"{"),p("a"),c("span",{class:"token operator"},":"),c("span",{class:"token number"},"1"),c("span",{class:"token punctuation"},","),p("b"),c("span",{class:"token operator"},":"),c("span",{class:"token number"},"2"),c("span",{class:"token punctuation"},","),p("c"),c("span",{class:"token operator"},":"),c("span",{class:"token number"},"3"),c("span",{class:"token punctuation"},"}"),c("span",{class:"token punctuation"},";"),p("\nObject"),c("span",{class:"token punctuation"},"."),c("span",{class:"token function"},"keys"),c("span",{class:"token punctuation"},"("),p("obj"),c("span",{class:"token punctuation"},")"),c("span",{class:"token punctuation"},";"),p(),c("span",{class:"token comment"},"// ['a','b','c']"),p("\nObject"),c("span",{class:"token punctuation"},"."),c("span",{class:"token function"},"values"),c("span",{class:"token punctuation"},"("),p("obj"),c("span",{class:"token punctuation"},")"),c("span",{class:"token punctuation"},";"),p(),c("span",{class:"token comment"},"// [1,2,3]"),p("\nObject"),c("span",{class:"token punctuation"},"."),c("span",{class:"token function"},"entries"),c("span",{class:"token punctuation"},"("),p("obj"),c("span",{class:"token punctuation"},")"),c("span",{class:"token punctuation"},";"),p(),c("span",{class:"token comment"},"// [['a',1],['b',2],['c',3]]"),p("\n")])]),c("div",{class:"line-numbers-wrapper"},[c("span",{class:"line-number"},"1"),c("br"),c("span",{class:"line-number"},"2"),c("br"),c("span",{class:"line-number"},"3"),c("br"),c("span",{class:"line-number"},"4"),c("br")])],-1),ps=c("h2",{id:"小结",tabindex:"-1"},[p("小结 "),c("a",{class:"header-anchor",href:"#小结","aria-hidden":"true"},"#")],-1),ls=c("p",null,"您可能会发现MDN上还有一些API，本文没有列举到。因为那些是非标准的API。熟悉对象的API对理解原型和原型链相关知识会有一定帮助。常用的API主要有Object.prototype.toString()，Object.prototype.hasOwnProperty()， Object.getPrototypeOf(obj)，Object.create()，Object.defineProperty，Object.keys(obj)，Object.assign()。",-1),us=c("p",null,[c("a",{href:"https://segmentfault.com/a/1190000010753942",target:"_blank",rel:"noopener noreferrer"},"原文")],-1);var rs=n(r,[["render",function(n,o,c,p,u,r){const rs=s("code-block");return l(),a("div",null,[i,e(rs,{showAction:!1},{default:t((()=>[b])),_:1}),k,e(rs,{showAction:!1},{default:t((()=>[m])),_:1}),d,j,f,e(rs,{showAction:!1},{default:t((()=>[y])),_:1}),g,O,h,e(rs,{showAction:!1},{default:t((()=>[v])),_:1}),w,S,e(rs,{showAction:!1},{default:t((()=>[_])),_:1}),E,P,x,e(rs,{showAction:!1},{default:t((()=>[A])),_:1}),N,I,e(rs,{showAction:!1},{default:t((()=>[D])),_:1}),T,z,V,C,L,e(rs,{showAction:!1},{default:t((()=>[F])),_:1}),G,H,e(rs,{showAction:!1},{default:t((()=>[J])),_:1}),M,e(rs,{showAction:!1},{default:t((()=>[R])),_:1}),q,e(rs,{showAction:!1},{default:t((()=>[U])),_:1}),B,e(rs,{showAction:!1},{default:t((()=>[K])),_:1}),Q,W,e(rs,{showAction:!1},{default:t((()=>[X])),_:1}),Y,Z,$,nn,e(rs,{showAction:!1},{default:t((()=>[sn])),_:1}),an,en,e(rs,{showAction:!1},{default:t((()=>[tn])),_:1}),on,cn,e(rs,{showAction:!1},{default:t((()=>[pn])),_:1}),ln,e(rs,{showAction:!1},{default:t((()=>[un])),_:1}),rn,bn,e(rs,{showAction:!1},{default:t((()=>[kn])),_:1}),mn,dn,e(rs,{showAction:!1},{default:t((()=>[jn])),_:1}),fn,yn,e(rs,{showAction:!1},{default:t((()=>[gn])),_:1}),On,hn,e(rs,{showAction:!1},{default:t((()=>[vn])),_:1}),wn,Sn,e(rs,{showAction:!1},{default:t((()=>[_n])),_:1}),En,Pn,e(rs,{showAction:!1},{default:t((()=>[xn])),_:1}),An,e(rs,{showAction:!1},{default:t((()=>[Nn])),_:1}),In,e(rs,{showAction:!1},{default:t((()=>[Dn])),_:1}),Tn,zn,e(rs,{showAction:!1},{default:t((()=>[Vn])),_:1}),Cn,e(rs,{showAction:!1},{default:t((()=>[Ln])),_:1}),Fn,e(rs,{showAction:!1},{default:t((()=>[Gn])),_:1}),Hn,e(rs,{showAction:!1},{default:t((()=>[Jn])),_:1}),Mn,e(rs,{showAction:!1},{default:t((()=>[Rn])),_:1}),qn,Un,e(rs,{showAction:!1},{default:t((()=>[Bn])),_:1}),Kn,Qn,e(rs,{showAction:!1},{default:t((()=>[Wn])),_:1}),Xn,Yn,Zn,$n,e(rs,{showAction:!1},{default:t((()=>[ns])),_:1}),ss,as,e(rs,{showAction:!1},{default:t((()=>[es])),_:1}),ts,os,e(rs,{showAction:!1},{default:t((()=>[cs])),_:1}),ps,ls,us])}]]);export{u as __pageData,rs as default};
