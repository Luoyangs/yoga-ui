import{_ as n,r as s,c as a,a as e,w as t,f as o,e as c,b as l,o as p}from"./app.82084a0b.js";const u='{"title":"instanceof 和 typeof 的实现原理","description":"","frontmatter":{},"headers":[{"level":2,"title":"typeof 实现原理","slug":"typeof-实现原理"},{"level":2,"title":"instanceof 操作符的实现原理","slug":"instanceof-操作符的实现原理"},{"level":3,"title":"Object instanceof Object","slug":"object-instanceof-object"},{"level":3,"title":"Foo instanceof Foo","slug":"foo-instanceof-foo"},{"level":3,"title":"Foo instanceof Object","slug":"foo-instanceof-object"},{"level":3,"title":"Foo instanceof Function","slug":"foo-instanceof-function"}],"relativePath":"learns/javascript/instanceof-and-typeof.md","lastUpdated":1638452551944}',r={},i=o('<p><div class="table-of-contents"><ul><li><a href="#typeof-实现原理">typeof 实现原理</a></li><li><a href="#instanceof-操作符的实现原理">instanceof 操作符的实现原理</a><ul><li><a href="#object-instanceof-object">Object instanceof Object</a></li><li><a href="#foo-instanceof-foo">Foo instanceof Foo</a></li><li><a href="#foo-instanceof-object">Foo instanceof Object</a></li><li><a href="#foo-instanceof-function">Foo instanceof Function</a></li></ul></li></ul></div></p><h1 id="instanceof-和-typeof-的实现原理" tabindex="-1">instanceof 和 typeof 的实现原理 <a class="header-anchor" href="#instanceof-和-typeof-的实现原理" aria-hidden="true">#</a></h1><h2 id="typeof-实现原理" tabindex="-1">typeof 实现原理 <a class="header-anchor" href="#typeof-实现原理" aria-hidden="true">#</a></h2><p>typeof 一般被用于判断一个变量的类型，我们可以利用 typeof 来判断number, string, object, boolean, function, undefined, symbol 这七种类型，这种判断能帮助我们搞定一些问题，比如在判断不是 object 类型的数据的时候，typeof能比较清楚的告诉我们具体是哪一类的类型。</p><p>但是，很遗憾的一点是，typeof 在判断一个 object的数据的时候只能告诉我们这个数据是 object, 而不能细致的具体到是哪一种 object</p>',5),k=c("div",{class:"language-js line-numbers-mode"},[c("pre",null,[c("code",null,[c("span",{class:"token keyword"},"let"),l(" s "),c("span",{class:"token operator"},"="),l(),c("span",{class:"token keyword"},"new"),l(),c("span",{class:"token class-name"},"String"),c("span",{class:"token punctuation"},"("),c("span",{class:"token string"},"'abc'"),c("span",{class:"token punctuation"},")"),c("span",{class:"token punctuation"},";"),l("\n"),c("span",{class:"token keyword"},"typeof"),l(" s "),c("span",{class:"token operator"},"==="),l(),c("span",{class:"token string"},"'object'"),c("span",{class:"token comment"},"// true"),l("\ns "),c("span",{class:"token keyword"},"instanceof"),l(),c("span",{class:"token class-name"},"String"),l(),c("span",{class:"token comment"},"// true"),l("\n")])]),c("div",{class:"line-numbers-wrapper"},[c("span",{class:"line-number"},"1"),c("br"),c("span",{class:"line-number"},"2"),c("br"),c("span",{class:"line-number"},"3"),c("br")])],-1),b=o("<p>来谈谈关于 typeof 的原理吧，我们可以先想一个很有意思的问题，js 在底层是怎么存储数据的类型信息呢？或者说，一个 js 的变量，在它的底层实现中，它的类型信息是怎么实现的呢？</p><p>其实，js 在底层存储变量的时候，会在变量的机器码的低位1-3位存储其类型信息👉</p><ul><li>000：对象</li><li>010：浮点数</li><li>100：字符串</li><li>110：布尔</li><li>1：整数</li></ul><blockquote><p>对于 undefined 和 null 来说，这两个值的信息存储是有点特殊的。</p></blockquote><ul><li>null：所有机器码均为0</li><li>undefined：用 −2^30 整数来表示</li></ul><p>所以，typeof 在判断 null 的时候就出现问题了，由于 null 的所有机器码均为0，因此直接被当做了对象来看待。</p><p>然而用 instanceof 来判断的话</p>",7),m=c("div",{class:"language-js line-numbers-mode"},[c("pre",null,[c("code",null,[c("span",{class:"token keyword"},"null"),l(),c("span",{class:"token keyword"},"instanceof"),l(),c("span",{class:"token class-name"},"null"),l(),c("span",{class:"token comment"},"// TypeError: Right-hand side of 'instanceof' is not an object"),l("\n")])]),c("div",{class:"line-numbers-wrapper"},[c("span",{class:"line-number"},"1"),c("br")])],-1),f=c("p",null,"null 直接被判断为不是 object，这也是 JavaScript 的历史遗留bug",-1),d=c("p",null,"因此在用 typeof 来判断变量类型的时候，我们需要注意，最好是用 typeof 来判断基本数据类型（包括symbol），避免对 null 的判断",-1),y=c("p",null,"还有一个不错的判断类型的方法，就是Object.prototype.toString，我们可以利用这个方法来对一个变量的类型来进行比较准确的判断",-1),j=c("div",{class:"language-js line-numbers-mode"},[c("pre",null,[c("code",null,[c("span",{class:"token class-name"},"Object"),c("span",{class:"token punctuation"},"."),l("prototype"),c("span",{class:"token punctuation"},"."),c("span",{class:"token function"},"toString"),c("span",{class:"token punctuation"},"."),c("span",{class:"token function"},"call"),c("span",{class:"token punctuation"},"("),c("span",{class:"token number"},"1"),c("span",{class:"token punctuation"},")"),l(),c("span",{class:"token comment"},'// "[object Number]"'),l("\n\n"),c("span",{class:"token class-name"},"Object"),c("span",{class:"token punctuation"},"."),l("prototype"),c("span",{class:"token punctuation"},"."),c("span",{class:"token function"},"toString"),c("span",{class:"token punctuation"},"."),c("span",{class:"token function"},"call"),c("span",{class:"token punctuation"},"("),c("span",{class:"token string"},"'hi'"),c("span",{class:"token punctuation"},")"),l(),c("span",{class:"token comment"},'// "[object String]"'),l("\n\n"),c("span",{class:"token class-name"},"Object"),c("span",{class:"token punctuation"},"."),l("prototype"),c("span",{class:"token punctuation"},"."),c("span",{class:"token function"},"toString"),c("span",{class:"token punctuation"},"."),c("span",{class:"token function"},"call"),c("span",{class:"token punctuation"},"("),c("span",{class:"token punctuation"},"{"),l("a"),c("span",{class:"token operator"},":"),c("span",{class:"token string"},"'hi'"),c("span",{class:"token punctuation"},"}"),c("span",{class:"token punctuation"},")"),l(),c("span",{class:"token comment"},'// "[object Object]"'),l("\n\n"),c("span",{class:"token class-name"},"Object"),c("span",{class:"token punctuation"},"."),l("prototype"),c("span",{class:"token punctuation"},"."),c("span",{class:"token function"},"toString"),c("span",{class:"token punctuation"},"."),c("span",{class:"token function"},"call"),c("span",{class:"token punctuation"},"("),c("span",{class:"token punctuation"},"["),c("span",{class:"token number"},"1"),c("span",{class:"token punctuation"},","),c("span",{class:"token string"},"'a'"),c("span",{class:"token punctuation"},"]"),c("span",{class:"token punctuation"},")"),l(),c("span",{class:"token comment"},'// "[object Array]"'),l("\n\n"),c("span",{class:"token class-name"},"Object"),c("span",{class:"token punctuation"},"."),l("prototype"),c("span",{class:"token punctuation"},"."),c("span",{class:"token function"},"toString"),c("span",{class:"token punctuation"},"."),c("span",{class:"token function"},"call"),c("span",{class:"token punctuation"},"("),c("span",{class:"token boolean"},"true"),c("span",{class:"token punctuation"},")"),l(),c("span",{class:"token comment"},'// "[object Boolean]"'),l("\n\n"),c("span",{class:"token class-name"},"Object"),c("span",{class:"token punctuation"},"."),l("prototype"),c("span",{class:"token punctuation"},"."),c("span",{class:"token function"},"toString"),c("span",{class:"token punctuation"},"."),c("span",{class:"token function"},"call"),c("span",{class:"token punctuation"},"("),c("span",{class:"token punctuation"},"("),c("span",{class:"token punctuation"},")"),l(),c("span",{class:"token operator"},"=>"),l(),c("span",{class:"token punctuation"},"{"),c("span",{class:"token punctuation"},"}"),c("span",{class:"token punctuation"},")"),l(),c("span",{class:"token comment"},'// "[object Function]"'),l("\n\n"),c("span",{class:"token class-name"},"Object"),c("span",{class:"token punctuation"},"."),l("prototype"),c("span",{class:"token punctuation"},"."),c("span",{class:"token function"},"toString"),c("span",{class:"token punctuation"},"."),c("span",{class:"token function"},"call"),c("span",{class:"token punctuation"},"("),c("span",{class:"token keyword"},"null"),c("span",{class:"token punctuation"},")"),l(),c("span",{class:"token comment"},'// "[object Null]"'),l("\n\n"),c("span",{class:"token class-name"},"Object"),c("span",{class:"token punctuation"},"."),l("prototype"),c("span",{class:"token punctuation"},"."),c("span",{class:"token function"},"toString"),c("span",{class:"token punctuation"},"."),c("span",{class:"token function"},"call"),c("span",{class:"token punctuation"},"("),c("span",{class:"token keyword"},"undefined"),c("span",{class:"token punctuation"},")"),l(),c("span",{class:"token comment"},'// "[object Undefined]"'),l("\n\n"),c("span",{class:"token class-name"},"Object"),c("span",{class:"token punctuation"},"."),l("prototype"),c("span",{class:"token punctuation"},"."),c("span",{class:"token function"},"toString"),c("span",{class:"token punctuation"},"."),c("span",{class:"token function"},"call"),c("span",{class:"token punctuation"},"("),c("span",{class:"token function"},"Symbol"),c("span",{class:"token punctuation"},"("),c("span",{class:"token number"},"1"),c("span",{class:"token punctuation"},")"),c("span",{class:"token punctuation"},")"),l(),c("span",{class:"token comment"},'// "[object Symbol]"'),l("\n")])]),c("div",{class:"line-numbers-wrapper"},[c("span",{class:"line-number"},"1"),c("br"),c("span",{class:"line-number"},"2"),c("br"),c("span",{class:"line-number"},"3"),c("br"),c("span",{class:"line-number"},"4"),c("br"),c("span",{class:"line-number"},"5"),c("br"),c("span",{class:"line-number"},"6"),c("br"),c("span",{class:"line-number"},"7"),c("br"),c("span",{class:"line-number"},"8"),c("br"),c("span",{class:"line-number"},"9"),c("br"),c("span",{class:"line-number"},"10"),c("br"),c("span",{class:"line-number"},"11"),c("br"),c("span",{class:"line-number"},"12"),c("br"),c("span",{class:"line-number"},"13"),c("br"),c("span",{class:"line-number"},"14"),c("br"),c("span",{class:"line-number"},"15"),c("br"),c("span",{class:"line-number"},"16"),c("br"),c("span",{class:"line-number"},"17"),c("br")])],-1),_=c("h2",{id:"instanceof-操作符的实现原理",tabindex:"-1"},[l("instanceof 操作符的实现原理 "),c("a",{class:"header-anchor",href:"#instanceof-操作符的实现原理","aria-hidden":"true"},"#")],-1),g=c("p",null,"之前我们提到了 instanceof 来判断对象的具体类型，其实 instanceof 主要的作用就是判断一个实例是否属于某种类型",-1),h=c("div",{class:"language-js line-numbers-mode"},[c("pre",null,[c("code",null,[c("span",{class:"token keyword"},"let"),l(),c("span",{class:"token function-variable function"},"person"),l(),c("span",{class:"token operator"},"="),l(),c("span",{class:"token keyword"},"function"),l(),c("span",{class:"token punctuation"},"("),c("span",{class:"token punctuation"},")"),l(),c("span",{class:"token punctuation"},"{"),c("span",{class:"token punctuation"},"}"),l("\n"),c("span",{class:"token keyword"},"let"),l(" nicole "),c("span",{class:"token operator"},"="),l(),c("span",{class:"token keyword"},"new"),l(),c("span",{class:"token class-name"},"person"),c("span",{class:"token punctuation"},"("),c("span",{class:"token punctuation"},")"),l("\nnicole "),c("span",{class:"token keyword"},"instanceof"),l(),c("span",{class:"token class-name"},"person"),l(),c("span",{class:"token comment"},"// true"),l("\n")])]),c("div",{class:"line-numbers-wrapper"},[c("span",{class:"line-number"},"1"),c("br"),c("span",{class:"line-number"},"2"),c("br"),c("span",{class:"line-number"},"3"),c("br")])],-1),w=c("p",null,"instanceof 也可以判断一个实例是否是其父类型或者祖先类型的实例。",-1),F=c("div",{class:"language-js line-numbers-mode"},[c("pre",null,[c("code",null,[c("span",{class:"token keyword"},"let"),l(),c("span",{class:"token function-variable function"},"person"),l(),c("span",{class:"token operator"},"="),l(),c("span",{class:"token keyword"},"function"),l(),c("span",{class:"token punctuation"},"("),c("span",{class:"token punctuation"},")"),l(),c("span",{class:"token punctuation"},"{"),c("span",{class:"token punctuation"},"}"),l("\n"),c("span",{class:"token keyword"},"let"),l(),c("span",{class:"token function-variable function"},"programmer"),l(),c("span",{class:"token operator"},"="),l(),c("span",{class:"token keyword"},"function"),l(),c("span",{class:"token punctuation"},"("),c("span",{class:"token punctuation"},")"),l(),c("span",{class:"token punctuation"},"{"),c("span",{class:"token punctuation"},"}"),l("\nprogrammer"),c("span",{class:"token punctuation"},"."),l("prototype "),c("span",{class:"token operator"},"="),l(),c("span",{class:"token keyword"},"new"),l(),c("span",{class:"token class-name"},"person"),c("span",{class:"token punctuation"},"("),c("span",{class:"token punctuation"},")"),l("\n"),c("span",{class:"token keyword"},"let"),l(" nicole "),c("span",{class:"token operator"},"="),l(),c("span",{class:"token keyword"},"new"),l(),c("span",{class:"token class-name"},"programmer"),c("span",{class:"token punctuation"},"("),c("span",{class:"token punctuation"},")"),l("\nnicole "),c("span",{class:"token keyword"},"instanceof"),l(),c("span",{class:"token class-name"},"person"),l(),c("span",{class:"token comment"},"// true"),l("\nnicole "),c("span",{class:"token keyword"},"instanceof"),l(),c("span",{class:"token class-name"},"programmer"),l(),c("span",{class:"token comment"},"// true"),l("\n")])]),c("div",{class:"line-numbers-wrapper"},[c("span",{class:"line-number"},"1"),c("br"),c("span",{class:"line-number"},"2"),c("br"),c("span",{class:"line-number"},"3"),c("br"),c("span",{class:"line-number"},"4"),c("br"),c("span",{class:"line-number"},"5"),c("br"),c("span",{class:"line-number"},"6"),c("br")])],-1),V=c("p",null,"这是 instanceof 的用法，但是 instanceof 的原理是什么呢？",-1),O=c("div",{class:"language-js line-numbers-mode"},[c("pre",null,[c("code",null,[c("span",{class:"token keyword"},"function"),l(),c("span",{class:"token function"},"new_instance_of"),c("span",{class:"token punctuation"},"("),c("span",{class:"token parameter"},[l("leftVaule"),c("span",{class:"token punctuation"},","),l(" rightVaule")]),c("span",{class:"token punctuation"},")"),l(),c("span",{class:"token punctuation"},"{"),l(" \n  "),c("span",{class:"token keyword"},"let"),l(" rightProto "),c("span",{class:"token operator"},"="),l(" rightVaule"),c("span",{class:"token punctuation"},"."),l("prototype"),c("span",{class:"token punctuation"},";"),l(),c("span",{class:"token comment"},"// 取右表达式的 prototype 值"),l("\n  leftVaule "),c("span",{class:"token operator"},"="),l(" leftVaule"),c("span",{class:"token punctuation"},"."),l("__proto__"),c("span",{class:"token punctuation"},";"),l(),c("span",{class:"token comment"},"// 取左表达式的__proto__值"),l("\n  "),c("span",{class:"token keyword"},"while"),l(),c("span",{class:"token punctuation"},"("),c("span",{class:"token boolean"},"true"),c("span",{class:"token punctuation"},")"),l(),c("span",{class:"token punctuation"},"{"),l("\n    "),c("span",{class:"token keyword"},"if"),l(),c("span",{class:"token punctuation"},"("),l("leftVaule "),c("span",{class:"token operator"},"==="),l(),c("span",{class:"token keyword"},"null"),c("span",{class:"token punctuation"},")"),l(),c("span",{class:"token punctuation"},"{"),l("\n      "),c("span",{class:"token keyword"},"return"),l(),c("span",{class:"token boolean"},"false"),c("span",{class:"token punctuation"},";"),l("\t\n    "),c("span",{class:"token punctuation"},"}"),l("\n    "),c("span",{class:"token keyword"},"if"),l(),c("span",{class:"token punctuation"},"("),l("leftVaule "),c("span",{class:"token operator"},"==="),l(" rightProto"),c("span",{class:"token punctuation"},")"),l(),c("span",{class:"token punctuation"},"{"),l("\n      "),c("span",{class:"token keyword"},"return"),l(),c("span",{class:"token boolean"},"true"),c("span",{class:"token punctuation"},";"),l("\t\n    "),c("span",{class:"token punctuation"},"}"),l(" \n    leftVaule "),c("span",{class:"token operator"},"="),l(" leftVaule"),c("span",{class:"token punctuation"},"."),l("__proto__ \n  "),c("span",{class:"token punctuation"},"}"),l("\n"),c("span",{class:"token punctuation"},"}"),l("\n")])]),c("div",{class:"line-numbers-wrapper"},[c("span",{class:"line-number"},"1"),c("br"),c("span",{class:"line-number"},"2"),c("br"),c("span",{class:"line-number"},"3"),c("br"),c("span",{class:"line-number"},"4"),c("br"),c("span",{class:"line-number"},"5"),c("br"),c("span",{class:"line-number"},"6"),c("br"),c("span",{class:"line-number"},"7"),c("br"),c("span",{class:"line-number"},"8"),c("br"),c("span",{class:"line-number"},"9"),c("br"),c("span",{class:"line-number"},"10"),c("br"),c("span",{class:"line-number"},"11"),c("br"),c("span",{class:"line-number"},"12"),c("br"),c("span",{class:"line-number"},"13"),c("br")])],-1),v=c("p",null,"其实 instanceof 主要的实现原理就是只要右边变量的 prototype 在左边变量的原型链上即可。因此，instanceof 在查找的过程中会遍历左边变量的原型链，直到找到右边变量的 prototype，如果查找失败，则会返回 false，告诉我们左边变量并非是右边变量的实例。",-1),S=c("div",{class:"language-js line-numbers-mode"},[c("pre",null,[c("code",null,[c("span",{class:"token keyword"},"function"),l(),c("span",{class:"token function"},"Foo"),c("span",{class:"token punctuation"},"("),c("span",{class:"token punctuation"},")"),l(),c("span",{class:"token punctuation"},"{"),c("span",{class:"token punctuation"},"}"),l("\n\nObject "),c("span",{class:"token keyword"},"instanceof"),l(),c("span",{class:"token class-name"},"Object"),l(),c("span",{class:"token comment"},"// true"),l("\nFunction "),c("span",{class:"token keyword"},"instanceof"),l(),c("span",{class:"token class-name"},"Function"),l(),c("span",{class:"token comment"},"// true"),l("\nFunction "),c("span",{class:"token keyword"},"instanceof"),l(),c("span",{class:"token class-name"},"Object"),l(),c("span",{class:"token comment"},"// true"),l("\nFoo "),c("span",{class:"token keyword"},"instanceof"),l(),c("span",{class:"token class-name"},"Foo"),l(),c("span",{class:"token comment"},"// false"),l("\nFoo "),c("span",{class:"token keyword"},"instanceof"),l(),c("span",{class:"token class-name"},"Object"),l(),c("span",{class:"token comment"},"// true"),l("\nFoo "),c("span",{class:"token keyword"},"instanceof"),l(),c("span",{class:"token class-name"},"Function"),l(),c("span",{class:"token comment"},"// true"),l("\n")])]),c("div",{class:"line-numbers-wrapper"},[c("span",{class:"line-number"},"1"),c("br"),c("span",{class:"line-number"},"2"),c("br"),c("span",{class:"line-number"},"3"),c("br"),c("span",{class:"line-number"},"4"),c("br"),c("span",{class:"line-number"},"5"),c("br"),c("span",{class:"line-number"},"6"),c("br"),c("span",{class:"line-number"},"7"),c("br"),c("span",{class:"line-number"},"8"),c("br")])],-1),A=o('<p>要想全部理解 instanceof 的原理，除了我们刚刚提到的实现原理，我们还需要知道 JavaScript 的原型继承原理。 <img src="https://user-gold-cdn.xitu.io/2018/5/28/163a55d5d35b866d?imageView2/0/w/1280/h/960/format/webp/ignore-error/1" alt="img"></p><p>我们知道每个 JavaScript 对象均有一个隐式的 <strong>proto</strong> 原型属性，而显式的原型属性是 prototype，只有 Object.prototype.<strong>proto</strong> 属性在未修改的情况下为 null 值。根据图上的原理，我们来梳理上面提到的几个有趣的 instanceof 使用的例子。</p><h3 id="object-instanceof-object" tabindex="-1">Object instanceof Object <a class="header-anchor" href="#object-instanceof-object" aria-hidden="true">#</a></h3><p>由图可知，Object 的 prototype 属性是 Object.prototype, 而由于 Object 本身是一个函数，由 Function 所创建，所以 Object.<strong>proto</strong> 的值是 Function.prototype，而 Function.prototype 的 <strong>proto</strong> 属性是 Object.prototype，所以我们可以判断出，Object instanceof Object 的结果是 true 。用代码简单的表示一下</p>',4),T=c("div",{class:"language-js line-numbers-mode"},[c("pre",null,[c("code",null,[l("leftValue "),c("span",{class:"token operator"},"="),l(" Object"),c("span",{class:"token punctuation"},"."),l("__proto__ "),c("span",{class:"token operator"},"="),l(),c("span",{class:"token class-name"},"Function"),c("span",{class:"token punctuation"},"."),l("prototype"),c("span",{class:"token punctuation"},";"),l("\nrightValue "),c("span",{class:"token operator"},"="),l(),c("span",{class:"token class-name"},"Object"),c("span",{class:"token punctuation"},"."),l("prototype"),c("span",{class:"token punctuation"},";"),l("\n"),c("span",{class:"token comment"},"// 第一次判断"),l("\nleftValue "),c("span",{class:"token operator"},"!="),l(" rightValue\nleftValue "),c("span",{class:"token operator"},"="),l(),c("span",{class:"token class-name"},"Function"),c("span",{class:"token punctuation"},"."),l("prototype"),c("span",{class:"token punctuation"},"."),l("__proto__ "),c("span",{class:"token operator"},"="),l(),c("span",{class:"token class-name"},"Object"),c("span",{class:"token punctuation"},"."),l("prototype\n"),c("span",{class:"token comment"},"// 第二次判断"),l("\nleftValue "),c("span",{class:"token operator"},"==="),l(" rightValue\n"),c("span",{class:"token comment"},"// 返回 true"),l("\n")])]),c("div",{class:"line-numbers-wrapper"},[c("span",{class:"line-number"},"1"),c("br"),c("span",{class:"line-number"},"2"),c("br"),c("span",{class:"line-number"},"3"),c("br"),c("span",{class:"line-number"},"4"),c("br"),c("span",{class:"line-number"},"5"),c("br"),c("span",{class:"line-number"},"6"),c("br"),c("span",{class:"line-number"},"7"),c("br"),c("span",{class:"line-number"},"8"),c("br")])],-1),x=c("p",null,"Function instanceof Function 和 Function instanceof Object 的运行过程与 Object instanceof Object 类似",-1),P=c("h3",{id:"foo-instanceof-foo",tabindex:"-1"},[l("Foo instanceof Foo "),c("a",{class:"header-anchor",href:"#foo-instanceof-foo","aria-hidden":"true"},"#")],-1),C=c("p",null,[l("Foo 函数的 prototype 属性是 Foo.prototype，而 Foo 的 "),c("strong",null,"proto"),l(" 属性是 Function.prototype，由图可知，Foo 的原型链上并没有 Foo.prototype ，因此 Foo instanceof Foo 也就返回 false 。")],-1),I=c("div",{class:"language-js line-numbers-mode"},[c("pre",null,[c("code",null,[l("leftValue "),c("span",{class:"token operator"},"="),l(" Foo"),c("span",{class:"token punctuation"},","),l(" rightValue "),c("span",{class:"token operator"},"="),l(" Foo\nleftValue "),c("span",{class:"token operator"},"="),l(" Foo"),c("span",{class:"token punctuation"},"."),l("__proto "),c("span",{class:"token operator"},"="),l(),c("span",{class:"token class-name"},"Function"),c("span",{class:"token punctuation"},"."),l("prototype\nrightValue "),c("span",{class:"token operator"},"="),l(),c("span",{class:"token class-name"},"Foo"),c("span",{class:"token punctuation"},"."),l("prototype\n"),c("span",{class:"token comment"},"// 第一次判断"),l("\nleftValue "),c("span",{class:"token operator"},"!="),l(" rightValue\nleftValue "),c("span",{class:"token operator"},"="),l(),c("span",{class:"token class-name"},"Function"),c("span",{class:"token punctuation"},"."),l("prototype"),c("span",{class:"token punctuation"},"."),l("__proto__ "),c("span",{class:"token operator"},"="),l(),c("span",{class:"token class-name"},"Object"),c("span",{class:"token punctuation"},"."),l("prototype\n"),c("span",{class:"token comment"},"// 第二次判断"),l("\nleftValue "),c("span",{class:"token operator"},"!="),l(" rightValue\nleftValue "),c("span",{class:"token operator"},"="),l(),c("span",{class:"token class-name"},"Object"),c("span",{class:"token punctuation"},"."),l("prototype "),c("span",{class:"token operator"},"="),l(),c("span",{class:"token keyword"},"null"),l("\n"),c("span",{class:"token comment"},"// 第三次判断"),l("\nleftValue "),c("span",{class:"token operator"},"==="),l(),c("span",{class:"token keyword"},"null"),l("\n"),c("span",{class:"token comment"},"// 返回 false"),l("\n")])]),c("div",{class:"line-numbers-wrapper"},[c("span",{class:"line-number"},"1"),c("br"),c("span",{class:"line-number"},"2"),c("br"),c("span",{class:"line-number"},"3"),c("br"),c("span",{class:"line-number"},"4"),c("br"),c("span",{class:"line-number"},"5"),c("br"),c("span",{class:"line-number"},"6"),c("br"),c("span",{class:"line-number"},"7"),c("br"),c("span",{class:"line-number"},"8"),c("br"),c("span",{class:"line-number"},"9"),c("br"),c("span",{class:"line-number"},"10"),c("br"),c("span",{class:"line-number"},"11"),c("br"),c("span",{class:"line-number"},"12"),c("br")])],-1),N=c("h3",{id:"foo-instanceof-object",tabindex:"-1"},[l("Foo instanceof Object "),c("a",{class:"header-anchor",href:"#foo-instanceof-object","aria-hidden":"true"},"#")],-1),E=c("div",{class:"language-js line-numbers-mode"},[c("pre",null,[c("code",null,[l("leftValue "),c("span",{class:"token operator"},"="),l(" Foo"),c("span",{class:"token punctuation"},","),l(" rightValue "),c("span",{class:"token operator"},"="),l(" Object\nleftValue "),c("span",{class:"token operator"},"="),l(" Foo"),c("span",{class:"token punctuation"},"."),l("__proto__ "),c("span",{class:"token operator"},"="),l(),c("span",{class:"token class-name"},"Function"),c("span",{class:"token punctuation"},"."),l("prototype\nrightValue "),c("span",{class:"token operator"},"="),l(),c("span",{class:"token class-name"},"Object"),c("span",{class:"token punctuation"},"."),l("prototype\n"),c("span",{class:"token comment"},"// 第一次判断"),l("\nleftValue "),c("span",{class:"token operator"},"!="),l(" rightValue\nleftValue "),c("span",{class:"token operator"},"="),l(),c("span",{class:"token class-name"},"Function"),c("span",{class:"token punctuation"},"."),l("prototype"),c("span",{class:"token punctuation"},"."),l("__proto__ "),c("span",{class:"token operator"},"="),l(),c("span",{class:"token class-name"},"Object"),c("span",{class:"token punctuation"},"."),l("prototype\n"),c("span",{class:"token comment"},"// 第二次判断"),l("\nleftValue "),c("span",{class:"token operator"},"==="),l(" rightValue\n"),c("span",{class:"token comment"},"// 返回 true "),l("\n")])]),c("div",{class:"line-numbers-wrapper"},[c("span",{class:"line-number"},"1"),c("br"),c("span",{class:"line-number"},"2"),c("br"),c("span",{class:"line-number"},"3"),c("br"),c("span",{class:"line-number"},"4"),c("br"),c("span",{class:"line-number"},"5"),c("br"),c("span",{class:"line-number"},"6"),c("br"),c("span",{class:"line-number"},"7"),c("br"),c("span",{class:"line-number"},"8"),c("br"),c("span",{class:"line-number"},"9"),c("br")])],-1),R=c("h3",{id:"foo-instanceof-function",tabindex:"-1"},[l("Foo instanceof Function "),c("a",{class:"header-anchor",href:"#foo-instanceof-function","aria-hidden":"true"},"#")],-1),D=c("div",{class:"language-js line-numbers-mode"},[c("pre",null,[c("code",null,[l("leftValue "),c("span",{class:"token operator"},"="),l(" Foo"),c("span",{class:"token punctuation"},","),l(" rightValue "),c("span",{class:"token operator"},"="),l(" Function\nleftValue "),c("span",{class:"token operator"},"="),l(" Foo"),c("span",{class:"token punctuation"},"."),l("__proto__ "),c("span",{class:"token operator"},"="),l(),c("span",{class:"token class-name"},"Function"),c("span",{class:"token punctuation"},"."),l("prototype\nrightValue "),c("span",{class:"token operator"},"="),l(),c("span",{class:"token class-name"},"Function"),c("span",{class:"token punctuation"},"."),l("prototype\n"),c("span",{class:"token comment"},"// 第一次判断"),l("\nleftValue "),c("span",{class:"token operator"},"==="),l(" rightValue\n"),c("span",{class:"token comment"},"// 返回 true "),l("\n")])]),c("div",{class:"line-numbers-wrapper"},[c("span",{class:"line-number"},"1"),c("br"),c("span",{class:"line-number"},"2"),c("br"),c("span",{class:"line-number"},"3"),c("br"),c("span",{class:"line-number"},"4"),c("br"),c("span",{class:"line-number"},"5"),c("br"),c("span",{class:"line-number"},"6"),c("br")])],-1);var J=n(r,[["render",function(n,o,c,l,u,r){const J=s("code-block");return p(),a("div",null,[i,e(J,{showAction:!1},{default:t((()=>[k])),_:1}),b,e(J,{showAction:!1},{default:t((()=>[m])),_:1}),f,d,y,e(J,{showAction:!1},{default:t((()=>[j])),_:1}),_,g,e(J,{showAction:!1},{default:t((()=>[h])),_:1}),w,e(J,{showAction:!1},{default:t((()=>[F])),_:1}),V,e(J,{showAction:!1},{default:t((()=>[O])),_:1}),v,e(J,{showAction:!1},{default:t((()=>[S])),_:1}),A,e(J,{showAction:!1},{default:t((()=>[T])),_:1}),x,P,C,e(J,{showAction:!1},{default:t((()=>[I])),_:1}),N,e(J,{showAction:!1},{default:t((()=>[E])),_:1}),R,e(J,{showAction:!1},{default:t((()=>[D])),_:1})])}]]);export{u as __pageData,J as default};
