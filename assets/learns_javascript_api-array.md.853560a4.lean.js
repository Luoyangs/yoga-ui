import{_ as n,r as s,c as a,a as t,w as o,f as e,e as c,b as p,o as l}from"./app.82084a0b.js";const u='{"title":"重学之JavaScript Array所有API全解密","description":"","frontmatter":{},"headers":[{"level":2,"title":"Array构造器","slug":"array构造器"},{"level":2,"title":"ES6新增的构造函数方法","slug":"es6新增的构造函数方法"},{"level":3,"title":"Array.of","slug":"array-of"},{"level":3,"title":"Array.from","slug":"array-from"},{"level":2,"title":"Array.isArray","slug":"array-isarray"},{"level":2,"title":"原型","slug":"原型"},{"level":2,"title":"方法","slug":"方法"},{"level":2,"title":"改变自身值的方法(9个)","slug":"改变自身值的方法-9个"},{"level":3,"title":"pop","slug":"pop"},{"level":3,"title":"push","slug":"push"},{"level":3,"title":"reverse","slug":"reverse"},{"level":3,"title":"shift","slug":"shift"},{"level":3,"title":"sort","slug":"sort"},{"level":3,"title":"splice","slug":"splice"},{"level":3,"title":"unshift","slug":"unshift"},{"level":3,"title":"copyWithin(ES6)","slug":"copywithin-es6"},{"level":3,"title":"fill(ES6)","slug":"fill-es6"},{"level":2,"title":"不会改变自身的方法(9个)","slug":"不会改变自身的方法-9个"},{"level":3,"title":"concat","slug":"concat"},{"level":3,"title":"join","slug":"join"},{"level":3,"title":"slice","slug":"slice"},{"level":3,"title":"toString","slug":"tostring"},{"level":3,"title":"toLocaleString","slug":"tolocalestring"},{"level":3,"title":"indexOf","slug":"indexof"},{"level":3,"title":"lastIndexOf","slug":"lastindexof"},{"level":3,"title":"includes(ES7)","slug":"includes-es7"},{"level":3,"title":"toSource(非标准)","slug":"tosource-非标准"},{"level":2,"title":"遍历方法(12个)","slug":"遍历方法-12个"},{"level":3,"title":"forEach","slug":"foreach"},{"level":3,"title":"every","slug":"every"},{"level":3,"title":"some","slug":"some"},{"level":3,"title":"filter","slug":"filter"},{"level":3,"title":"map","slug":"map"},{"level":3,"title":"reduce","slug":"reduce"},{"level":3,"title":"reduceRight","slug":"reduceright"},{"level":3,"title":"entries(ES6)","slug":"entries-es6"},{"level":3,"title":"find&findIndex(ES6)","slug":"find-findindex-es6"},{"level":3,"title":"keys(ES6)","slug":"keys-es6"},{"level":3,"title":"values(ES6)","slug":"values-es6"},{"level":3,"title":"Symbol.iterator(ES6)","slug":"symbol-iterator-es6"},{"level":2,"title":"小结","slug":"小结"}],"relativePath":"learns/javascript/api-array.md","lastUpdated":1638452551944}',r={},i=e('',6),k=c("div",{class:"language-js line-numbers-mode"},[c("pre",null,[c("code",null,[c("span",{class:"token comment"},"// 使用Array构造器"),p("\n"),c("span",{class:"token keyword"},"var"),p(" a "),c("span",{class:"token operator"},"="),p(),c("span",{class:"token function"},"Array"),c("span",{class:"token punctuation"},"("),c("span",{class:"token number"},"8"),c("span",{class:"token punctuation"},")"),c("span",{class:"token punctuation"},";"),p(),c("span",{class:"token comment"},"// [undefined × 8]"),p("\n"),c("span",{class:"token comment"},"// 使用对象字面量"),p("\n"),c("span",{class:"token keyword"},"var"),p(" b "),c("span",{class:"token operator"},"="),p(),c("span",{class:"token punctuation"},"["),c("span",{class:"token punctuation"},"]"),c("span",{class:"token punctuation"},";"),p("\nb"),c("span",{class:"token punctuation"},"."),p("length "),c("span",{class:"token operator"},"="),p(),c("span",{class:"token number"},"8"),c("span",{class:"token punctuation"},";"),p(),c("span",{class:"token comment"},"// [undefined × 8]"),p("\n")])]),c("div",{class:"line-numbers-wrapper"},[c("span",{class:"line-number"},"1"),c("br"),c("span",{class:"line-number"},"2"),c("br"),c("span",{class:"line-number"},"3"),c("br"),c("span",{class:"line-number"},"4"),c("br"),c("span",{class:"line-number"},"5"),c("br")])],-1),b=c("p",null,"Array构造器明显要简洁一些，当然你也许会说，对象字面量也不错啊，那么我保持沉默。",-1),m=c("p",null,"如上，我使用了Array(8)而不是new Array(8)，这会有影响吗？实际上，并没有影响，这得益于Array构造器内部对this指针的判断，ELS5_HTML规范是这么说的：",-1),d=c("blockquote",null,[c("p",null,"When Array is called as a function rather than as a constructor, it creates and initialises a new Array object. Thus the function call Array(…) is equivalent to the object creation expression new Array(…) with the same arguments.")],-1),f=c("p",null,"从规范来看，浏览器内部大致做了如下类似的实现：",-1),g=c("div",{class:"language-js line-numbers-mode"},[c("pre",null,[c("code",null,[c("span",{class:"token keyword"},"function"),p(),c("span",{class:"token function"},"Array"),c("span",{class:"token punctuation"},"("),c("span",{class:"token punctuation"},")"),c("span",{class:"token punctuation"},"{"),p("\n  "),c("span",{class:"token comment"},"// 如果this不是Array的实例，那就重新new一个实例"),p("\n  "),c("span",{class:"token keyword"},"if"),c("span",{class:"token punctuation"},"("),c("span",{class:"token operator"},"!"),c("span",{class:"token punctuation"},"("),c("span",{class:"token keyword"},"this"),p(),c("span",{class:"token keyword"},"instanceof"),p(),c("span",{class:"token class-name"},[p("arguments"),c("span",{class:"token punctuation"},"."),p("callee")]),c("span",{class:"token punctuation"},")"),c("span",{class:"token punctuation"},")"),c("span",{class:"token punctuation"},"{"),p("\n    "),c("span",{class:"token keyword"},"return"),p(),c("span",{class:"token keyword"},"new"),p(),c("span",{class:"token class-name"},[p("arguments"),c("span",{class:"token punctuation"},"."),p("callee")]),c("span",{class:"token punctuation"},"("),c("span",{class:"token punctuation"},")"),c("span",{class:"token punctuation"},";"),p("\n  "),c("span",{class:"token punctuation"},"}"),p("\n"),c("span",{class:"token punctuation"},"}"),p("\n")])]),c("div",{class:"line-numbers-wrapper"},[c("span",{class:"line-number"},"1"),c("br"),c("span",{class:"line-number"},"2"),c("br"),c("span",{class:"line-number"},"3"),c("br"),c("span",{class:"line-number"},"4"),c("br"),c("span",{class:"line-number"},"5"),c("br"),c("span",{class:"line-number"},"6"),c("br")])],-1),y=c("ul",null,[c("li",null,"new Array(arg1, arg2,…)，参数长度为0或长度大于等于2时，传入的参数将按照顺序依次成为新数组的第0至N项（参数长度为0时，返回空数组）。"),c("li",null,"new Array(len)，当len不是数值时，处理同上，返回一个只包含len元素一项的数组；当len为数值时，根据如下规范，len最大不能超过32位无符号整型，即需要小于2的32次方（len最大为Math.pow(2,32) -1或-1>>>0），否则将抛出RangeError。")],-1),h=c("h2",{id:"es6新增的构造函数方法",tabindex:"-1"},[p("ES6新增的构造函数方法 "),c("a",{class:"header-anchor",href:"#es6新增的构造函数方法","aria-hidden":"true"},"#")],-1),v=c("p",null,"鉴于数组的常用性，ES6专门扩展了数组构造器Array ，新增2个方法：Array.of、Array.from。下面展开来聊。",-1),w=c("h3",{id:"array-of",tabindex:"-1"},[p("Array.of "),c("a",{class:"header-anchor",href:"#array-of","aria-hidden":"true"},"#")],-1),A=c("p",null,"Array.of用于将参数依次转化为数组中的一项，然后返回这个新数组，而不管这个参数是数字还是其它。它基本上与Array构造器功能一致，唯一的区别就在单个数字参数的处理上。如下",-1),_=c("div",{class:"language-js line-numbers-mode"},[c("pre",null,[c("code",null,[p("Array"),c("span",{class:"token punctuation"},"."),c("span",{class:"token function"},"of"),c("span",{class:"token punctuation"},"("),c("span",{class:"token number"},"8.0"),c("span",{class:"token punctuation"},")"),c("span",{class:"token punctuation"},";"),p(),c("span",{class:"token comment"},"// [8]"),p("\n"),c("span",{class:"token function"},"Array"),c("span",{class:"token punctuation"},"("),c("span",{class:"token number"},"8.0"),c("span",{class:"token punctuation"},")"),c("span",{class:"token punctuation"},";"),p(),c("span",{class:"token comment"},"// [undefined × 8]"),p("\n")])]),c("div",{class:"line-numbers-wrapper"},[c("span",{class:"line-number"},"1"),c("br"),c("span",{class:"line-number"},"2"),c("br")])],-1),j=c("p",null,"参数为多个，或单个参数不是数字时，Array.of 与 Array构造器等同。",-1),S=c("div",{class:"language-js line-numbers-mode"},[c("pre",null,[c("code",null,[p("Array"),c("span",{class:"token punctuation"},"."),c("span",{class:"token function"},"of"),c("span",{class:"token punctuation"},"("),c("span",{class:"token number"},"8.0"),c("span",{class:"token punctuation"},","),p(),c("span",{class:"token number"},"5"),c("span",{class:"token punctuation"},")"),c("span",{class:"token punctuation"},";"),p(),c("span",{class:"token comment"},"// [8, 5]"),p("\n"),c("span",{class:"token function"},"Array"),c("span",{class:"token punctuation"},"("),c("span",{class:"token number"},"8.0"),c("span",{class:"token punctuation"},","),p(),c("span",{class:"token number"},"5"),c("span",{class:"token punctuation"},")"),c("span",{class:"token punctuation"},";"),p(),c("span",{class:"token comment"},"// [8, 5]"),p("\n\nArray"),c("span",{class:"token punctuation"},"."),c("span",{class:"token function"},"of"),c("span",{class:"token punctuation"},"("),c("span",{class:"token string"},"'8'"),c("span",{class:"token punctuation"},")"),c("span",{class:"token punctuation"},";"),p(),c("span",{class:"token comment"},'// ["8"]'),p("\n"),c("span",{class:"token function"},"Array"),c("span",{class:"token punctuation"},"("),c("span",{class:"token string"},"'8'"),c("span",{class:"token punctuation"},")"),c("span",{class:"token punctuation"},";"),p(),c("span",{class:"token comment"},'// ["8"]'),p("\n")])]),c("div",{class:"line-numbers-wrapper"},[c("span",{class:"line-number"},"1"),c("br"),c("span",{class:"line-number"},"2"),c("br"),c("span",{class:"line-number"},"3"),c("br"),c("span",{class:"line-number"},"4"),c("br"),c("span",{class:"line-number"},"5"),c("br")])],-1),x=e("",3),E=c("div",{class:"language-js line-numbers-mode"},[c("pre",null,[c("code",null,[c("span",{class:"token keyword"},"if"),p(),c("span",{class:"token punctuation"},"("),c("span",{class:"token operator"},"!"),p("Array"),c("span",{class:"token punctuation"},"."),p("of"),c("span",{class:"token punctuation"},")"),c("span",{class:"token punctuation"},"{"),p("\n  Array"),c("span",{class:"token punctuation"},"."),c("span",{class:"token function-variable function"},"of"),p(),c("span",{class:"token operator"},"="),p(),c("span",{class:"token keyword"},"function"),c("span",{class:"token punctuation"},"("),c("span",{class:"token punctuation"},")"),c("span",{class:"token punctuation"},"{"),p("\n    "),c("span",{class:"token keyword"},"return"),p(),c("span",{class:"token class-name"},"Array"),c("span",{class:"token punctuation"},"."),p("prototype"),c("span",{class:"token punctuation"},"."),c("span",{class:"token function"},"slice"),c("span",{class:"token punctuation"},"."),c("span",{class:"token function"},"call"),c("span",{class:"token punctuation"},"("),p("arguments"),c("span",{class:"token punctuation"},")"),c("span",{class:"token punctuation"},";"),p("\n  "),c("span",{class:"token punctuation"},"}"),c("span",{class:"token punctuation"},";"),p("\n"),c("span",{class:"token punctuation"},"}"),p("\n")])]),c("div",{class:"line-numbers-wrapper"},[c("span",{class:"line-number"},"1"),c("br"),c("span",{class:"line-number"},"2"),c("br"),c("span",{class:"line-number"},"3"),c("br"),c("span",{class:"line-number"},"4"),c("br"),c("span",{class:"line-number"},"5"),c("br")])],-1),O=c("h3",{id:"array-from",tabindex:"-1"},[p("Array.from "),c("a",{class:"header-anchor",href:"#array-from","aria-hidden":"true"},"#")],-1),I=c("p",null,"语法：Array.from(arrayLike[, processingFn[, thisArg]])",-1),T=c("p",null,"Array.from的设计初衷是快速便捷的基于其他对象创建新数组，准确来说就是从一个类似数组的可迭代对象创建一个新的数组实例，说人话就是，只要一个对象有迭代器，Array.from就能把它变成一个数组（当然，是返回新的数组，不改变原对象）。",-1),C=c("p",null,"从语法上看，Array.from拥有3个形参",-1),P=c("ul",null,[c("li",null,"第一个为类似数组的对象，必选。"),c("li",null,"第二个为加工函数，新生成的数组会经过该函数的加工再返回。"),c("li",null,"第三个为this作用域，表示加工函数执行时this的值。后两个参数都是可选的。我们来看看用法。")],-1),V=c("div",{class:"language-js line-numbers-mode"},[c("pre",null,[c("code",null,[c("span",{class:"token keyword"},"var"),p(" obj "),c("span",{class:"token operator"},"="),p(),c("span",{class:"token punctuation"},"{"),c("span",{class:"token number"},"0"),c("span",{class:"token operator"},":"),p(),c("span",{class:"token string"},"'a'"),c("span",{class:"token punctuation"},","),p(),c("span",{class:"token number"},"1"),c("span",{class:"token operator"},":"),p(),c("span",{class:"token string"},"'b'"),c("span",{class:"token punctuation"},","),p(),c("span",{class:"token number"},"2"),c("span",{class:"token operator"},":"),c("span",{class:"token string"},"'c'"),c("span",{class:"token punctuation"},","),p(" length"),c("span",{class:"token operator"},":"),p(),c("span",{class:"token number"},"3"),c("span",{class:"token punctuation"},"}"),c("span",{class:"token punctuation"},";"),p("\nArray"),c("span",{class:"token punctuation"},"."),c("span",{class:"token function"},"from"),c("span",{class:"token punctuation"},"("),p("obj"),c("span",{class:"token punctuation"},","),p(),c("span",{class:"token keyword"},"function"),c("span",{class:"token punctuation"},"("),c("span",{class:"token parameter"},[p("value"),c("span",{class:"token punctuation"},","),p(" index")]),c("span",{class:"token punctuation"},")"),c("span",{class:"token punctuation"},"{"),p("\n  console"),c("span",{class:"token punctuation"},"."),c("span",{class:"token function"},"log"),c("span",{class:"token punctuation"},"("),p("value"),c("span",{class:"token punctuation"},","),p(" index"),c("span",{class:"token punctuation"},","),p(),c("span",{class:"token keyword"},"this"),c("span",{class:"token punctuation"},","),p(" arguments"),c("span",{class:"token punctuation"},"."),p("length"),c("span",{class:"token punctuation"},")"),c("span",{class:"token punctuation"},";"),p("\n  "),c("span",{class:"token keyword"},"return"),p(" value"),c("span",{class:"token punctuation"},"."),c("span",{class:"token function"},"repeat"),c("span",{class:"token punctuation"},"("),c("span",{class:"token number"},"3"),c("span",{class:"token punctuation"},")"),c("span",{class:"token punctuation"},";"),p(),c("span",{class:"token comment"},"//必须指定返回值，否则返回undefined"),p("\n"),c("span",{class:"token punctuation"},"}"),c("span",{class:"token punctuation"},","),p(" obj"),c("span",{class:"token punctuation"},")"),c("span",{class:"token punctuation"},";"),p("\n")])]),c("div",{class:"line-numbers-wrapper"},[c("span",{class:"line-number"},"1"),c("br"),c("span",{class:"line-number"},"2"),c("br"),c("span",{class:"line-number"},"3"),c("br"),c("span",{class:"line-number"},"4"),c("br"),c("span",{class:"line-number"},"5"),c("br")])],-1),q=c("p",null,"可以看到加工函数的this作用域被obj对象取代，也可以看到加工函数默认拥有两个形参，分别为迭代器当前元素的值和其索引。",-1),L=c("p",null,"注意，一旦使用加工函数，必须明确指定返回值，否则将隐式返回undefined，最终生成的数组也会变成一个只包含若干个undefined元素的空数组。",-1),N=c("p",null,"实际上，如果不需要指定this，加工函数完全可以是一个箭头函数。上述代码可以简化如下：",-1),M=c("div",{class:"language-js line-numbers-mode"},[c("pre",null,[c("code",null,[p("Array"),c("span",{class:"token punctuation"},"."),c("span",{class:"token function"},"from"),c("span",{class:"token punctuation"},"("),p("obj"),c("span",{class:"token punctuation"},","),p(),c("span",{class:"token punctuation"},"("),c("span",{class:"token parameter"},"value"),c("span",{class:"token punctuation"},")"),p(),c("span",{class:"token operator"},"=>"),p(" value"),c("span",{class:"token punctuation"},"."),c("span",{class:"token function"},"repeat"),c("span",{class:"token punctuation"},"("),c("span",{class:"token number"},"3"),c("span",{class:"token punctuation"},")"),c("span",{class:"token punctuation"},")"),c("span",{class:"token punctuation"},";"),p("\n")])]),c("div",{class:"line-numbers-wrapper"},[c("span",{class:"line-number"},"1"),c("br")])],-1),W=c("p",null,"除了上述obj对象以外，拥有迭代器的对象还包括这些：String，Set，Map，arguments 等，Array.from统统可以处理。如下所示：",-1),R=c("div",{class:"language-js line-numbers-mode"},[c("pre",null,[c("code",null,[c("span",{class:"token comment"},"// String"),p("\nArray"),c("span",{class:"token punctuation"},"."),c("span",{class:"token function"},"from"),c("span",{class:"token punctuation"},"("),c("span",{class:"token string"},"'abc'"),c("span",{class:"token punctuation"},")"),c("span",{class:"token punctuation"},";"),p(),c("span",{class:"token comment"},'// ["a", "b", "c"]'),p("\n"),c("span",{class:"token comment"},"// Set"),p("\nArray"),c("span",{class:"token punctuation"},"."),c("span",{class:"token function"},"from"),c("span",{class:"token punctuation"},"("),c("span",{class:"token keyword"},"new"),p(),c("span",{class:"token class-name"},"Set"),c("span",{class:"token punctuation"},"("),c("span",{class:"token punctuation"},"["),c("span",{class:"token string"},"'abc'"),c("span",{class:"token punctuation"},","),p(),c("span",{class:"token string"},"'def'"),c("span",{class:"token punctuation"},"]"),c("span",{class:"token punctuation"},")"),c("span",{class:"token punctuation"},")"),c("span",{class:"token punctuation"},";"),p(),c("span",{class:"token comment"},'// ["abc", "def"]'),p("\n"),c("span",{class:"token comment"},"// Map"),p("\nArray"),c("span",{class:"token punctuation"},"."),c("span",{class:"token function"},"from"),c("span",{class:"token punctuation"},"("),c("span",{class:"token keyword"},"new"),p(),c("span",{class:"token class-name"},"Map"),c("span",{class:"token punctuation"},"("),c("span",{class:"token punctuation"},"["),c("span",{class:"token punctuation"},"["),c("span",{class:"token number"},"1"),c("span",{class:"token punctuation"},","),p(),c("span",{class:"token string"},"'abc'"),c("span",{class:"token punctuation"},"]"),c("span",{class:"token punctuation"},","),p(),c("span",{class:"token punctuation"},"["),c("span",{class:"token number"},"2"),c("span",{class:"token punctuation"},","),p(),c("span",{class:"token string"},"'def'"),c("span",{class:"token punctuation"},"]"),c("span",{class:"token punctuation"},"]"),c("span",{class:"token punctuation"},")"),c("span",{class:"token punctuation"},")"),c("span",{class:"token punctuation"},";"),p(),c("span",{class:"token comment"},"// [[1"),p("\n"),c("span",{class:"token punctuation"},","),p(),c("span",{class:"token string"},"'abc'"),c("span",{class:"token punctuation"},"]"),c("span",{class:"token punctuation"},","),p(),c("span",{class:"token punctuation"},"["),c("span",{class:"token number"},"2"),c("span",{class:"token punctuation"},","),p(),c("span",{class:"token string"},"'def'"),c("span",{class:"token punctuation"},"]"),c("span",{class:"token punctuation"},"]"),p("\n"),c("span",{class:"token comment"},"// 天生的类数组对象arguments"),p("\n"),c("span",{class:"token keyword"},"function"),p(),c("span",{class:"token function"},"fn"),c("span",{class:"token punctuation"},"("),c("span",{class:"token punctuation"},")"),c("span",{class:"token punctuation"},"{"),p("\n  "),c("span",{class:"token keyword"},"return"),p(" Array"),c("span",{class:"token punctuation"},"."),c("span",{class:"token function"},"from"),c("span",{class:"token punctuation"},"("),p("arguments"),c("span",{class:"token punctuation"},")"),c("span",{class:"token punctuation"},";"),p("\n"),c("span",{class:"token punctuation"},"}"),p("\n"),c("span",{class:"token function"},"fn"),c("span",{class:"token punctuation"},"("),c("span",{class:"token number"},"1"),c("span",{class:"token punctuation"},","),p(),c("span",{class:"token number"},"2"),c("span",{class:"token punctuation"},","),p(),c("span",{class:"token number"},"3"),c("span",{class:"token punctuation"},")"),c("span",{class:"token punctuation"},";"),p(),c("span",{class:"token comment"},"// [1, 2, 3]"),p("\n")])]),c("div",{class:"line-numbers-wrapper"},[c("span",{class:"line-number"},"1"),c("br"),c("span",{class:"line-number"},"2"),c("br"),c("span",{class:"line-number"},"3"),c("br"),c("span",{class:"line-number"},"4"),c("br"),c("span",{class:"line-number"},"5"),c("br"),c("span",{class:"line-number"},"6"),c("br"),c("span",{class:"line-number"},"7"),c("br"),c("span",{class:"line-number"},"8"),c("br"),c("span",{class:"line-number"},"9"),c("br"),c("span",{class:"line-number"},"10"),c("br"),c("span",{class:"line-number"},"11"),c("br"),c("span",{class:"line-number"},"12"),c("br")])],-1),D=c("p",null,"到这你可能以为Array.from就讲完了，实际上还有一个重要的扩展场景必须提下。比如说生成一个从0到指定数字的新数组，Array.from就可以轻易的做到。",-1),F=c("div",{class:"language-js line-numbers-mode"},[c("pre",null,[c("code",null,[p("Array"),c("span",{class:"token punctuation"},"."),c("span",{class:"token function"},"from"),c("span",{class:"token punctuation"},"("),c("span",{class:"token punctuation"},"{"),p("length"),c("span",{class:"token operator"},":"),p(),c("span",{class:"token number"},"10"),c("span",{class:"token punctuation"},"}"),c("span",{class:"token punctuation"},","),p(),c("span",{class:"token punctuation"},"("),c("span",{class:"token parameter"},[p("v"),c("span",{class:"token punctuation"},","),p(" i")]),c("span",{class:"token punctuation"},")"),p(),c("span",{class:"token operator"},"=>"),p(" i"),c("span",{class:"token punctuation"},")"),c("span",{class:"token punctuation"},";"),p(),c("span",{class:"token comment"},"// [0, 1, 2, 3, 4, 5, 6, 7, 8, 9]"),p("\n")])]),c("div",{class:"line-numbers-wrapper"},[c("span",{class:"line-number"},"1"),c("br")])],-1),J=e('',4),z=c("div",{class:"language-js line-numbers-mode"},[c("pre",null,[c("code",null,[c("span",{class:"token keyword"},"var"),p(" a "),c("span",{class:"token operator"},"="),p(),c("span",{class:"token punctuation"},"["),c("span",{class:"token punctuation"},"]"),c("span",{class:"token punctuation"},";"),p("\n"),c("span",{class:"token comment"},"// 1.基于instanceof"),p("\na "),c("span",{class:"token keyword"},"instanceof"),p(),c("span",{class:"token class-name"},"Array"),c("span",{class:"token punctuation"},";"),p("\n"),c("span",{class:"token comment"},"// 2.基于constructor"),p("\na"),c("span",{class:"token punctuation"},"."),p("constructor "),c("span",{class:"token operator"},"==="),p(" Array"),c("span",{class:"token punctuation"},";"),p("\n"),c("span",{class:"token comment"},"// 3.基于Object.prototype.isPrototypeOf"),p("\n"),c("span",{class:"token class-name"},"Array"),c("span",{class:"token punctuation"},"."),p("prototype"),c("span",{class:"token punctuation"},"."),c("span",{class:"token function"},"isPrototypeOf"),c("span",{class:"token punctuation"},"("),p("a"),c("span",{class:"token punctuation"},")"),c("span",{class:"token punctuation"},";"),p("\n"),c("span",{class:"token comment"},"// 4.基于getPrototypeOf"),p("\nObject"),c("span",{class:"token punctuation"},"."),c("span",{class:"token function"},"getPrototypeOf"),c("span",{class:"token punctuation"},"("),p("a"),c("span",{class:"token punctuation"},")"),p(),c("span",{class:"token operator"},"==="),p(),c("span",{class:"token class-name"},"Array"),c("span",{class:"token punctuation"},"."),p("prototype"),c("span",{class:"token punctuation"},";"),p("\n"),c("span",{class:"token comment"},"// 5.基于Object.prototype.toString"),p("\n"),c("span",{class:"token class-name"},"Object"),c("span",{class:"token punctuation"},"."),p("prototype"),c("span",{class:"token punctuation"},"."),c("span",{class:"token function"},"toString"),c("span",{class:"token punctuation"},"."),c("span",{class:"token function"},"apply"),c("span",{class:"token punctuation"},"("),p("a"),c("span",{class:"token punctuation"},")"),p(),c("span",{class:"token operator"},"==="),p(),c("span",{class:"token string"},"'[object Array]'"),c("span",{class:"token punctuation"},";"),p("\n")])]),c("div",{class:"line-numbers-wrapper"},[c("span",{class:"line-number"},"1"),c("br"),c("span",{class:"line-number"},"2"),c("br"),c("span",{class:"line-number"},"3"),c("br"),c("span",{class:"line-number"},"4"),c("br"),c("span",{class:"line-number"},"5"),c("br"),c("span",{class:"line-number"},"6"),c("br"),c("span",{class:"line-number"},"7"),c("br"),c("span",{class:"line-number"},"8"),c("br"),c("span",{class:"line-number"},"9"),c("br"),c("span",{class:"line-number"},"10"),c("br"),c("span",{class:"line-number"},"11"),c("br")])],-1),B=c("p",null,"以上，除了Object.prototype.toString外，其它方法都不能正确判断变量的类型。要知道，代码的运行环境十分复杂，一个变量可能使用浑身解数去迷惑它的创造者。且看：",-1),K=c("div",{class:"language-js line-numbers-mode"},[c("pre",null,[c("code",null,[c("span",{class:"token keyword"},"var"),p(" a "),c("span",{class:"token operator"},"="),p(),c("span",{class:"token punctuation"},"{"),p("\n  __proto__"),c("span",{class:"token operator"},":"),p(),c("span",{class:"token class-name"},"Array"),c("span",{class:"token punctuation"},"."),p("prototype\n"),c("span",{class:"token punctuation"},"}"),c("span",{class:"token punctuation"},";"),p("\n"),c("span",{class:"token comment"},"// 分别在控制台试运行以下代码"),p("\n"),c("span",{class:"token comment"},"// 1.基于instanceof"),p("\na "),c("span",{class:"token keyword"},"instanceof"),p(),c("span",{class:"token class-name"},"Array"),c("span",{class:"token punctuation"},";"),p(),c("span",{class:"token comment"},"// true"),p("\n"),c("span",{class:"token comment"},"// 2.基于constructor"),p("\na"),c("span",{class:"token punctuation"},"."),p("constructor "),c("span",{class:"token operator"},"==="),p(" Array"),c("span",{class:"token punctuation"},";"),p(),c("span",{class:"token comment"},"// true"),p("\n"),c("span",{class:"token comment"},"// 3.基于Object.prototype.isPrototypeOf"),p("\n"),c("span",{class:"token class-name"},"Array"),c("span",{class:"token punctuation"},"."),p("prototype"),c("span",{class:"token punctuation"},"."),c("span",{class:"token function"},"isPrototypeOf"),c("span",{class:"token punctuation"},"("),p("a"),c("span",{class:"token punctuation"},")"),c("span",{class:"token punctuation"},";"),p(),c("span",{class:"token comment"},"// true"),p("\n"),c("span",{class:"token comment"},"// 4.基于getPrototypeOf"),p("\nObject"),c("span",{class:"token punctuation"},"."),c("span",{class:"token function"},"getPrototypeOf"),c("span",{class:"token punctuation"},"("),p("a"),c("span",{class:"token punctuation"},")"),p(),c("span",{class:"token operator"},"==="),p(),c("span",{class:"token class-name"},"Array"),c("span",{class:"token punctuation"},"."),p("prototype"),c("span",{class:"token punctuation"},";"),p(),c("span",{class:"token comment"},"// true"),p("\n")])]),c("div",{class:"line-numbers-wrapper"},[c("span",{class:"line-number"},"1"),c("br"),c("span",{class:"line-number"},"2"),c("br"),c("span",{class:"line-number"},"3"),c("br"),c("span",{class:"line-number"},"4"),c("br"),c("span",{class:"line-number"},"5"),c("br"),c("span",{class:"line-number"},"6"),c("br"),c("span",{class:"line-number"},"7"),c("br"),c("span",{class:"line-number"},"8"),c("br"),c("span",{class:"line-number"},"9"),c("br"),c("span",{class:"line-number"},"10"),c("br"),c("span",{class:"line-number"},"11"),c("br"),c("span",{class:"line-number"},"12"),c("br")])],-1),G=c("p",null,"以上，4种方法将全部返回true，为什么呢？我们只是手动指定了某个对象的__proto__属性为Array.prototype，便导致了该对象继承了Array对象，这种毫不负责任的继承方式，使得基于继承的判断方案瞬间土崩瓦解。",-1),H=c("blockquote",null,[c("p",null,"不仅如此，我们还知道，Array是堆数据，变量指向的只是它的引用地址，因此每个页面的Array对象引用的地址都是不一样的。iframe中声明的数组，它的构造函数是iframe中的Array对象。如果在iframe声明了一个数组x，将其赋值给父页面的变量y，那么在父页面使用y instanceof Array ，结果一定是false的。\b而最后一种返回的是字符串，不会存在引用问题。实际上，多页面或系统之间的交互只有字符串能够畅行无阻。")],-1),U=c("p",null,"相反，使用Array.isArray则非常简单，如下：",-1),Q=c("div",{class:"language-js line-numbers-mode"},[c("pre",null,[c("code",null,[p("Array"),c("span",{class:"token punctuation"},"."),c("span",{class:"token function"},"isArray"),c("span",{class:"token punctuation"},"("),c("span",{class:"token punctuation"},"["),c("span",{class:"token punctuation"},"]"),c("span",{class:"token punctuation"},")"),c("span",{class:"token punctuation"},";"),p(),c("span",{class:"token comment"},"// true"),p("\nArray"),c("span",{class:"token punctuation"},"."),c("span",{class:"token function"},"isArray"),c("span",{class:"token punctuation"},"("),c("span",{class:"token punctuation"},"{"),c("span",{class:"token number"},"0"),c("span",{class:"token operator"},":"),p(),c("span",{class:"token string"},"'a'"),c("span",{class:"token punctuation"},","),p(" length"),c("span",{class:"token operator"},":"),p(),c("span",{class:"token number"},"1"),c("span",{class:"token punctuation"},"}"),c("span",{class:"token punctuation"},")"),c("span",{class:"token punctuation"},";"),p(),c("span",{class:"token comment"},"// false"),p("\n")])]),c("div",{class:"line-numbers-wrapper"},[c("span",{class:"line-number"},"1"),c("br"),c("span",{class:"line-number"},"2"),c("br")])],-1),X=e("",2),Y=c("div",{class:"language-js line-numbers-mode"},[c("pre",null,[c("code",null,[c("span",{class:"token keyword"},"if"),p(),c("span",{class:"token punctuation"},"("),c("span",{class:"token operator"},"!"),p("Array"),c("span",{class:"token punctuation"},"."),p("isArray"),c("span",{class:"token punctuation"},")"),c("span",{class:"token punctuation"},"{"),p("\n  Array"),c("span",{class:"token punctuation"},"."),c("span",{class:"token function-variable function"},"isArray"),p(),c("span",{class:"token operator"},"="),p(),c("span",{class:"token keyword"},"function"),c("span",{class:"token punctuation"},"("),c("span",{class:"token parameter"},"arg"),c("span",{class:"token punctuation"},")"),c("span",{class:"token punctuation"},"{"),p("\n    "),c("span",{class:"token keyword"},"return"),p(),c("span",{class:"token class-name"},"Object"),c("span",{class:"token punctuation"},"."),p("prototype"),c("span",{class:"token punctuation"},"."),c("span",{class:"token function"},"toString"),c("span",{class:"token punctuation"},"."),c("span",{class:"token function"},"call"),c("span",{class:"token punctuation"},"("),p("arg"),c("span",{class:"token punctuation"},")"),p(),c("span",{class:"token operator"},"==="),p(),c("span",{class:"token string"},"'[object Array]'"),c("span",{class:"token punctuation"},";"),p("\n  "),c("span",{class:"token punctuation"},"}"),c("span",{class:"token punctuation"},";"),p("\n"),c("span",{class:"token punctuation"},"}"),p("\n")])]),c("div",{class:"line-numbers-wrapper"},[c("span",{class:"line-number"},"1"),c("br"),c("span",{class:"line-number"},"2"),c("br"),c("span",{class:"line-number"},"3"),c("br"),c("span",{class:"line-number"},"4"),c("br"),c("span",{class:"line-number"},"5"),c("br")])],-1),Z=c("h2",{id:"原型",tabindex:"-1"},[p("原型 "),c("a",{class:"header-anchor",href:"#原型","aria-hidden":"true"},"#")],-1),$=c("p",null,"继承的常识告诉我们，js中所有的数组方法均来自于Array.prototype，和其他构造函数一样，你可以通过扩展 Array 的 prototype 属性上的方法来给所有数组实例增加方法。",-1),nn=c("blockquote",null,[c("p",null,"值得一说的是，Array.prototype本身就是一个数组。")],-1),sn=c("div",{class:"language-js line-numbers-mode"},[c("pre",null,[c("code",null,[p("Array"),c("span",{class:"token punctuation"},"."),c("span",{class:"token function"},"isArray"),c("span",{class:"token punctuation"},"("),c("span",{class:"token class-name"},"Array"),c("span",{class:"token punctuation"},"."),p("prototype"),c("span",{class:"token punctuation"},")"),c("span",{class:"token punctuation"},";"),p(),c("span",{class:"token comment"},"// true"),p("\nconsole"),c("span",{class:"token punctuation"},"."),c("span",{class:"token function"},"log"),c("span",{class:"token punctuation"},"("),c("span",{class:"token class-name"},"Array"),c("span",{class:"token punctuation"},"."),p("prototype"),c("span",{class:"token punctuation"},"."),p("length"),c("span",{class:"token punctuation"},")"),c("span",{class:"token punctuation"},";"),c("span",{class:"token comment"},"// 0"),p("\n\nconsole"),c("span",{class:"token punctuation"},"."),c("span",{class:"token function"},"log"),c("span",{class:"token punctuation"},"("),c("span",{class:"token punctuation"},"["),c("span",{class:"token punctuation"},"]"),c("span",{class:"token punctuation"},"."),p("__proto__"),c("span",{class:"token punctuation"},"."),p("length"),c("span",{class:"token punctuation"},")"),c("span",{class:"token punctuation"},";"),c("span",{class:"token comment"},"// 0"),p("\nconsole"),c("span",{class:"token punctuation"},"."),c("span",{class:"token function"},"log"),c("span",{class:"token punctuation"},"("),c("span",{class:"token punctuation"},"["),c("span",{class:"token punctuation"},"]"),c("span",{class:"token punctuation"},"."),p("__proto__"),c("span",{class:"token punctuation"},")"),c("span",{class:"token punctuation"},";"),c("span",{class:"token comment"},"// [Symbol(Symbol.unscopables): Object]"),p("\n")])]),c("div",{class:"line-numbers-wrapper"},[c("span",{class:"line-number"},"1"),c("br"),c("span",{class:"line-number"},"2"),c("br"),c("span",{class:"line-number"},"3"),c("br"),c("span",{class:"line-number"},"4"),c("br"),c("span",{class:"line-number"},"5"),c("br")])],-1),an=c("h2",{id:"方法",tabindex:"-1"},[p("方法 "),c("a",{class:"header-anchor",href:"#方法","aria-hidden":"true"},"#")],-1),tn=c("p",null,[p("数组原型提供的方法非常之多，"),c("code",null,"主要分为三种，一种是会改变自身值的，一种是不会改变自身值的，另外一种是遍历方法"),p("。")],-1),on=c("p",null,"由于 Array.prototype 的某些属性被设置为[[DontEnum]]，因此不能用一般的方法进行遍历，我们可以通过如下方式获取 Array.prototype 的所有方法：",-1),en=c("div",{class:"language-js line-numbers-mode"},[c("pre",null,[c("code",null,[c("span",{class:"token comment"},"// Object.getOwnPropertyNames([].__proto__)"),p("\nObject"),c("span",{class:"token punctuation"},"."),c("span",{class:"token function"},"getOwnPropertyNames"),c("span",{class:"token punctuation"},"("),c("span",{class:"token class-name"},"Array"),c("span",{class:"token punctuation"},"."),p("prototype"),c("span",{class:"token punctuation"},")"),c("span",{class:"token punctuation"},";"),p(),c("span",{class:"token comment"},'// ["length", "constructor", "toString", "toLocaleString", "join", "pop", "push", "reverse", "shift", "unshift", "slice", "splice", "sort", "filter", "forEach", "some", "every", "map", "indexOf", "lastIndexOf", "reduce", "reduceRight", "copyWithin", "find", "findIndex", "fill", "includes", "entries", "keys", "concat"]'),p("\n")])]),c("div",{class:"line-numbers-wrapper"},[c("span",{class:"line-number"},"1"),c("br"),c("span",{class:"line-number"},"2"),c("br")])],-1),cn=c("h2",{id:"改变自身值的方法-9个",tabindex:"-1"},[p("改变自身值的方法(9个) "),c("a",{class:"header-anchor",href:"#改变自身值的方法-9个","aria-hidden":"true"},"#")],-1),pn=c("p",null,"基于ES6，改变自身值的方法一共有9个，分别为pop、push、reverse、shift、sort、splice、unshift，以及两个ES6新增的方法copyWithin 和 fill。",-1),ln=c("p",null,"对于能改变自身值的数组方法，日常开发中需要特别注意，尽量避免在循环遍历中去改变原数组的项。接下来，我们一起来深入地了解这些方法。",-1),un=c("h3",{id:"pop",tabindex:"-1"},[p("pop "),c("a",{class:"header-anchor",href:"#pop","aria-hidden":"true"},"#")],-1),rn=c("p",null,"pop() 方法删除一个数组中的最后的一个元素，并且返回这个元素。如果是栈的话，这个过程就是栈顶弹出。",-1),kn=c("div",{class:"language-js line-numbers-mode"},[c("pre",null,[c("code",null,[c("span",{class:"token keyword"},"var"),p(" array "),c("span",{class:"token operator"},"="),p(),c("span",{class:"token punctuation"},"["),c("span",{class:"token string"},'"cat"'),c("span",{class:"token punctuation"},","),p(),c("span",{class:"token string"},'"dog"'),c("span",{class:"token punctuation"},","),p(),c("span",{class:"token string"},'"cow"'),c("span",{class:"token punctuation"},","),p(),c("span",{class:"token string"},'"chicken"'),c("span",{class:"token punctuation"},","),p(),c("span",{class:"token string"},'"mouse"'),c("span",{class:"token punctuation"},"]"),c("span",{class:"token punctuation"},";"),p("\n"),c("span",{class:"token keyword"},"var"),p(" item "),c("span",{class:"token operator"},"="),p(" array"),c("span",{class:"token punctuation"},"."),c("span",{class:"token function"},"pop"),c("span",{class:"token punctuation"},"("),c("span",{class:"token punctuation"},")"),c("span",{class:"token punctuation"},";"),p("\nconsole"),c("span",{class:"token punctuation"},"."),c("span",{class:"token function"},"log"),c("span",{class:"token punctuation"},"("),p("array"),c("span",{class:"token punctuation"},")"),c("span",{class:"token punctuation"},";"),p(),c("span",{class:"token comment"},'// ["cat", "dog", "cow", "chicken"]'),p("\nconsole"),c("span",{class:"token punctuation"},"."),c("span",{class:"token function"},"log"),c("span",{class:"token punctuation"},"("),p("item"),c("span",{class:"token punctuation"},")"),c("span",{class:"token punctuation"},";"),p(),c("span",{class:"token comment"},"// mouse"),p("\n")])]),c("div",{class:"line-numbers-wrapper"},[c("span",{class:"line-number"},"1"),c("br"),c("span",{class:"line-number"},"2"),c("br"),c("span",{class:"line-number"},"3"),c("br"),c("span",{class:"line-number"},"4"),c("br")])],-1),bn=c("p",null,"由于设计上的巧妙，pop方法可以应用在类数组对象上，即 鸭式辨型. 如下：",-1),mn=c("div",{class:"language-js line-numbers-mode"},[c("pre",null,[c("code",null,[c("span",{class:"token keyword"},"var"),p(" o "),c("span",{class:"token operator"},"="),p(),c("span",{class:"token punctuation"},"{"),c("span",{class:"token number"},"0"),c("span",{class:"token operator"},":"),c("span",{class:"token string"},'"cat"'),c("span",{class:"token punctuation"},","),p(),c("span",{class:"token number"},"1"),c("span",{class:"token operator"},":"),c("span",{class:"token string"},'"dog"'),c("span",{class:"token punctuation"},","),p(),c("span",{class:"token number"},"2"),c("span",{class:"token operator"},":"),c("span",{class:"token string"},'"cow"'),c("span",{class:"token punctuation"},","),p(),c("span",{class:"token number"},"3"),c("span",{class:"token operator"},":"),c("span",{class:"token string"},'"chicken"'),c("span",{class:"token punctuation"},","),p(),c("span",{class:"token number"},"4"),c("span",{class:"token operator"},":"),c("span",{class:"token string"},'"mouse"'),c("span",{class:"token punctuation"},","),p(" length"),c("span",{class:"token operator"},":"),c("span",{class:"token number"},"5"),c("span",{class:"token punctuation"},"}"),p("\n"),c("span",{class:"token keyword"},"var"),p(" item "),c("span",{class:"token operator"},"="),p(),c("span",{class:"token class-name"},"Array"),c("span",{class:"token punctuation"},"."),p("prototype"),c("span",{class:"token punctuation"},"."),c("span",{class:"token function"},"pop"),c("span",{class:"token punctuation"},"."),c("span",{class:"token function"},"call"),c("span",{class:"token punctuation"},"("),p("o"),c("span",{class:"token punctuation"},")"),c("span",{class:"token punctuation"},";"),p("\nconsole"),c("span",{class:"token punctuation"},"."),c("span",{class:"token function"},"log"),c("span",{class:"token punctuation"},"("),p("o"),c("span",{class:"token punctuation"},")"),c("span",{class:"token punctuation"},";"),p(),c("span",{class:"token comment"},'// Object {0: "cat", 1: "dog", 2: "cow", 3: "chicken", length: 4}'),p("\nconsole"),c("span",{class:"token punctuation"},"."),c("span",{class:"token function"},"log"),c("span",{class:"token punctuation"},"("),p("item"),c("span",{class:"token punctuation"},")"),c("span",{class:"token punctuation"},";"),p(),c("span",{class:"token comment"},"// mouse"),p("\n")])]),c("div",{class:"line-numbers-wrapper"},[c("span",{class:"line-number"},"1"),c("br"),c("span",{class:"line-number"},"2"),c("br"),c("span",{class:"line-number"},"3"),c("br"),c("span",{class:"line-number"},"4"),c("br")])],-1),dn=c("p",null,"但如果类数组对象不具有length属性，那么该对象将被创建length属性，length值为0。如下：",-1),fn=c("div",{class:"language-js line-numbers-mode"},[c("pre",null,[c("code",null,[c("span",{class:"token keyword"},"var"),p(" o "),c("span",{class:"token operator"},"="),p(),c("span",{class:"token punctuation"},"{"),c("span",{class:"token number"},"0"),c("span",{class:"token operator"},":"),c("span",{class:"token string"},'"cat"'),c("span",{class:"token punctuation"},","),p(),c("span",{class:"token number"},"1"),c("span",{class:"token operator"},":"),c("span",{class:"token string"},'"dog"'),c("span",{class:"token punctuation"},","),p(),c("span",{class:"token number"},"2"),c("span",{class:"token operator"},":"),c("span",{class:"token string"},'"cow"'),c("span",{class:"token punctuation"},","),p(),c("span",{class:"token number"},"3"),c("span",{class:"token operator"},":"),c("span",{class:"token string"},'"chicken"'),c("span",{class:"token punctuation"},","),p(),c("span",{class:"token number"},"4"),c("span",{class:"token operator"},":"),c("span",{class:"token string"},'"mouse"'),c("span",{class:"token punctuation"},"}"),p("\n"),c("span",{class:"token keyword"},"var"),p(" item "),c("span",{class:"token operator"},"="),p(),c("span",{class:"token class-name"},"Array"),c("span",{class:"token punctuation"},"."),p("prototype"),c("span",{class:"token punctuation"},"."),c("span",{class:"token function"},"pop"),c("span",{class:"token punctuation"},"."),c("span",{class:"token function"},"call"),c("span",{class:"token punctuation"},"("),p("o"),c("span",{class:"token punctuation"},")"),c("span",{class:"token punctuation"},";"),p("\nconsole"),c("span",{class:"token punctuation"},"."),c("span",{class:"token function"},"log"),c("span",{class:"token punctuation"},"("),p("o"),c("span",{class:"token punctuation"},")"),c("span",{class:"token punctuation"},";"),p(),c("span",{class:"token comment"},'// Object {0: "cat", 1: "dog", 2: "cow", 3: "chicken", 4: "mouse", length: 0}'),p("\nconsole"),c("span",{class:"token punctuation"},"."),c("span",{class:"token function"},"log"),c("span",{class:"token punctuation"},"("),p("item"),c("span",{class:"token punctuation"},")"),c("span",{class:"token punctuation"},";"),p(),c("span",{class:"token comment"},"// undefined"),p("\n\n"),c("span",{class:"token keyword"},"var"),p(" o "),c("span",{class:"token operator"},"="),p(),c("span",{class:"token punctuation"},"{"),c("span",{class:"token number"},"0"),c("span",{class:"token operator"},":"),c("span",{class:"token string"},'"a"'),c("span",{class:"token punctuation"},","),p(),c("span",{class:"token number"},"1"),c("span",{class:"token operator"},":"),c("span",{class:"token string"},'"b"'),c("span",{class:"token punctuation"},","),p(),c("span",{class:"token number"},"2"),c("span",{class:"token operator"},":"),c("span",{class:"token string"},'"c"'),c("span",{class:"token punctuation"},","),p(" length"),c("span",{class:"token operator"},":"),c("span",{class:"token number"},"30"),c("span",{class:"token punctuation"},"}"),c("span",{class:"token punctuation"},";"),p("\n"),c("span",{class:"token keyword"},"var"),p(" item "),c("span",{class:"token operator"},"="),p(),c("span",{class:"token class-name"},"Array"),c("span",{class:"token punctuation"},"."),p("prototype"),c("span",{class:"token punctuation"},"."),c("span",{class:"token function"},"pop"),c("span",{class:"token punctuation"},"."),c("span",{class:"token function"},"call"),c("span",{class:"token punctuation"},"("),p("o"),c("span",{class:"token punctuation"},")"),c("span",{class:"token punctuation"},";"),p("\nconsole"),c("span",{class:"token punctuation"},"."),c("span",{class:"token function"},"log"),c("span",{class:"token punctuation"},"("),p("o"),c("span",{class:"token punctuation"},")"),c("span",{class:"token punctuation"},";"),p(),c("span",{class:"token comment"},'// Object {0:"a", 1:"b", 2:"c", length:29}'),p("\nconsole"),c("span",{class:"token punctuation"},"."),c("span",{class:"token function"},"log"),c("span",{class:"token punctuation"},"("),p("item"),c("span",{class:"token punctuation"},")"),c("span",{class:"token punctuation"},";"),p(),c("span",{class:"token comment"},"// undefined"),p("\n")])]),c("div",{class:"line-numbers-wrapper"},[c("span",{class:"line-number"},"1"),c("br"),c("span",{class:"line-number"},"2"),c("br"),c("span",{class:"line-number"},"3"),c("br"),c("span",{class:"line-number"},"4"),c("br"),c("span",{class:"line-number"},"5"),c("br"),c("span",{class:"line-number"},"6"),c("br"),c("span",{class:"line-number"},"7"),c("br"),c("span",{class:"line-number"},"8"),c("br"),c("span",{class:"line-number"},"9"),c("br")])],-1),gn=c("h3",{id:"push",tabindex:"-1"},[p("push "),c("a",{class:"header-anchor",href:"#push","aria-hidden":"true"},"#")],-1),yn=c("p",null,"push()方法添加一个或者多个元素到数组末尾，并且返回数组新的长度。如果是栈的话，这个过程就是栈顶压入。",-1),hn=c("p",null,"语法：arr.push(element1, …, elementN)",-1),vn=c("div",{class:"language-js line-numbers-mode"},[c("pre",null,[c("code",null,[c("span",{class:"token keyword"},"var"),p(" array "),c("span",{class:"token operator"},"="),p(),c("span",{class:"token punctuation"},"["),c("span",{class:"token string"},'"football"'),c("span",{class:"token punctuation"},","),p(),c("span",{class:"token string"},'"basketball"'),c("span",{class:"token punctuation"},","),p(),c("span",{class:"token string"},'"volleyball"'),c("span",{class:"token punctuation"},","),p(),c("span",{class:"token string"},'"Table tennis"'),c("span",{class:"token punctuation"},","),p(),c("span",{class:"token string"},'"badminton"'),c("span",{class:"token punctuation"},"]"),c("span",{class:"token punctuation"},";"),p("\n"),c("span",{class:"token keyword"},"var"),p(" i "),c("span",{class:"token operator"},"="),p(" array"),c("span",{class:"token punctuation"},"."),c("span",{class:"token function"},"push"),c("span",{class:"token punctuation"},"("),c("span",{class:"token string"},'"golfball"'),c("span",{class:"token punctuation"},")"),c("span",{class:"token punctuation"},";"),p("\nconsole"),c("span",{class:"token punctuation"},"."),c("span",{class:"token function"},"log"),c("span",{class:"token punctuation"},"("),p("array"),c("span",{class:"token punctuation"},")"),c("span",{class:"token punctuation"},";"),p(),c("span",{class:"token comment"},'// ["football", "basketball", "volleyball", "Table tennis", "badminton", "golfball"]'),p("\nconsole"),c("span",{class:"token punctuation"},"."),c("span",{class:"token function"},"log"),c("span",{class:"token punctuation"},"("),p("i"),c("span",{class:"token punctuation"},")"),c("span",{class:"token punctuation"},";"),p(),c("span",{class:"token comment"},"// 6"),p("\n")])]),c("div",{class:"line-numbers-wrapper"},[c("span",{class:"line-number"},"1"),c("br"),c("span",{class:"line-number"},"2"),c("br"),c("span",{class:"line-number"},"3"),c("br"),c("span",{class:"line-number"},"4"),c("br")])],-1),wn=c("p",null,"同pop方法一样，push方法也可以应用到类数组对象上，如果length不能被转成一个数值或者不存在length属性时，则插入的元素索引为0，且length属性不存在时，将会创建它。",-1),An=c("div",{class:"language-js line-numbers-mode"},[c("pre",null,[c("code",null,[c("span",{class:"token keyword"},"var"),p(" o "),c("span",{class:"token operator"},"="),p(),c("span",{class:"token punctuation"},"{"),c("span",{class:"token number"},"0"),c("span",{class:"token operator"},":"),c("span",{class:"token string"},'"football"'),c("span",{class:"token punctuation"},","),p(),c("span",{class:"token number"},"1"),c("span",{class:"token operator"},":"),c("span",{class:"token string"},'"basketball"'),c("span",{class:"token punctuation"},"}"),c("span",{class:"token punctuation"},";"),p("\n"),c("span",{class:"token keyword"},"var"),p(" i "),c("span",{class:"token operator"},"="),p(),c("span",{class:"token class-name"},"Array"),c("span",{class:"token punctuation"},"."),p("prototype"),c("span",{class:"token punctuation"},"."),c("span",{class:"token function"},"push"),c("span",{class:"token punctuation"},"."),c("span",{class:"token function"},"call"),c("span",{class:"token punctuation"},"("),p("o"),c("span",{class:"token punctuation"},","),p(),c("span",{class:"token string"},'"golfball"'),c("span",{class:"token punctuation"},")"),c("span",{class:"token punctuation"},";"),p("\nconsole"),c("span",{class:"token punctuation"},"."),c("span",{class:"token function"},"log"),c("span",{class:"token punctuation"},"("),p("o"),c("span",{class:"token punctuation"},")"),c("span",{class:"token punctuation"},";"),p(),c("span",{class:"token comment"},'// Object {0: "golfball", 1: "basketball", length: 1}'),p("\nconsole"),c("span",{class:"token punctuation"},"."),c("span",{class:"token function"},"log"),c("span",{class:"token punctuation"},"("),p("i"),c("span",{class:"token punctuation"},")"),c("span",{class:"token punctuation"},";"),p(),c("span",{class:"token comment"},"// 1"),p("\n")])]),c("div",{class:"line-numbers-wrapper"},[c("span",{class:"line-number"},"1"),c("br"),c("span",{class:"line-number"},"2"),c("br"),c("span",{class:"line-number"},"3"),c("br"),c("span",{class:"line-number"},"4"),c("br")])],-1),_n=c("blockquote",null,[c("p",null,"实际上，push方法是根据length属性来决定从哪里开始插入给定的值")],-1),jn=c("div",{class:"language-js line-numbers-mode"},[c("pre",null,[c("code",null,[c("span",{class:"token keyword"},"var"),p(" o "),c("span",{class:"token operator"},"="),p(),c("span",{class:"token punctuation"},"{"),c("span",{class:"token number"},"0"),c("span",{class:"token operator"},":"),c("span",{class:"token string"},'"football"'),c("span",{class:"token punctuation"},","),p(),c("span",{class:"token number"},"1"),c("span",{class:"token operator"},":"),c("span",{class:"token string"},'"basketball"'),c("span",{class:"token punctuation"},","),p("length"),c("span",{class:"token operator"},":"),c("span",{class:"token number"},"1"),c("span",{class:"token punctuation"},"}"),c("span",{class:"token punctuation"},";"),p("\n"),c("span",{class:"token keyword"},"var"),p(" i "),c("span",{class:"token operator"},"="),p(),c("span",{class:"token class-name"},"Array"),c("span",{class:"token punctuation"},"."),p("prototype"),c("span",{class:"token punctuation"},"."),c("span",{class:"token function"},"push"),c("span",{class:"token punctuation"},"."),c("span",{class:"token function"},"call"),c("span",{class:"token punctuation"},"("),p("o"),c("span",{class:"token punctuation"},","),c("span",{class:"token string"},'"golfball"'),c("span",{class:"token punctuation"},")"),c("span",{class:"token punctuation"},";"),p("\nconsole"),c("span",{class:"token punctuation"},"."),c("span",{class:"token function"},"log"),c("span",{class:"token punctuation"},"("),p("o"),c("span",{class:"token punctuation"},")"),c("span",{class:"token punctuation"},";"),p(),c("span",{class:"token comment"},'// Object {0: "football", 1: "golfball", length: 2}'),p("\nconsole"),c("span",{class:"token punctuation"},"."),c("span",{class:"token function"},"log"),c("span",{class:"token punctuation"},"("),p("i"),c("span",{class:"token punctuation"},")"),c("span",{class:"token punctuation"},";"),p(),c("span",{class:"token comment"},"// 2"),p("\n")])]),c("div",{class:"line-numbers-wrapper"},[c("span",{class:"line-number"},"1"),c("br"),c("span",{class:"line-number"},"2"),c("br"),c("span",{class:"line-number"},"3"),c("br"),c("span",{class:"line-number"},"4"),c("br")])],-1),Sn=c("p",null,"利用push根据length属性插入元素这个特点，可以实现数组的合并，如下：",-1),xn=c("div",{class:"language-js line-numbers-mode"},[c("pre",null,[c("code",null,[c("span",{class:"token keyword"},"var"),p(" array "),c("span",{class:"token operator"},"="),p(),c("span",{class:"token punctuation"},"["),c("span",{class:"token string"},'"football"'),c("span",{class:"token punctuation"},","),p(),c("span",{class:"token string"},'"basketball"'),c("span",{class:"token punctuation"},"]"),c("span",{class:"token punctuation"},";"),p("\n"),c("span",{class:"token keyword"},"var"),p(" array2 "),c("span",{class:"token operator"},"="),p(),c("span",{class:"token punctuation"},"["),c("span",{class:"token string"},'"volleyball"'),c("span",{class:"token punctuation"},","),p(),c("span",{class:"token string"},'"golfball"'),c("span",{class:"token punctuation"},"]"),c("span",{class:"token punctuation"},";"),p("\n"),c("span",{class:"token keyword"},"var"),p(" i "),c("span",{class:"token operator"},"="),p(),c("span",{class:"token class-name"},"Array"),c("span",{class:"token punctuation"},"."),p("prototype"),c("span",{class:"token punctuation"},"."),c("span",{class:"token function"},"push"),c("span",{class:"token punctuation"},"."),c("span",{class:"token function"},"apply"),c("span",{class:"token punctuation"},"("),p("array"),c("span",{class:"token punctuation"},","),p("array2"),c("span",{class:"token punctuation"},")"),c("span",{class:"token punctuation"},";"),p("\nconsole"),c("span",{class:"token punctuation"},"."),c("span",{class:"token function"},"log"),c("span",{class:"token punctuation"},"("),p("array"),c("span",{class:"token punctuation"},")"),c("span",{class:"token punctuation"},";"),p(),c("span",{class:"token comment"},'// ["football", "basketball", "volleyball", "golfball"]'),p("\nconsole"),c("span",{class:"token punctuation"},"."),c("span",{class:"token function"},"log"),c("span",{class:"token punctuation"},"("),p("i"),c("span",{class:"token punctuation"},")"),c("span",{class:"token punctuation"},";"),p(),c("span",{class:"token comment"},"// 4"),p("\n")])]),c("div",{class:"line-numbers-wrapper"},[c("span",{class:"line-number"},"1"),c("br"),c("span",{class:"line-number"},"2"),c("br"),c("span",{class:"line-number"},"3"),c("br"),c("span",{class:"line-number"},"4"),c("br"),c("span",{class:"line-number"},"5"),c("br")])],-1),En=c("h3",{id:"reverse",tabindex:"-1"},[p("reverse "),c("a",{class:"header-anchor",href:"#reverse","aria-hidden":"true"},"#")],-1),On=c("p",null,"reverse()方法颠倒数组中元素的位置，第一个会成为最后一个，最后一个会成为第一个，该方法返回对数组的引用。",-1),In=c("p",null,"语法：arr.reverse()",-1),Tn=c("div",{class:"language-js line-numbers-mode"},[c("pre",null,[c("code",null,[c("span",{class:"token keyword"},"var"),p(" array "),c("span",{class:"token operator"},"="),p(),c("span",{class:"token punctuation"},"["),c("span",{class:"token number"},"1"),c("span",{class:"token punctuation"},","),c("span",{class:"token number"},"2"),c("span",{class:"token punctuation"},","),c("span",{class:"token number"},"3"),c("span",{class:"token punctuation"},","),c("span",{class:"token number"},"4"),c("span",{class:"token punctuation"},","),c("span",{class:"token number"},"5"),c("span",{class:"token punctuation"},"]"),c("span",{class:"token punctuation"},";"),p("\n"),c("span",{class:"token keyword"},"var"),p(" array2 "),c("span",{class:"token operator"},"="),p(" array"),c("span",{class:"token punctuation"},"."),c("span",{class:"token function"},"reverse"),c("span",{class:"token punctuation"},"("),c("span",{class:"token punctuation"},")"),c("span",{class:"token punctuation"},";"),p("\nconsole"),c("span",{class:"token punctuation"},"."),c("span",{class:"token function"},"log"),c("span",{class:"token punctuation"},"("),p("array"),c("span",{class:"token punctuation"},")"),c("span",{class:"token punctuation"},";"),p(),c("span",{class:"token comment"},"// [5,4,3,2,1]"),p("\nconsole"),c("span",{class:"token punctuation"},"."),c("span",{class:"token function"},"log"),c("span",{class:"token punctuation"},"("),p("array2"),c("span",{class:"token operator"},"==="),p("array"),c("span",{class:"token punctuation"},")"),c("span",{class:"token punctuation"},";"),p(),c("span",{class:"token comment"},"// true"),p("\n")])]),c("div",{class:"line-numbers-wrapper"},[c("span",{class:"line-number"},"1"),c("br"),c("span",{class:"line-number"},"2"),c("br"),c("span",{class:"line-number"},"3"),c("br"),c("span",{class:"line-number"},"4"),c("br")])],-1),Cn=c("p",null,"同上，reverse 也是鸭式辨型的受益者，颠倒元素的范围受length属性制约。如下:",-1),Pn=c("div",{class:"language-js line-numbers-mode"},[c("pre",null,[c("code",null,[c("span",{class:"token keyword"},"var"),p(" o "),c("span",{class:"token operator"},"="),p(),c("span",{class:"token punctuation"},"{"),c("span",{class:"token number"},"0"),c("span",{class:"token operator"},":"),c("span",{class:"token string"},'"a"'),c("span",{class:"token punctuation"},","),p(),c("span",{class:"token number"},"1"),c("span",{class:"token operator"},":"),c("span",{class:"token string"},'"b"'),c("span",{class:"token punctuation"},","),p(),c("span",{class:"token number"},"2"),c("span",{class:"token operator"},":"),c("span",{class:"token string"},'"c"'),c("span",{class:"token punctuation"},","),p(" length"),c("span",{class:"token operator"},":"),c("span",{class:"token number"},"2"),c("span",{class:"token punctuation"},"}"),c("span",{class:"token punctuation"},";"),p("\n"),c("span",{class:"token keyword"},"var"),p(" o2 "),c("span",{class:"token operator"},"="),p(),c("span",{class:"token class-name"},"Array"),c("span",{class:"token punctuation"},"."),p("prototype"),c("span",{class:"token punctuation"},"."),c("span",{class:"token function"},"reverse"),c("span",{class:"token punctuation"},"."),c("span",{class:"token function"},"call"),c("span",{class:"token punctuation"},"("),p("o"),c("span",{class:"token punctuation"},")"),c("span",{class:"token punctuation"},";"),p("\nconsole"),c("span",{class:"token punctuation"},"."),c("span",{class:"token function"},"log"),c("span",{class:"token punctuation"},"("),p("o"),c("span",{class:"token punctuation"},")"),c("span",{class:"token punctuation"},";"),p(),c("span",{class:"token comment"},'// Object {0: "b", 1: "a", 2: "c", length: 2}'),p("\nconsole"),c("span",{class:"token punctuation"},"."),c("span",{class:"token function"},"log"),c("span",{class:"token punctuation"},"("),p("o "),c("span",{class:"token operator"},"==="),p(" o2"),c("span",{class:"token punctuation"},")"),c("span",{class:"token punctuation"},";"),p(),c("span",{class:"token comment"},"// true"),p("\n")])]),c("div",{class:"line-numbers-wrapper"},[c("span",{class:"line-number"},"1"),c("br"),c("span",{class:"line-number"},"2"),c("br"),c("span",{class:"line-number"},"3"),c("br"),c("span",{class:"line-number"},"4"),c("br")])],-1),Vn=c("p",null,"如果 length 属性小于2 或者 length 属性不为数值，那么原类数组对象将没有变化。即使 length 属性不存在，该对象也不会去创建 length 属性。特别的是，当 length 属性较大时，类数组对象的『索引』会尽可能的向 length 看齐。如下:",-1),qn=c("div",{class:"language-js line-numbers-mode"},[c("pre",null,[c("code",null,[c("span",{class:"token keyword"},"var"),p(" o "),c("span",{class:"token operator"},"="),p(),c("span",{class:"token punctuation"},"{"),c("span",{class:"token number"},"0"),c("span",{class:"token operator"},":"),c("span",{class:"token string"},'"a"'),c("span",{class:"token punctuation"},","),p(),c("span",{class:"token number"},"1"),c("span",{class:"token operator"},":"),c("span",{class:"token string"},'"b"'),c("span",{class:"token punctuation"},","),p(),c("span",{class:"token number"},"2"),c("span",{class:"token operator"},":"),c("span",{class:"token string"},'"c"'),c("span",{class:"token punctuation"},","),p("length"),c("span",{class:"token operator"},":"),c("span",{class:"token number"},"100"),c("span",{class:"token punctuation"},"}"),c("span",{class:"token punctuation"},";"),p("\n"),c("span",{class:"token keyword"},"var"),p(" o2 "),c("span",{class:"token operator"},"="),p(),c("span",{class:"token class-name"},"Array"),c("span",{class:"token punctuation"},"."),p("prototype"),c("span",{class:"token punctuation"},"."),c("span",{class:"token function"},"reverse"),c("span",{class:"token punctuation"},"."),c("span",{class:"token function"},"call"),c("span",{class:"token punctuation"},"("),p("o"),c("span",{class:"token punctuation"},")"),c("span",{class:"token punctuation"},";"),p("\nconsole"),c("span",{class:"token punctuation"},"."),c("span",{class:"token function"},"log"),c("span",{class:"token punctuation"},"("),p("o"),c("span",{class:"token punctuation"},")"),c("span",{class:"token punctuation"},";"),p(),c("span",{class:"token comment"},'// Object {97: "c", 98: "b", 99: "a", length: 100}'),p("\nconsole"),c("span",{class:"token punctuation"},"."),c("span",{class:"token function"},"log"),c("span",{class:"token punctuation"},"("),p("o "),c("span",{class:"token operator"},"==="),p(" o2"),c("span",{class:"token punctuation"},")"),c("span",{class:"token punctuation"},";"),p(),c("span",{class:"token comment"},"// true"),p("\n")])]),c("div",{class:"line-numbers-wrapper"},[c("span",{class:"line-number"},"1"),c("br"),c("span",{class:"line-number"},"2"),c("br"),c("span",{class:"line-number"},"3"),c("br"),c("span",{class:"line-number"},"4"),c("br")])],-1),Ln=c("h3",{id:"shift",tabindex:"-1"},[p("shift "),c("a",{class:"header-anchor",href:"#shift","aria-hidden":"true"},"#")],-1),Nn=c("p",null,"shift()方法删除数组的第一个元素，并返回这个元素。如果是栈的话，这个过程就是栈底弹出。",-1),Mn=c("p",null,"语法：arr.shift()",-1),Wn=c("div",{class:"language-js line-numbers-mode"},[c("pre",null,[c("code",null,[c("span",{class:"token keyword"},"var"),p(" array "),c("span",{class:"token operator"},"="),p(),c("span",{class:"token punctuation"},"["),c("span",{class:"token number"},"1"),c("span",{class:"token punctuation"},","),c("span",{class:"token number"},"2"),c("span",{class:"token punctuation"},","),c("span",{class:"token number"},"3"),c("span",{class:"token punctuation"},","),c("span",{class:"token number"},"4"),c("span",{class:"token punctuation"},","),c("span",{class:"token number"},"5"),c("span",{class:"token punctuation"},"]"),c("span",{class:"token punctuation"},";"),p("\n"),c("span",{class:"token keyword"},"var"),p(" item "),c("span",{class:"token operator"},"="),p(" array"),c("span",{class:"token punctuation"},"."),c("span",{class:"token function"},"shift"),c("span",{class:"token punctuation"},"("),c("span",{class:"token punctuation"},")"),c("span",{class:"token punctuation"},";"),p("\nconsole"),c("span",{class:"token punctuation"},"."),c("span",{class:"token function"},"log"),c("span",{class:"token punctuation"},"("),p("array"),c("span",{class:"token punctuation"},")"),c("span",{class:"token punctuation"},";"),p(),c("span",{class:"token comment"},"// [2,3,4,5]"),p("\nconsole"),c("span",{class:"token punctuation"},"."),c("span",{class:"token function"},"log"),c("span",{class:"token punctuation"},"("),p("item"),c("span",{class:"token punctuation"},")"),c("span",{class:"token punctuation"},";"),p(),c("span",{class:"token comment"},"// 1"),p("\n")])]),c("div",{class:"line-numbers-wrapper"},[c("span",{class:"line-number"},"1"),c("br"),c("span",{class:"line-number"},"2"),c("br"),c("span",{class:"line-number"},"3"),c("br"),c("span",{class:"line-number"},"4"),c("br")])],-1),Rn=c("p",null,"同样受益于鸭式辨型，对于类数组对象，shift仍然能够处理。如下：",-1),Dn=c("div",{class:"language-js line-numbers-mode"},[c("pre",null,[c("code",null,[c("span",{class:"token keyword"},"var"),p(" o "),c("span",{class:"token operator"},"="),p(),c("span",{class:"token punctuation"},"{"),c("span",{class:"token number"},"0"),c("span",{class:"token operator"},":"),c("span",{class:"token string"},'"a"'),c("span",{class:"token punctuation"},","),p(),c("span",{class:"token number"},"1"),c("span",{class:"token operator"},":"),c("span",{class:"token string"},'"b"'),c("span",{class:"token punctuation"},","),p(),c("span",{class:"token number"},"2"),c("span",{class:"token operator"},":"),c("span",{class:"token string"},'"c"'),c("span",{class:"token punctuation"},","),p(" length"),c("span",{class:"token operator"},":"),c("span",{class:"token number"},"3"),c("span",{class:"token punctuation"},"}"),c("span",{class:"token punctuation"},";"),p("\n"),c("span",{class:"token keyword"},"var"),p(" item "),c("span",{class:"token operator"},"="),p(),c("span",{class:"token class-name"},"Array"),c("span",{class:"token punctuation"},"."),p("prototype"),c("span",{class:"token punctuation"},"."),c("span",{class:"token function"},"shift"),c("span",{class:"token punctuation"},"."),c("span",{class:"token function"},"call"),c("span",{class:"token punctuation"},"("),p("o"),c("span",{class:"token punctuation"},")"),c("span",{class:"token punctuation"},";"),p("\nconsole"),c("span",{class:"token punctuation"},"."),c("span",{class:"token function"},"log"),c("span",{class:"token punctuation"},"("),p("o"),c("span",{class:"token punctuation"},")"),c("span",{class:"token punctuation"},";"),p(),c("span",{class:"token comment"},'// Object {0: "b", 1: "c", length: 2}'),p("\nconsole"),c("span",{class:"token punctuation"},"."),c("span",{class:"token function"},"log"),c("span",{class:"token punctuation"},"("),p("item"),c("span",{class:"token punctuation"},")"),c("span",{class:"token punctuation"},";"),p(),c("span",{class:"token comment"},"// a"),p("\n")])]),c("div",{class:"line-numbers-wrapper"},[c("span",{class:"line-number"},"1"),c("br"),c("span",{class:"line-number"},"2"),c("br"),c("span",{class:"line-number"},"3"),c("br"),c("span",{class:"line-number"},"4"),c("br")])],-1),Fn=c("p",null,"如果类数组对象length属性不存在，将添加length属性，并初始化为0。如下：",-1),Jn=c("div",{class:"language-js line-numbers-mode"},[c("pre",null,[c("code",null,[c("span",{class:"token keyword"},"var"),p(" o "),c("span",{class:"token operator"},"="),p(),c("span",{class:"token punctuation"},"{"),c("span",{class:"token number"},"0"),c("span",{class:"token operator"},":"),c("span",{class:"token string"},'"a"'),c("span",{class:"token punctuation"},","),p(),c("span",{class:"token number"},"1"),c("span",{class:"token operator"},":"),c("span",{class:"token string"},'"b"'),c("span",{class:"token punctuation"},","),p(),c("span",{class:"token number"},"2"),c("span",{class:"token operator"},":"),c("span",{class:"token string"},'"c"'),c("span",{class:"token punctuation"},"}"),c("span",{class:"token punctuation"},";"),p("\n"),c("span",{class:"token keyword"},"var"),p(" item "),c("span",{class:"token operator"},"="),p(),c("span",{class:"token class-name"},"Array"),c("span",{class:"token punctuation"},"."),p("prototype"),c("span",{class:"token punctuation"},"."),c("span",{class:"token function"},"shift"),c("span",{class:"token punctuation"},"."),c("span",{class:"token function"},"call"),c("span",{class:"token punctuation"},"("),p("o"),c("span",{class:"token punctuation"},")"),c("span",{class:"token punctuation"},";"),p("\nconsole"),c("span",{class:"token punctuation"},"."),c("span",{class:"token function"},"log"),c("span",{class:"token punctuation"},"("),p("o"),c("span",{class:"token punctuation"},")"),c("span",{class:"token punctuation"},";"),p(),c("span",{class:"token comment"},'// Object {0: "a", 1: "b", 2:"c" length: 0}'),p("\nconsole"),c("span",{class:"token punctuation"},"."),c("span",{class:"token function"},"log"),c("span",{class:"token punctuation"},"("),p("item"),c("span",{class:"token punctuation"},")"),c("span",{class:"token punctuation"},";"),p(),c("span",{class:"token comment"},"// undefined"),p("\n")])]),c("div",{class:"line-numbers-wrapper"},[c("span",{class:"line-number"},"1"),c("br"),c("span",{class:"line-number"},"2"),c("br"),c("span",{class:"line-number"},"3"),c("br"),c("span",{class:"line-number"},"4"),c("br")])],-1),zn=c("h3",{id:"sort",tabindex:"-1"},[p("sort "),c("a",{class:"header-anchor",href:"#sort","aria-hidden":"true"},"#")],-1),Bn=c("p",null,"sort()方法对数组元素进行排序，并返回这个数组。sort方法比较复杂，这里我将多花些篇幅来讲这块。",-1),Kn=c("p",null,"语法：arr.sort([comparefn])",-1),Gn=c("p",null,"comparefn是可选的，如果省略，数组元素将按照各自转换为字符串的Unicode(万国码)位点顺序排序，例如”Boy”将排到”apple”之前。当对数字排序的时候，25将会排到8之前，因为转换为字符串后，”25”将比”8”靠前。例如：",-1),Hn=c("div",{class:"language-js line-numbers-mode"},[c("pre",null,[c("code",null,[c("span",{class:"token keyword"},"var"),p(" array "),c("span",{class:"token operator"},"="),p(),c("span",{class:"token punctuation"},"["),c("span",{class:"token string"},'"apple"'),c("span",{class:"token punctuation"},","),c("span",{class:"token string"},'"Boy"'),c("span",{class:"token punctuation"},","),c("span",{class:"token string"},'"Cat"'),c("span",{class:"token punctuation"},","),c("span",{class:"token string"},'"dog"'),c("span",{class:"token punctuation"},"]"),c("span",{class:"token punctuation"},";"),p("\n"),c("span",{class:"token keyword"},"var"),p(" array2 "),c("span",{class:"token operator"},"="),p(" array"),c("span",{class:"token punctuation"},"."),c("span",{class:"token function"},"sort"),c("span",{class:"token punctuation"},"("),c("span",{class:"token punctuation"},")"),c("span",{class:"token punctuation"},";"),p("\nconsole"),c("span",{class:"token punctuation"},"."),c("span",{class:"token function"},"log"),c("span",{class:"token punctuation"},"("),p("array"),c("span",{class:"token punctuation"},")"),c("span",{class:"token punctuation"},";"),p(),c("span",{class:"token comment"},'// ["Boy", "Cat", "apple", "dog"]'),p("\nconsole"),c("span",{class:"token punctuation"},"."),c("span",{class:"token function"},"log"),c("span",{class:"token punctuation"},"("),p("array2 "),c("span",{class:"token operator"},"=="),p(" array"),c("span",{class:"token punctuation"},")"),c("span",{class:"token punctuation"},";"),p(),c("span",{class:"token comment"},"// true"),p("\n\narray "),c("span",{class:"token operator"},"="),p(),c("span",{class:"token punctuation"},"["),c("span",{class:"token number"},"10"),c("span",{class:"token punctuation"},","),p(),c("span",{class:"token number"},"1"),c("span",{class:"token punctuation"},","),p(),c("span",{class:"token number"},"3"),c("span",{class:"token punctuation"},","),p(),c("span",{class:"token number"},"20"),c("span",{class:"token punctuation"},"]"),c("span",{class:"token punctuation"},";"),p("\n"),c("span",{class:"token keyword"},"var"),p(" array3 "),c("span",{class:"token operator"},"="),p(" array"),c("span",{class:"token punctuation"},"."),c("span",{class:"token function"},"sort"),c("span",{class:"token punctuation"},"("),c("span",{class:"token punctuation"},")"),c("span",{class:"token punctuation"},";"),p("\nconsole"),c("span",{class:"token punctuation"},"."),c("span",{class:"token function"},"log"),c("span",{class:"token punctuation"},"("),p("array3"),c("span",{class:"token punctuation"},")"),c("span",{class:"token punctuation"},";"),p(),c("span",{class:"token comment"},"// [1, 10, 20, 3]"),p("\n")])]),c("div",{class:"line-numbers-wrapper"},[c("span",{class:"line-number"},"1"),c("br"),c("span",{class:"line-number"},"2"),c("br"),c("span",{class:"line-number"},"3"),c("br"),c("span",{class:"line-number"},"4"),c("br"),c("span",{class:"line-number"},"5"),c("br"),c("span",{class:"line-number"},"6"),c("br"),c("span",{class:"line-number"},"7"),c("br"),c("span",{class:"line-number"},"8"),c("br")])],-1),Un=c("p",null,"如果指明了comparefn，数组将按照调用该函数的返回值来排序。若 a 和 b 是两个将要比较的元素：",-1),Qn=c("ul",null,[c("li",null,"若 comparefn(a, b) < 0，那么a 将排到 b 前面；"),c("li",null,"若 comparefn(a, b) = 0，那么a 和 b 相对位置不变；"),c("li",null,"若 comparefn(a, b) > 0，那么a , b 将调换位置；")],-1),Xn=c("p",null,"如果数组元素为数字，则排序函数comparefn格式如下所示：",-1),Yn=c("div",{class:"language-js line-numbers-mode"},[c("pre",null,[c("code",null,[c("span",{class:"token keyword"},"function"),p(),c("span",{class:"token function"},"compare"),c("span",{class:"token punctuation"},"("),c("span",{class:"token parameter"},[p("a"),c("span",{class:"token punctuation"},","),p(" b")]),c("span",{class:"token punctuation"},")"),c("span",{class:"token punctuation"},"{"),p("\n  "),c("span",{class:"token keyword"},"return"),p(" a"),c("span",{class:"token operator"},"-"),p("b"),c("span",{class:"token punctuation"},";"),p("\n"),c("span",{class:"token punctuation"},"}"),p("\n")])]),c("div",{class:"line-numbers-wrapper"},[c("span",{class:"line-number"},"1"),c("br"),c("span",{class:"line-number"},"2"),c("br"),c("span",{class:"line-number"},"3"),c("br")])],-1),Zn=c("p",null,"如果数组元素为非ASCII字符的字符串(如包含类似 e、é、è、a、ä 或中文字符等非英文字符的字符串)，则需要使用String.localeCompare。下面这个函数将排到正确的顺序。",-1),$n=c("div",{class:"language-js line-numbers-mode"},[c("pre",null,[c("code",null,[c("span",{class:"token keyword"},"var"),p(" array "),c("span",{class:"token operator"},"="),p(),c("span",{class:"token punctuation"},"["),c("span",{class:"token string"},"'互'"),c("span",{class:"token punctuation"},","),c("span",{class:"token string"},"'联'"),c("span",{class:"token punctuation"},","),c("span",{class:"token string"},"'网'"),c("span",{class:"token punctuation"},","),c("span",{class:"token string"},"'改'"),c("span",{class:"token punctuation"},","),c("span",{class:"token string"},"'变'"),c("span",{class:"token punctuation"},","),c("span",{class:"token string"},"'世'"),c("span",{class:"token punctuation"},","),c("span",{class:"token string"},"'界'"),c("span",{class:"token punctuation"},"]"),c("span",{class:"token punctuation"},";"),p("\n"),c("span",{class:"token keyword"},"var"),p(" array2 "),c("span",{class:"token operator"},"="),p(" array"),c("span",{class:"token punctuation"},"."),c("span",{class:"token function"},"sort"),c("span",{class:"token punctuation"},"("),c("span",{class:"token punctuation"},")"),c("span",{class:"token punctuation"},";"),p("\n\n"),c("span",{class:"token keyword"},"var"),p(" array "),c("span",{class:"token operator"},"="),p(),c("span",{class:"token punctuation"},"["),c("span",{class:"token string"},"'互'"),c("span",{class:"token punctuation"},","),c("span",{class:"token string"},"'联'"),c("span",{class:"token punctuation"},","),c("span",{class:"token string"},"'网'"),c("span",{class:"token punctuation"},","),c("span",{class:"token string"},"'改'"),c("span",{class:"token punctuation"},","),c("span",{class:"token string"},"'变'"),c("span",{class:"token punctuation"},","),c("span",{class:"token string"},"'世'"),c("span",{class:"token punctuation"},","),c("span",{class:"token string"},"'界'"),c("span",{class:"token punctuation"},"]"),c("span",{class:"token punctuation"},";"),p(),c("span",{class:"token comment"},"// 重新赋值,避免干扰array2"),p("\n"),c("span",{class:"token keyword"},"var"),p(" array3 "),c("span",{class:"token operator"},"="),p(" array"),c("span",{class:"token punctuation"},"."),c("span",{class:"token function"},"sort"),c("span",{class:"token punctuation"},"("),c("span",{class:"token keyword"},"function"),p(),c("span",{class:"token punctuation"},"("),c("span",{class:"token parameter"},[p("a"),c("span",{class:"token punctuation"},","),p(" b")]),c("span",{class:"token punctuation"},")"),p(),c("span",{class:"token punctuation"},"{"),p("\n  "),c("span",{class:"token keyword"},"return"),p(" a"),c("span",{class:"token punctuation"},"."),c("span",{class:"token function"},"localeCompare"),c("span",{class:"token punctuation"},"("),p("b"),c("span",{class:"token punctuation"},")"),c("span",{class:"token punctuation"},";"),p("\n"),c("span",{class:"token punctuation"},"}"),c("span",{class:"token punctuation"},")"),c("span",{class:"token punctuation"},";"),p("\n\nconsole"),c("span",{class:"token punctuation"},"."),c("span",{class:"token function"},"log"),c("span",{class:"token punctuation"},"("),p("array2"),c("span",{class:"token punctuation"},")"),c("span",{class:"token punctuation"},";"),p(),c("span",{class:"token comment"},'// ["世", "互", "变", "改", "界", "网", "联"]'),p("\nconsole"),c("span",{class:"token punctuation"},"."),c("span",{class:"token function"},"log"),c("span",{class:"token punctuation"},"("),p("array3"),c("span",{class:"token punctuation"},")"),c("span",{class:"token punctuation"},";"),p(),c("span",{class:"token comment"},'// ["变", "改", "互", "界", "联", "世", "网"]'),p("\n")])]),c("div",{class:"line-numbers-wrapper"},[c("span",{class:"line-number"},"1"),c("br"),c("span",{class:"line-number"},"2"),c("br"),c("span",{class:"line-number"},"3"),c("br"),c("span",{class:"line-number"},"4"),c("br"),c("span",{class:"line-number"},"5"),c("br"),c("span",{class:"line-number"},"6"),c("br"),c("span",{class:"line-number"},"7"),c("br"),c("span",{class:"line-number"},"8"),c("br"),c("span",{class:"line-number"},"9"),c("br"),c("span",{class:"line-number"},"10"),c("br")])],-1),ns=c("p",null,"如上，『互联网改变世界』这个数组，sort函数默认按照数组元素unicode字符串形式进行排序，然而实际上，我们期望的是按照拼音先后顺序进行排序，显然String.localeCompare 帮助我们达到了这个目的。",-1),ss=c("p",null,"为什么上面测试中需要重新给array赋值呢，这是因为sort每次排序时改变的是数组本身，并且返回数组引用。如果不这么做，经过连续两次排序后，array2 和 array3 将指向同一个数组，最终影响我们测试。array重新赋值后就断开了对原数组的引用。",-1),as=c("p",null,"同上，sort一样受益于鸭式辨型，比如：",-1),ts=c("div",{class:"language-js line-numbers-mode"},[c("pre",null,[c("code",null,[c("span",{class:"token keyword"},"var"),p(" o "),c("span",{class:"token operator"},"="),p(),c("span",{class:"token punctuation"},"{"),c("span",{class:"token number"},"0"),c("span",{class:"token operator"},":"),c("span",{class:"token string"},"'互'"),c("span",{class:"token punctuation"},","),c("span",{class:"token number"},"1"),c("span",{class:"token operator"},":"),c("span",{class:"token string"},"'联'"),c("span",{class:"token punctuation"},","),c("span",{class:"token number"},"2"),c("span",{class:"token operator"},":"),c("span",{class:"token string"},"'网'"),c("span",{class:"token punctuation"},","),c("span",{class:"token number"},"3"),c("span",{class:"token operator"},":"),c("span",{class:"token string"},"'改'"),c("span",{class:"token punctuation"},","),c("span",{class:"token number"},"4"),c("span",{class:"token operator"},":"),c("span",{class:"token string"},"'变'"),c("span",{class:"token punctuation"},","),c("span",{class:"token number"},"5"),c("span",{class:"token operator"},":"),c("span",{class:"token string"},"'世'"),c("span",{class:"token punctuation"},","),c("span",{class:"token number"},"6"),c("span",{class:"token operator"},":"),c("span",{class:"token string"},"'界'"),c("span",{class:"token punctuation"},","),p("length"),c("span",{class:"token operator"},":"),c("span",{class:"token number"},"7"),c("span",{class:"token punctuation"},"}"),c("span",{class:"token punctuation"},";"),p("\n"),c("span",{class:"token class-name"},"Array"),c("span",{class:"token punctuation"},"."),p("prototype"),c("span",{class:"token punctuation"},"."),c("span",{class:"token function"},"sort"),c("span",{class:"token punctuation"},"."),c("span",{class:"token function"},"call"),c("span",{class:"token punctuation"},"("),p("o"),c("span",{class:"token punctuation"},","),c("span",{class:"token keyword"},"function"),c("span",{class:"token punctuation"},"("),c("span",{class:"token parameter"},[p("a"),c("span",{class:"token punctuation"},","),p(" b")]),c("span",{class:"token punctuation"},")"),c("span",{class:"token punctuation"},"{"),p("\n  "),c("span",{class:"token keyword"},"return"),p(" a"),c("span",{class:"token punctuation"},"."),c("span",{class:"token function"},"localeCompare"),c("span",{class:"token punctuation"},"("),p("b"),c("span",{class:"token punctuation"},")"),c("span",{class:"token punctuation"},";"),p("\n"),c("span",{class:"token punctuation"},"}"),c("span",{class:"token punctuation"},")"),c("span",{class:"token punctuation"},";"),p("\nconsole"),c("span",{class:"token punctuation"},"."),c("span",{class:"token function"},"log"),c("span",{class:"token punctuation"},"("),p("o"),c("span",{class:"token punctuation"},")"),c("span",{class:"token punctuation"},";"),p(),c("span",{class:"token comment"},'// Object {0: "变", 1: "改", 2: "互", 3: "界", 4: "联", 5: "世", 6: "网", length: 7}, 可见同上述排序结果一致'),p("\n")])]),c("div",{class:"line-numbers-wrapper"},[c("span",{class:"line-number"},"1"),c("br"),c("span",{class:"line-number"},"2"),c("br"),c("span",{class:"line-number"},"3"),c("br"),c("span",{class:"line-number"},"4"),c("br"),c("span",{class:"line-number"},"5"),c("br")])],-1),os=c("blockquote",null,[c("p",null,"注意：使用sort的鸭式辨型特性时，若类数组对象不具有length属性，它并不会进行排序，也不会为其添加length属性。")],-1),es=c("div",{class:"language-js line-numbers-mode"},[c("pre",null,[c("code",null,[c("span",{class:"token keyword"},"var"),p(" o "),c("span",{class:"token operator"},"="),p(),c("span",{class:"token punctuation"},"{"),c("span",{class:"token number"},"0"),c("span",{class:"token operator"},":"),c("span",{class:"token string"},"'互'"),c("span",{class:"token punctuation"},","),c("span",{class:"token number"},"1"),c("span",{class:"token operator"},":"),c("span",{class:"token string"},"'联'"),c("span",{class:"token punctuation"},","),c("span",{class:"token number"},"2"),c("span",{class:"token operator"},":"),c("span",{class:"token string"},"'网'"),c("span",{class:"token punctuation"},","),c("span",{class:"token number"},"3"),c("span",{class:"token operator"},":"),c("span",{class:"token string"},"'改'"),c("span",{class:"token punctuation"},","),c("span",{class:"token number"},"4"),c("span",{class:"token operator"},":"),c("span",{class:"token string"},"'变'"),c("span",{class:"token punctuation"},","),c("span",{class:"token number"},"5"),c("span",{class:"token operator"},":"),c("span",{class:"token string"},"'世'"),c("span",{class:"token punctuation"},","),c("span",{class:"token number"},"6"),c("span",{class:"token operator"},":"),c("span",{class:"token string"},"'界'"),c("span",{class:"token punctuation"},"}"),c("span",{class:"token punctuation"},";"),p("\n"),c("span",{class:"token class-name"},"Array"),c("span",{class:"token punctuation"},"."),p("prototype"),c("span",{class:"token punctuation"},"."),c("span",{class:"token function"},"sort"),c("span",{class:"token punctuation"},"."),c("span",{class:"token function"},"call"),c("span",{class:"token punctuation"},"("),p("o"),c("span",{class:"token punctuation"},","),c("span",{class:"token keyword"},"function"),c("span",{class:"token punctuation"},"("),c("span",{class:"token parameter"},[p("a"),c("span",{class:"token punctuation"},","),p(" b")]),c("span",{class:"token punctuation"},")"),c("span",{class:"token punctuation"},"{"),p("\n  "),c("span",{class:"token keyword"},"return"),p(" a"),c("span",{class:"token punctuation"},"."),c("span",{class:"token function"},"localeCompare"),c("span",{class:"token punctuation"},"("),p("b"),c("span",{class:"token punctuation"},")"),c("span",{class:"token punctuation"},";"),p("\n"),c("span",{class:"token punctuation"},"}"),c("span",{class:"token punctuation"},")"),c("span",{class:"token punctuation"},";"),p("\nconsole"),c("span",{class:"token punctuation"},"."),c("span",{class:"token function"},"log"),c("span",{class:"token punctuation"},"("),p("o"),c("span",{class:"token punctuation"},")"),c("span",{class:"token punctuation"},";"),p(),c("span",{class:"token comment"},'// Object {0: "互", 1: "联", 2: "网", 3: "改", 4: "变", 5: "世", 6: "界"}, 可见并未添加length属性'),p("\n")])]),c("div",{class:"line-numbers-wrapper"},[c("span",{class:"line-number"},"1"),c("br"),c("span",{class:"line-number"},"2"),c("br"),c("span",{class:"line-number"},"3"),c("br"),c("span",{class:"line-number"},"4"),c("br"),c("span",{class:"line-number"},"5"),c("br")])],-1),cs=c("h4",{id:"使用映射改善排序",tabindex:"-1"},[p("使用映射改善排序 "),c("a",{class:"header-anchor",href:"#使用映射改善排序","aria-hidden":"true"},"#")],-1),ps=c("p",null,"comparefn 如果需要对数组元素多次转换以实现排序，那么使用map辅助排序将是个不错的选择。基本思想就是将数组中的每个元素实际比较的值取出来，排序后再将数组恢复。",-1),ls=c("div",{class:"language-js line-numbers-mode"},[c("pre",null,[c("code",null,[c("span",{class:"token comment"},"// 需要被排序的数组"),p("\n"),c("span",{class:"token keyword"},"var"),p(" array "),c("span",{class:"token operator"},"="),p(),c("span",{class:"token punctuation"},"["),c("span",{class:"token string"},"'dog'"),c("span",{class:"token punctuation"},","),p(),c("span",{class:"token string"},"'Cat'"),c("span",{class:"token punctuation"},","),p(),c("span",{class:"token string"},"'Boy'"),c("span",{class:"token punctuation"},","),p(),c("span",{class:"token string"},"'apple'"),c("span",{class:"token punctuation"},"]"),c("span",{class:"token punctuation"},";"),p("\n"),c("span",{class:"token comment"},"// 对需要排序的数字和位置的临时存储"),p("\n"),c("span",{class:"token keyword"},"var"),p(" mapped "),c("span",{class:"token operator"},"="),p(" array"),c("span",{class:"token punctuation"},"."),c("span",{class:"token function"},"map"),c("span",{class:"token punctuation"},"("),c("span",{class:"token keyword"},"function"),c("span",{class:"token punctuation"},"("),c("span",{class:"token parameter"},[p("el"),c("span",{class:"token punctuation"},","),p(" i")]),c("span",{class:"token punctuation"},")"),p(),c("span",{class:"token punctuation"},"{"),p("\n  "),c("span",{class:"token keyword"},"return"),p(),c("span",{class:"token punctuation"},"{"),p(" index"),c("span",{class:"token operator"},":"),p(" i"),c("span",{class:"token punctuation"},","),p(" value"),c("span",{class:"token operator"},":"),p(" el"),c("span",{class:"token punctuation"},"."),c("span",{class:"token function"},"toLowerCase"),c("span",{class:"token punctuation"},"("),c("span",{class:"token punctuation"},")"),p(),c("span",{class:"token punctuation"},"}"),c("span",{class:"token punctuation"},";"),p("\n"),c("span",{class:"token punctuation"},"}"),c("span",{class:"token punctuation"},")"),p("\n"),c("span",{class:"token comment"},"// 按照多个值排序数组"),p("\nmapped"),c("span",{class:"token punctuation"},"."),c("span",{class:"token function"},"sort"),c("span",{class:"token punctuation"},"("),c("span",{class:"token keyword"},"function"),c("span",{class:"token punctuation"},"("),c("span",{class:"token parameter"},[p("a"),c("span",{class:"token punctuation"},","),p(" b")]),c("span",{class:"token punctuation"},")"),p(),c("span",{class:"token punctuation"},"{"),p("\n  "),c("span",{class:"token keyword"},"return"),p(),c("span",{class:"token operator"},"+"),c("span",{class:"token punctuation"},"("),p("a"),c("span",{class:"token punctuation"},"."),p("value "),c("span",{class:"token operator"},">"),p(" b"),c("span",{class:"token punctuation"},"."),p("value"),c("span",{class:"token punctuation"},")"),p(),c("span",{class:"token operator"},"||"),p(),c("span",{class:"token operator"},"+"),c("span",{class:"token punctuation"},"("),p("a"),c("span",{class:"token punctuation"},"."),p("value "),c("span",{class:"token operator"},"==="),p(" b"),c("span",{class:"token punctuation"},"."),p("value"),c("span",{class:"token punctuation"},")"),p(),c("span",{class:"token operator"},"-"),p(),c("span",{class:"token number"},"1"),c("span",{class:"token punctuation"},";"),p("\n"),c("span",{class:"token punctuation"},"}"),c("span",{class:"token punctuation"},")"),c("span",{class:"token punctuation"},";"),p("\n"),c("span",{class:"token comment"},"// 根据索引得到排序的结果"),p("\n"),c("span",{class:"token keyword"},"var"),p(" result "),c("span",{class:"token operator"},"="),p(" mapped"),c("span",{class:"token punctuation"},"."),c("span",{class:"token function"},"map"),c("span",{class:"token punctuation"},"("),c("span",{class:"token keyword"},"function"),c("span",{class:"token punctuation"},"("),c("span",{class:"token parameter"},"el"),c("span",{class:"token punctuation"},")"),c("span",{class:"token punctuation"},"{"),p("\n  "),c("span",{class:"token keyword"},"return"),p(" array"),c("span",{class:"token punctuation"},"["),p("el"),c("span",{class:"token punctuation"},"."),p("index"),c("span",{class:"token punctuation"},"]"),c("span",{class:"token punctuation"},";"),p("\n"),c("span",{class:"token punctuation"},"}"),c("span",{class:"token punctuation"},")"),c("span",{class:"token punctuation"},";"),p("\nconsole"),c("span",{class:"token punctuation"},"."),c("span",{class:"token function"},"log"),c("span",{class:"token punctuation"},"("),p("result"),c("span",{class:"token punctuation"},")"),c("span",{class:"token punctuation"},";"),p(),c("span",{class:"token comment"},'// ["apple", "Boy", "Cat", "dog"]'),p("\n")])]),c("div",{class:"line-numbers-wrapper"},[c("span",{class:"line-number"},"1"),c("br"),c("span",{class:"line-number"},"2"),c("br"),c("span",{class:"line-number"},"3"),c("br"),c("span",{class:"line-number"},"4"),c("br"),c("span",{class:"line-number"},"5"),c("br"),c("span",{class:"line-number"},"6"),c("br"),c("span",{class:"line-number"},"7"),c("br"),c("span",{class:"line-number"},"8"),c("br"),c("span",{class:"line-number"},"9"),c("br"),c("span",{class:"line-number"},"10"),c("br"),c("span",{class:"line-number"},"11"),c("br"),c("span",{class:"line-number"},"12"),c("br"),c("span",{class:"line-number"},"13"),c("br"),c("span",{class:"line-number"},"14"),c("br"),c("span",{class:"line-number"},"15"),c("br")])],-1),us=c("h3",{id:"splice",tabindex:"-1"},[p("splice "),c("a",{class:"header-anchor",href:"#splice","aria-hidden":"true"},"#")],-1),rs=c("p",null,"splice()方法用新元素替换旧元素的方式来修改数组。它是一个常用的方法，复杂的数组操作场景通常都会有它的身影，特别是需要维持原数组引用时，就地删除或者新增元素，splice是最适合的。",-1),is=c("p",null,"语法：arr.splice(start,deleteCount[, item1[, item2[, …]]])",-1),ks=c("ul",null,[c("li",null,"start 指定从哪一位开始修改内容。如果超过了数组长度，则从数组末尾开始添加内容；如果是负值，则其指定的索引位置等同于 length+start (length为数组的长度)，表示从数组末尾开始的第 -start 位。"),c("li",null,"deleteCount 指定要删除的元素个数，若等于0，则不删除。这种情况下，至少应该添加一位新元素，若大于start之后的元素总和，则start及之后的元素都将被删除。"),c("li",null,"itemN 指定新增的元素，如果缺省，则该方法只删除数组元素。"),c("li",null,"返回值 由原数组中被删除元素组成的数组，如果没有删除，则返回一个空数组。")],-1),bs=c("div",{class:"language-js line-numbers-mode"},[c("pre",null,[c("code",null,[c("span",{class:"token keyword"},"var"),p(" array "),c("span",{class:"token operator"},"="),p(),c("span",{class:"token punctuation"},"["),c("span",{class:"token string"},'"apple"'),c("span",{class:"token punctuation"},","),c("span",{class:"token string"},'"boy"'),c("span",{class:"token punctuation"},"]"),c("span",{class:"token punctuation"},";"),p("\n"),c("span",{class:"token keyword"},"var"),p(" splices "),c("span",{class:"token operator"},"="),p(" array"),c("span",{class:"token punctuation"},"."),c("span",{class:"token function"},"splice"),c("span",{class:"token punctuation"},"("),c("span",{class:"token number"},"1"),c("span",{class:"token punctuation"},","),c("span",{class:"token number"},"1"),c("span",{class:"token punctuation"},")"),c("span",{class:"token punctuation"},";"),p("\nconsole"),c("span",{class:"token punctuation"},"."),c("span",{class:"token function"},"log"),c("span",{class:"token punctuation"},"("),p("array"),c("span",{class:"token punctuation"},")"),c("span",{class:"token punctuation"},";"),p(),c("span",{class:"token comment"},'// ["apple"]'),p("\nconsole"),c("span",{class:"token punctuation"},"."),c("span",{class:"token function"},"log"),c("span",{class:"token punctuation"},"("),p("splices"),c("span",{class:"token punctuation"},")"),c("span",{class:"token punctuation"},";"),p(),c("span",{class:"token comment"},'// ["boy"] ,可见是从数组下标为1的元素开始删除,并且删除一个元素,由于itemN缺省,故此时该方法只删除元素'),p("\n\narray "),c("span",{class:"token operator"},"="),p(),c("span",{class:"token punctuation"},"["),c("span",{class:"token string"},'"apple"'),c("span",{class:"token punctuation"},","),c("span",{class:"token string"},'"boy"'),c("span",{class:"token punctuation"},"]"),c("span",{class:"token punctuation"},";"),p("\nsplices "),c("span",{class:"token operator"},"="),p(" array"),c("span",{class:"token punctuation"},"."),c("span",{class:"token function"},"splice"),c("span",{class:"token punctuation"},"("),c("span",{class:"token number"},"2"),c("span",{class:"token punctuation"},","),c("span",{class:"token number"},"1"),c("span",{class:"token punctuation"},","),c("span",{class:"token string"},'"cat"'),c("span",{class:"token punctuation"},")"),c("span",{class:"token punctuation"},";"),p("\nconsole"),c("span",{class:"token punctuation"},"."),c("span",{class:"token function"},"log"),c("span",{class:"token punctuation"},"("),p("array"),c("span",{class:"token punctuation"},")"),c("span",{class:"token punctuation"},";"),p(),c("span",{class:"token comment"},'// ["apple", "boy", "cat"]'),p("\nconsole"),c("span",{class:"token punctuation"},"."),c("span",{class:"token function"},"log"),c("span",{class:"token punctuation"},"("),p("splices"),c("span",{class:"token punctuation"},")"),c("span",{class:"token punctuation"},";"),p(),c("span",{class:"token comment"},"// [], 可见由于start超过数组长度,此时从数组末尾开始添加元素,并且原数组不会发生删除行为"),p("\n\narray "),c("span",{class:"token operator"},"="),p(),c("span",{class:"token punctuation"},"["),c("span",{class:"token string"},'"apple"'),c("span",{class:"token punctuation"},","),c("span",{class:"token string"},'"boy"'),c("span",{class:"token punctuation"},"]"),c("span",{class:"token punctuation"},";"),p("\nsplices "),c("span",{class:"token operator"},"="),p(" array"),c("span",{class:"token punctuation"},"."),c("span",{class:"token function"},"splice"),c("span",{class:"token punctuation"},"("),c("span",{class:"token operator"},"-"),c("span",{class:"token number"},"2"),c("span",{class:"token punctuation"},","),c("span",{class:"token number"},"1"),c("span",{class:"token punctuation"},","),c("span",{class:"token string"},'"cat"'),c("span",{class:"token punctuation"},")"),c("span",{class:"token punctuation"},";"),p("\nconsole"),c("span",{class:"token punctuation"},"."),c("span",{class:"token function"},"log"),c("span",{class:"token punctuation"},"("),p("array"),c("span",{class:"token punctuation"},")"),c("span",{class:"token punctuation"},";"),p(),c("span",{class:"token comment"},'// ["cat", "boy"]'),p("\nconsole"),c("span",{class:"token punctuation"},"."),c("span",{class:"token function"},"log"),c("span",{class:"token punctuation"},"("),p("splices"),c("span",{class:"token punctuation"},")"),c("span",{class:"token punctuation"},";"),p(),c("span",{class:"token comment"},'// ["apple"], 可见当start为负值时,是从数组末尾开始的第-start位开始删除,删除一个元素,并且从此处插入了一个元素'),p("\n\narray "),c("span",{class:"token operator"},"="),p(),c("span",{class:"token punctuation"},"["),c("span",{class:"token string"},'"apple"'),c("span",{class:"token punctuation"},","),c("span",{class:"token string"},'"boy"'),c("span",{class:"token punctuation"},"]"),c("span",{class:"token punctuation"},";"),p("\nsplices "),c("span",{class:"token operator"},"="),p(" array"),c("span",{class:"token punctuation"},"."),c("span",{class:"token function"},"splice"),c("span",{class:"token punctuation"},"("),c("span",{class:"token operator"},"-"),c("span",{class:"token number"},"3"),c("span",{class:"token punctuation"},","),c("span",{class:"token number"},"1"),c("span",{class:"token punctuation"},","),c("span",{class:"token string"},'"cat"'),c("span",{class:"token punctuation"},")"),c("span",{class:"token punctuation"},";"),p("\nconsole"),c("span",{class:"token punctuation"},"."),c("span",{class:"token function"},"log"),c("span",{class:"token punctuation"},"("),p("array"),c("span",{class:"token punctuation"},")"),c("span",{class:"token punctuation"},";"),p(),c("span",{class:"token comment"},'// ["cat", "boy"]'),p("\nconsole"),c("span",{class:"token punctuation"},"."),c("span",{class:"token function"},"log"),c("span",{class:"token punctuation"},"("),p("splices"),c("span",{class:"token punctuation"},")"),c("span",{class:"token punctuation"},";"),p(),c("span",{class:"token comment"},'// ["apple"], 可见即使-start超出数组长度,数组默认从首位开始删除'),p("\n\narray "),c("span",{class:"token operator"},"="),p(),c("span",{class:"token punctuation"},"["),c("span",{class:"token string"},'"apple"'),c("span",{class:"token punctuation"},","),c("span",{class:"token string"},'"boy"'),c("span",{class:"token punctuation"},"]"),c("span",{class:"token punctuation"},";"),p("\nsplices "),c("span",{class:"token operator"},"="),p(" array"),c("span",{class:"token punctuation"},"."),c("span",{class:"token function"},"splice"),c("span",{class:"token punctuation"},"("),c("span",{class:"token number"},"0"),c("span",{class:"token punctuation"},","),c("span",{class:"token number"},"3"),c("span",{class:"token punctuation"},","),c("span",{class:"token string"},'"cat"'),c("span",{class:"token punctuation"},")"),c("span",{class:"token punctuation"},";"),p("\nconsole"),c("span",{class:"token punctuation"},"."),c("span",{class:"token function"},"log"),c("span",{class:"token punctuation"},"("),p("array"),c("span",{class:"token punctuation"},")"),c("span",{class:"token punctuation"},";"),p(),c("span",{class:"token comment"},'// ["cat"]'),p("\nconsole"),c("span",{class:"token punctuation"},"."),c("span",{class:"token function"},"log"),c("span",{class:"token punctuation"},"("),p("splices"),c("span",{class:"token punctuation"},")"),c("span",{class:"token punctuation"},";"),p(),c("span",{class:"token comment"},'// ["apple", "boy"], 可见当deleteCount大于数组start之后的元素总和时,start及之后的元素都将被删除'),p("\n")])]),c("div",{class:"line-numbers-wrapper"},[c("span",{class:"line-number"},"1"),c("br"),c("span",{class:"line-number"},"2"),c("br"),c("span",{class:"line-number"},"3"),c("br"),c("span",{class:"line-number"},"4"),c("br"),c("span",{class:"line-number"},"5"),c("br"),c("span",{class:"line-number"},"6"),c("br"),c("span",{class:"line-number"},"7"),c("br"),c("span",{class:"line-number"},"8"),c("br"),c("span",{class:"line-number"},"9"),c("br"),c("span",{class:"line-number"},"10"),c("br"),c("span",{class:"line-number"},"11"),c("br"),c("span",{class:"line-number"},"12"),c("br"),c("span",{class:"line-number"},"13"),c("br"),c("span",{class:"line-number"},"14"),c("br"),c("span",{class:"line-number"},"15"),c("br"),c("span",{class:"line-number"},"16"),c("br"),c("span",{class:"line-number"},"17"),c("br"),c("span",{class:"line-number"},"18"),c("br"),c("span",{class:"line-number"},"19"),c("br"),c("span",{class:"line-number"},"20"),c("br"),c("span",{class:"line-number"},"21"),c("br"),c("span",{class:"line-number"},"22"),c("br"),c("span",{class:"line-number"},"23"),c("br"),c("span",{class:"line-number"},"24"),c("br")])],-1),ms=c("p",null,"splice一样受益于鸭式辨型, 比如:",-1),ds=c("div",{class:"language-js line-numbers-mode"},[c("pre",null,[c("code",null,[c("span",{class:"token keyword"},"var"),p(" o "),c("span",{class:"token operator"},"="),p(),c("span",{class:"token punctuation"},"{"),c("span",{class:"token number"},"0"),c("span",{class:"token operator"},":"),c("span",{class:"token string"},'"apple"'),c("span",{class:"token punctuation"},","),c("span",{class:"token number"},"1"),c("span",{class:"token operator"},":"),c("span",{class:"token string"},'"boy"'),c("span",{class:"token punctuation"},","),p("length"),c("span",{class:"token operator"},":"),c("span",{class:"token number"},"2"),c("span",{class:"token punctuation"},"}"),c("span",{class:"token punctuation"},";"),p("\n"),c("span",{class:"token keyword"},"var"),p(" splices "),c("span",{class:"token operator"},"="),p(),c("span",{class:"token class-name"},"Array"),c("span",{class:"token punctuation"},"."),p("prototype"),c("span",{class:"token punctuation"},"."),c("span",{class:"token function"},"splice"),c("span",{class:"token punctuation"},"."),c("span",{class:"token function"},"call"),c("span",{class:"token punctuation"},"("),p("o"),c("span",{class:"token punctuation"},","),c("span",{class:"token number"},"1"),c("span",{class:"token punctuation"},","),c("span",{class:"token number"},"1"),c("span",{class:"token punctuation"},")"),c("span",{class:"token punctuation"},";"),p("\nconsole"),c("span",{class:"token punctuation"},"."),c("span",{class:"token function"},"log"),c("span",{class:"token punctuation"},"("),p("o"),c("span",{class:"token punctuation"},")"),c("span",{class:"token punctuation"},";"),p(),c("span",{class:"token comment"},'// Object {0: "apple", length: 1}, 可见对象o删除了一个属性,并且length-1'),p("\nconsole"),c("span",{class:"token punctuation"},"."),c("span",{class:"token function"},"log"),c("span",{class:"token punctuation"},"("),p("splices"),c("span",{class:"token punctuation"},")"),c("span",{class:"token punctuation"},";"),p(),c("span",{class:"token comment"},'// ["boy"]'),p("\n")])]),c("div",{class:"line-numbers-wrapper"},[c("span",{class:"line-number"},"1"),c("br"),c("span",{class:"line-number"},"2"),c("br"),c("span",{class:"line-number"},"3"),c("br"),c("span",{class:"line-number"},"4"),c("br")])],-1),fs=c("blockquote",null,[c("p",null,"注意：如果类数组对象没有length属性，splice将为该类数组对象添加length属性，并初始化为0。")],-1),gs=c("p",null,"如果需要删除数组中一个已存在的元素，可参考如下：",-1),ys=c("div",{class:"language-js line-numbers-mode"},[c("pre",null,[c("code",null,[c("span",{class:"token keyword"},"var"),p(" array "),c("span",{class:"token operator"},"="),p(),c("span",{class:"token punctuation"},"["),c("span",{class:"token string"},"'a'"),c("span",{class:"token punctuation"},","),c("span",{class:"token string"},"'b'"),c("span",{class:"token punctuation"},","),c("span",{class:"token string"},"'c'"),c("span",{class:"token punctuation"},"]"),c("span",{class:"token punctuation"},";"),p("\narray"),c("span",{class:"token punctuation"},"."),c("span",{class:"token function"},"splice"),c("span",{class:"token punctuation"},"("),p("array"),c("span",{class:"token punctuation"},"."),c("span",{class:"token function"},"indexOf"),c("span",{class:"token punctuation"},"("),c("span",{class:"token string"},"'b'"),c("span",{class:"token punctuation"},")"),c("span",{class:"token punctuation"},","),c("span",{class:"token number"},"1"),c("span",{class:"token punctuation"},")"),c("span",{class:"token punctuation"},";"),p("\n")])]),c("div",{class:"line-numbers-wrapper"},[c("span",{class:"line-number"},"1"),c("br"),c("span",{class:"line-number"},"2"),c("br")])],-1),hs=c("h3",{id:"unshift",tabindex:"-1"},[p("unshift "),c("a",{class:"header-anchor",href:"#unshift","aria-hidden":"true"},"#")],-1),vs=c("p",null,"unshift() 方法用于在数组开始处插入一些元素(就像是栈底插入)，并返回数组新的长度。",-1),ws=c("p",null,"语法：arr.unshift(element1, …, elementN)",-1),As=c("div",{class:"language-js line-numbers-mode"},[c("pre",null,[c("code",null,[c("span",{class:"token keyword"},"var"),p(" array "),c("span",{class:"token operator"},"="),p(),c("span",{class:"token punctuation"},"["),c("span",{class:"token string"},'"red"'),c("span",{class:"token punctuation"},","),p(),c("span",{class:"token string"},'"green"'),c("span",{class:"token punctuation"},","),p(),c("span",{class:"token string"},'"blue"'),c("span",{class:"token punctuation"},"]"),c("span",{class:"token punctuation"},";"),p("\n"),c("span",{class:"token keyword"},"var"),p(" length "),c("span",{class:"token operator"},"="),p(" array"),c("span",{class:"token punctuation"},"."),c("span",{class:"token function"},"unshift"),c("span",{class:"token punctuation"},"("),c("span",{class:"token string"},'"yellow"'),c("span",{class:"token punctuation"},")"),c("span",{class:"token punctuation"},";"),p("\nconsole"),c("span",{class:"token punctuation"},"."),c("span",{class:"token function"},"log"),c("span",{class:"token punctuation"},"("),p("array"),c("span",{class:"token punctuation"},")"),c("span",{class:"token punctuation"},";"),p(),c("span",{class:"token comment"},'// ["yellow", "red", "green", "blue"]'),p("\nconsole"),c("span",{class:"token punctuation"},"."),c("span",{class:"token function"},"log"),c("span",{class:"token punctuation"},"("),p("length"),c("span",{class:"token punctuation"},")"),c("span",{class:"token punctuation"},";"),p(),c("span",{class:"token comment"},"// 4"),p("\n")])]),c("div",{class:"line-numbers-wrapper"},[c("span",{class:"line-number"},"1"),c("br"),c("span",{class:"line-number"},"2"),c("br"),c("span",{class:"line-number"},"3"),c("br"),c("span",{class:"line-number"},"4"),c("br")])],-1),_s=c("p",null,"如果给unshift方法传入一个数组呢？",-1),js=c("div",{class:"language-js line-numbers-mode"},[c("pre",null,[c("code",null,[c("span",{class:"token keyword"},"var"),p(" array "),c("span",{class:"token operator"},"="),p(),c("span",{class:"token punctuation"},"["),c("span",{class:"token string"},'"red"'),c("span",{class:"token punctuation"},","),p(),c("span",{class:"token string"},'"green"'),c("span",{class:"token punctuation"},","),p(),c("span",{class:"token string"},'"blue"'),c("span",{class:"token punctuation"},"]"),c("span",{class:"token punctuation"},";"),p("\n"),c("span",{class:"token keyword"},"var"),p(" length "),c("span",{class:"token operator"},"="),p(" array"),c("span",{class:"token punctuation"},"."),c("span",{class:"token function"},"unshift"),c("span",{class:"token punctuation"},"("),c("span",{class:"token punctuation"},"["),c("span",{class:"token string"},'"yellow"'),c("span",{class:"token punctuation"},"]"),c("span",{class:"token punctuation"},")"),c("span",{class:"token punctuation"},";"),p("\nconsole"),c("span",{class:"token punctuation"},"."),c("span",{class:"token function"},"log"),c("span",{class:"token punctuation"},"("),p("array"),c("span",{class:"token punctuation"},")"),c("span",{class:"token punctuation"},";"),p(),c("span",{class:"token comment"},'// [["yellow"], "red", "green", "blue"]'),p("\nconsole"),c("span",{class:"token punctuation"},"."),c("span",{class:"token function"},"log"),c("span",{class:"token punctuation"},"("),p("length"),c("span",{class:"token punctuation"},")"),c("span",{class:"token punctuation"},";"),p(),c("span",{class:"token comment"},"// 4, 可见数组也能成功插入"),p("\n")])]),c("div",{class:"line-numbers-wrapper"},[c("span",{class:"line-number"},"1"),c("br"),c("span",{class:"line-number"},"2"),c("br"),c("span",{class:"line-number"},"3"),c("br"),c("span",{class:"line-number"},"4"),c("br")])],-1),Ss=c("p",null,"同上，unshift也受益于鸭式辨型",-1),xs=c("div",{class:"language-js line-numbers-mode"},[c("pre",null,[c("code",null,[c("span",{class:"token keyword"},"var"),p(" o "),c("span",{class:"token operator"},"="),p(),c("span",{class:"token punctuation"},"{"),c("span",{class:"token number"},"0"),c("span",{class:"token operator"},":"),c("span",{class:"token string"},'"red"'),c("span",{class:"token punctuation"},","),p(),c("span",{class:"token number"},"1"),c("span",{class:"token operator"},":"),c("span",{class:"token string"},'"green"'),c("span",{class:"token punctuation"},","),p(),c("span",{class:"token number"},"2"),c("span",{class:"token operator"},":"),c("span",{class:"token string"},'"blue"'),c("span",{class:"token punctuation"},","),p("length"),c("span",{class:"token operator"},":"),c("span",{class:"token number"},"3"),c("span",{class:"token punctuation"},"}"),c("span",{class:"token punctuation"},";"),p("\n"),c("span",{class:"token keyword"},"var"),p(" length "),c("span",{class:"token operator"},"="),p(),c("span",{class:"token class-name"},"Array"),c("span",{class:"token punctuation"},"."),p("prototype"),c("span",{class:"token punctuation"},"."),c("span",{class:"token function"},"unshift"),c("span",{class:"token punctuation"},"."),c("span",{class:"token function"},"call"),c("span",{class:"token punctuation"},"("),p("o"),c("span",{class:"token punctuation"},","),c("span",{class:"token string"},'"gray"'),c("span",{class:"token punctuation"},")"),c("span",{class:"token punctuation"},";"),p("\nconsole"),c("span",{class:"token punctuation"},"."),c("span",{class:"token function"},"log"),c("span",{class:"token punctuation"},"("),p("o"),c("span",{class:"token punctuation"},")"),c("span",{class:"token punctuation"},";"),p(),c("span",{class:"token comment"},'// Object {0: "gray", 1: "red", 2: "green", 3: "blue", length: 4}'),p("\nconsole"),c("span",{class:"token punctuation"},"."),c("span",{class:"token function"},"log"),c("span",{class:"token punctuation"},"("),p("length"),c("span",{class:"token punctuation"},")"),c("span",{class:"token punctuation"},";"),p(),c("span",{class:"token comment"},"// 4"),p("\n")])]),c("div",{class:"line-numbers-wrapper"},[c("span",{class:"line-number"},"1"),c("br"),c("span",{class:"line-number"},"2"),c("br"),c("span",{class:"line-number"},"3"),c("br"),c("span",{class:"line-number"},"4"),c("br")])],-1),Es=c("blockquote",null,[c("p",null,'注意：如果类数组对象不指定length属性，则返回结果是这样的 Object {0: "gray", 1: "green", 2: "blue", length: 1}，shift会认为数组长度为0，此时将从对象下标为0的位置开始插入，相应位置属性将被替换，此时初始化类数组对象的length属性为插入元素个数。')],-1),Os=c("h3",{id:"copywithin-es6",tabindex:"-1"},[p("copyWithin(ES6) "),c("a",{class:"header-anchor",href:"#copywithin-es6","aria-hidden":"true"},"#")],-1),Is=c("p",null,"copyWithin() 方法基于ECMAScript 2015（ES6）规范，用于数组内元素之间的替换，即替换元素和被替换元素均是数组内的元素。",-1),Ts=c("p",null,"语法：arr.copyWithin(target, start[, end = this.length])",-1),Cs=c("ul",null,[c("li",null,"taget 指定被替换元素的索引，start 指定替换元素起始的索引，end 可选，指的是替换元素结束位置的索引。"),c("li",null,"如果start为负，则其指定的索引位置等同于length+start，length为数组的长度。end也是如此。")],-1),Ps=c("div",{class:"language-js line-numbers-mode"},[c("pre",null,[c("code",null,[c("span",{class:"token keyword"},"var"),p(" array "),c("span",{class:"token operator"},"="),p(),c("span",{class:"token punctuation"},"["),c("span",{class:"token number"},"1"),c("span",{class:"token punctuation"},","),c("span",{class:"token number"},"2"),c("span",{class:"token punctuation"},","),c("span",{class:"token number"},"3"),c("span",{class:"token punctuation"},","),c("span",{class:"token number"},"4"),c("span",{class:"token punctuation"},","),c("span",{class:"token number"},"5"),c("span",{class:"token punctuation"},"]"),c("span",{class:"token punctuation"},";"),p("\n"),c("span",{class:"token keyword"},"var"),p(" array2 "),c("span",{class:"token operator"},"="),p(" array"),c("span",{class:"token punctuation"},"."),c("span",{class:"token function"},"copyWithin"),c("span",{class:"token punctuation"},"("),c("span",{class:"token number"},"0"),c("span",{class:"token punctuation"},","),c("span",{class:"token number"},"3"),c("span",{class:"token punctuation"},")"),c("span",{class:"token punctuation"},";"),p("\nconsole"),c("span",{class:"token punctuation"},"."),c("span",{class:"token function"},"log"),c("span",{class:"token punctuation"},"("),p("array"),c("span",{class:"token operator"},"==="),p("array2"),c("span",{class:"token punctuation"},","),p("array2"),c("span",{class:"token punctuation"},")"),c("span",{class:"token punctuation"},";"),p(),c("span",{class:"token comment"},"// true [4, 5, 3, 4, 5]"),p("\n\n"),c("span",{class:"token keyword"},"var"),p(" array "),c("span",{class:"token operator"},"="),p(),c("span",{class:"token punctuation"},"["),c("span",{class:"token number"},"1"),c("span",{class:"token punctuation"},","),c("span",{class:"token number"},"2"),c("span",{class:"token punctuation"},","),c("span",{class:"token number"},"3"),c("span",{class:"token punctuation"},","),c("span",{class:"token number"},"4"),c("span",{class:"token punctuation"},","),c("span",{class:"token number"},"5"),c("span",{class:"token punctuation"},"]"),c("span",{class:"token punctuation"},";"),p("\nconsole"),c("span",{class:"token punctuation"},"."),c("span",{class:"token function"},"log"),c("span",{class:"token punctuation"},"("),p("array"),c("span",{class:"token punctuation"},"."),c("span",{class:"token function"},"copyWithin"),c("span",{class:"token punctuation"},"("),c("span",{class:"token number"},"0"),c("span",{class:"token punctuation"},","),c("span",{class:"token number"},"3"),c("span",{class:"token punctuation"},","),c("span",{class:"token number"},"4"),c("span",{class:"token punctuation"},")"),c("span",{class:"token punctuation"},")"),c("span",{class:"token punctuation"},";"),p(),c("span",{class:"token comment"},"// [4, 2, 3, 4, 5]"),p("\n\n"),c("span",{class:"token keyword"},"var"),p(" array "),c("span",{class:"token operator"},"="),p(),c("span",{class:"token punctuation"},"["),c("span",{class:"token number"},"1"),c("span",{class:"token punctuation"},","),c("span",{class:"token number"},"2"),c("span",{class:"token punctuation"},","),c("span",{class:"token number"},"3"),c("span",{class:"token punctuation"},","),c("span",{class:"token number"},"4"),c("span",{class:"token punctuation"},","),c("span",{class:"token number"},"5"),c("span",{class:"token punctuation"},"]"),c("span",{class:"token punctuation"},";"),p("\nconsole"),c("span",{class:"token punctuation"},"."),c("span",{class:"token function"},"log"),c("span",{class:"token punctuation"},"("),p("array"),c("span",{class:"token punctuation"},"."),c("span",{class:"token function"},"copyWithin"),c("span",{class:"token punctuation"},"("),c("span",{class:"token number"},"0"),c("span",{class:"token punctuation"},","),c("span",{class:"token operator"},"-"),c("span",{class:"token number"},"2"),c("span",{class:"token punctuation"},","),c("span",{class:"token operator"},"-"),c("span",{class:"token number"},"1"),c("span",{class:"token punctuation"},")"),c("span",{class:"token punctuation"},")"),c("span",{class:"token punctuation"},";"),p(),c("span",{class:"token comment"},"// [4, 2, 3, 4, 5]"),p("\n")])]),c("div",{class:"line-numbers-wrapper"},[c("span",{class:"line-number"},"1"),c("br"),c("span",{class:"line-number"},"2"),c("br"),c("span",{class:"line-number"},"3"),c("br"),c("span",{class:"line-number"},"4"),c("br"),c("span",{class:"line-number"},"5"),c("br"),c("span",{class:"line-number"},"6"),c("br"),c("span",{class:"line-number"},"7"),c("br"),c("span",{class:"line-number"},"8"),c("br"),c("span",{class:"line-number"},"9"),c("br")])],-1),Vs=c("p",null,"copyWithin一样受益于鸭式辨型",-1),qs=c("div",{class:"language-js line-numbers-mode"},[c("pre",null,[c("code",null,[c("span",{class:"token keyword"},"var"),p(" o "),c("span",{class:"token operator"},"="),p(),c("span",{class:"token punctuation"},"{"),c("span",{class:"token number"},"0"),c("span",{class:"token operator"},":"),c("span",{class:"token number"},"1"),c("span",{class:"token punctuation"},","),p(),c("span",{class:"token number"},"1"),c("span",{class:"token operator"},":"),c("span",{class:"token number"},"2"),c("span",{class:"token punctuation"},","),p(),c("span",{class:"token number"},"2"),c("span",{class:"token operator"},":"),c("span",{class:"token number"},"3"),c("span",{class:"token punctuation"},","),p(),c("span",{class:"token number"},"3"),c("span",{class:"token operator"},":"),c("span",{class:"token number"},"4"),c("span",{class:"token punctuation"},","),p(),c("span",{class:"token number"},"4"),c("span",{class:"token operator"},":"),c("span",{class:"token number"},"5"),c("span",{class:"token punctuation"},","),p("length"),c("span",{class:"token operator"},":"),c("span",{class:"token number"},"5"),c("span",{class:"token punctuation"},"}"),p("\n"),c("span",{class:"token keyword"},"var"),p(" o2 "),c("span",{class:"token operator"},"="),p(),c("span",{class:"token class-name"},"Array"),c("span",{class:"token punctuation"},"."),p("prototype"),c("span",{class:"token punctuation"},"."),c("span",{class:"token function"},"copyWithin"),c("span",{class:"token punctuation"},"."),c("span",{class:"token function"},"call"),c("span",{class:"token punctuation"},"("),p("o"),c("span",{class:"token punctuation"},","),c("span",{class:"token number"},"0"),c("span",{class:"token punctuation"},","),c("span",{class:"token number"},"3"),c("span",{class:"token punctuation"},")"),c("span",{class:"token punctuation"},";"),p("\nconsole"),c("span",{class:"token punctuation"},"."),c("span",{class:"token function"},"log"),c("span",{class:"token punctuation"},"("),p("o"),c("span",{class:"token operator"},"==="),p("o2"),c("span",{class:"token punctuation"},","),p("o2"),c("span",{class:"token punctuation"},")"),c("span",{class:"token punctuation"},";"),p(),c("span",{class:"token comment"},"// true Object { 0=4,  1=5,  2=3,  更多...}"),p("\n")])]),c("div",{class:"line-numbers-wrapper"},[c("span",{class:"line-number"},"1"),c("br"),c("span",{class:"line-number"},"2"),c("br"),c("span",{class:"line-number"},"3"),c("br")])],-1),Ls=c("blockquote",null,[c("p",null,"如果未指定length,则不进行任何操作。上面的例子去掉length: 5,则返回的o===o2,未进行改变")],-1),Ns=c("h3",{id:"fill-es6",tabindex:"-1"},[p("fill(ES6) "),c("a",{class:"header-anchor",href:"#fill-es6","aria-hidden":"true"},"#")],-1),Ms=c("p",null,"fill() 方法基于ECMAScript 2015（ES6）规范，它同样用于数组元素替换，但与copyWithin略有不同，它主要用于将数组指定区间内的元素替换为某个值。",-1),Ws=c("p",null,"语法：arr.fill(value, start[, end = this.length])",-1),Rs=c("ul",null,[c("li",null,"value 指定被替换的值，start 指定替换元素起始的索引，end 可选，指的是替换元素结束位置的索引。"),c("li",null,"如果start为负，则其指定的索引位置等同于length+start，length为数组的长度。end也是如此。")],-1),Ds=c("div",{class:"language-js line-numbers-mode"},[c("pre",null,[c("code",null,[c("span",{class:"token keyword"},"var"),p(" array "),c("span",{class:"token operator"},"="),p(),c("span",{class:"token punctuation"},"["),c("span",{class:"token number"},"1"),c("span",{class:"token punctuation"},","),c("span",{class:"token number"},"2"),c("span",{class:"token punctuation"},","),c("span",{class:"token number"},"3"),c("span",{class:"token punctuation"},","),c("span",{class:"token number"},"4"),c("span",{class:"token punctuation"},","),c("span",{class:"token number"},"5"),c("span",{class:"token punctuation"},"]"),c("span",{class:"token punctuation"},";"),p("\n"),c("span",{class:"token keyword"},"var"),p(" array2 "),c("span",{class:"token operator"},"="),p(" array"),c("span",{class:"token punctuation"},"."),c("span",{class:"token function"},"fill"),c("span",{class:"token punctuation"},"("),c("span",{class:"token number"},"10"),c("span",{class:"token punctuation"},","),c("span",{class:"token number"},"0"),c("span",{class:"token punctuation"},","),c("span",{class:"token number"},"3"),c("span",{class:"token punctuation"},")"),c("span",{class:"token punctuation"},";"),p("\nconsole"),c("span",{class:"token punctuation"},"."),c("span",{class:"token function"},"log"),c("span",{class:"token punctuation"},"("),p("array"),c("span",{class:"token operator"},"==="),p("array2"),c("span",{class:"token punctuation"},","),p("array2"),c("span",{class:"token punctuation"},")"),c("span",{class:"token punctuation"},";"),p(),c("span",{class:"token comment"},"// true [10, 10, 10, 4, 5], 可见数组区间[0,3]的元素全部替换为10"),p("\n"),c("span",{class:"token comment"},"// 其他的举例请参考copyWithin"),p("\n")])]),c("div",{class:"line-numbers-wrapper"},[c("span",{class:"line-number"},"1"),c("br"),c("span",{class:"line-number"},"2"),c("br"),c("span",{class:"line-number"},"3"),c("br"),c("span",{class:"line-number"},"4"),c("br")])],-1),Fs=c("p",null,"fill 一样受益于鸭式辨型",-1),Js=c("div",{class:"language-js line-numbers-mode"},[c("pre",null,[c("code",null,[c("span",{class:"token keyword"},"var"),p(" o "),c("span",{class:"token operator"},"="),p(),c("span",{class:"token punctuation"},"{"),c("span",{class:"token number"},"0"),c("span",{class:"token operator"},":"),c("span",{class:"token number"},"1"),c("span",{class:"token punctuation"},","),p(),c("span",{class:"token number"},"1"),c("span",{class:"token operator"},":"),c("span",{class:"token number"},"2"),c("span",{class:"token punctuation"},","),p(),c("span",{class:"token number"},"2"),c("span",{class:"token operator"},":"),c("span",{class:"token number"},"3"),c("span",{class:"token punctuation"},","),p(),c("span",{class:"token number"},"3"),c("span",{class:"token operator"},":"),c("span",{class:"token number"},"4"),c("span",{class:"token punctuation"},","),p(),c("span",{class:"token number"},"4"),c("span",{class:"token operator"},":"),c("span",{class:"token number"},"5"),c("span",{class:"token punctuation"},","),p("length"),c("span",{class:"token operator"},":"),c("span",{class:"token number"},"5"),c("span",{class:"token punctuation"},"}"),p("\n"),c("span",{class:"token keyword"},"var"),p(" o2 "),c("span",{class:"token operator"},"="),p(),c("span",{class:"token class-name"},"Array"),c("span",{class:"token punctuation"},"."),p("prototype"),c("span",{class:"token punctuation"},"."),c("span",{class:"token function"},"fill"),c("span",{class:"token punctuation"},"."),c("span",{class:"token function"},"call"),c("span",{class:"token punctuation"},"("),p("o"),c("span",{class:"token punctuation"},","),c("span",{class:"token number"},"10"),c("span",{class:"token punctuation"},","),c("span",{class:"token number"},"0"),c("span",{class:"token punctuation"},","),c("span",{class:"token number"},"2"),c("span",{class:"token punctuation"},")"),c("span",{class:"token punctuation"},";"),p("\nconsole"),c("span",{class:"token punctuation"},"."),c("span",{class:"token function"},"log"),c("span",{class:"token punctuation"},"("),p("o"),c("span",{class:"token operator"},"==="),p("o2"),c("span",{class:"token punctuation"},","),p("o2"),c("span",{class:"token punctuation"},")"),c("span",{class:"token punctuation"},";"),p(),c("span",{class:"token boolean"},"true"),p(" Object "),c("span",{class:"token punctuation"},"{"),p(),c("span",{class:"token number"},"0"),c("span",{class:"token operator"},"="),c("span",{class:"token number"},"10"),c("span",{class:"token punctuation"},","),p("  "),c("span",{class:"token number"},"1"),c("span",{class:"token operator"},"="),c("span",{class:"token number"},"10"),c("span",{class:"token punctuation"},","),p("  "),c("span",{class:"token number"},"2"),c("span",{class:"token operator"},"="),c("span",{class:"token number"},"3"),c("span",{class:"token punctuation"},","),p("  更多"),c("span",{class:"token operator"},"..."),c("span",{class:"token punctuation"},"}"),p("\n")])]),c("div",{class:"line-numbers-wrapper"},[c("span",{class:"line-number"},"1"),c("br"),c("span",{class:"line-number"},"2"),c("br"),c("span",{class:"line-number"},"3"),c("br")])],-1),zs=c("blockquote",null,[c("p",null,"如果未指定length,则不进行任何操作。上面的例子去掉length: 5,则返回的o===o2,未进行改变")],-1),Bs=c("h2",{id:"不会改变自身的方法-9个",tabindex:"-1"},[p("不会改变自身的方法(9个) "),c("a",{class:"header-anchor",href:"#不会改变自身的方法-9个","aria-hidden":"true"},"#")],-1),Ks=c("p",null,"基于ES7，不会改变自身的方法一共有9个，分别为concat、join、slice、toString、toLocateString、indexOf、lastIndexOf、未标准的toSource以及ES7新增的方法includes。",-1),Gs=c("h3",{id:"concat",tabindex:"-1"},[p("concat "),c("a",{class:"header-anchor",href:"#concat","aria-hidden":"true"},"#")],-1),Hs=c("p",null,"concat() 方法将传入的数组或者元素与原数组合并，组成一个新的数组并返回。",-1),Us=c("p",null,"语法：arr.concat(value1, value2, …, valueN)",-1),Qs=c("div",{class:"language-js line-numbers-mode"},[c("pre",null,[c("code",null,[c("span",{class:"token keyword"},"var"),p(" array "),c("span",{class:"token operator"},"="),p(),c("span",{class:"token punctuation"},"["),c("span",{class:"token number"},"1"),c("span",{class:"token punctuation"},","),p(),c("span",{class:"token number"},"2"),c("span",{class:"token punctuation"},","),p(),c("span",{class:"token number"},"3"),c("span",{class:"token punctuation"},"]"),c("span",{class:"token punctuation"},";"),p("\n"),c("span",{class:"token keyword"},"var"),p(" array2 "),c("span",{class:"token operator"},"="),p(" array"),c("span",{class:"token punctuation"},"."),c("span",{class:"token function"},"concat"),c("span",{class:"token punctuation"},"("),c("span",{class:"token number"},"4"),c("span",{class:"token punctuation"},","),c("span",{class:"token punctuation"},"["),c("span",{class:"token number"},"5"),c("span",{class:"token punctuation"},","),c("span",{class:"token number"},"6"),c("span",{class:"token punctuation"},"]"),c("span",{class:"token punctuation"},","),c("span",{class:"token punctuation"},"["),c("span",{class:"token number"},"7"),c("span",{class:"token punctuation"},","),c("span",{class:"token number"},"8"),c("span",{class:"token punctuation"},","),c("span",{class:"token number"},"9"),c("span",{class:"token punctuation"},"]"),c("span",{class:"token punctuation"},")"),c("span",{class:"token punctuation"},";"),p("\nconsole"),c("span",{class:"token punctuation"},"."),c("span",{class:"token function"},"log"),c("span",{class:"token punctuation"},"("),p("array2"),c("span",{class:"token punctuation"},")"),c("span",{class:"token punctuation"},";"),p(),c("span",{class:"token comment"},"// [1, 2, 3, 4, 5, 6, 7, 8, 9]"),p("\nconsole"),c("span",{class:"token punctuation"},"."),c("span",{class:"token function"},"log"),c("span",{class:"token punctuation"},"("),p("array"),c("span",{class:"token punctuation"},")"),c("span",{class:"token punctuation"},";"),p(),c("span",{class:"token comment"},"// [1, 2, 3], 可见原数组并未被修改"),p("\n")])]),c("div",{class:"line-numbers-wrapper"},[c("span",{class:"line-number"},"1"),c("br"),c("span",{class:"line-number"},"2"),c("br"),c("span",{class:"line-number"},"3"),c("br"),c("span",{class:"line-number"},"4"),c("br")])],-1),Xs=c("p",null,"若concat方法中不传入参数，那么将基于原数组浅复制生成一个一模一样的新数组（指向新的地址空间）。",-1),Ys=c("div",{class:"language-js line-numbers-mode"},[c("pre",null,[c("code",null,[c("span",{class:"token keyword"},"var"),p(" array "),c("span",{class:"token operator"},"="),p(),c("span",{class:"token punctuation"},"["),c("span",{class:"token punctuation"},"{"),p("a"),c("span",{class:"token operator"},":"),p(),c("span",{class:"token number"},"1"),c("span",{class:"token punctuation"},"}"),c("span",{class:"token punctuation"},"]"),c("span",{class:"token punctuation"},";"),p("\n"),c("span",{class:"token keyword"},"var"),p(" array3 "),c("span",{class:"token operator"},"="),p(" array"),c("span",{class:"token punctuation"},"."),c("span",{class:"token function"},"concat"),c("span",{class:"token punctuation"},"("),c("span",{class:"token punctuation"},")"),c("span",{class:"token punctuation"},";"),p("\nconsole"),c("span",{class:"token punctuation"},"."),c("span",{class:"token function"},"log"),c("span",{class:"token punctuation"},"("),p("array3"),c("span",{class:"token punctuation"},")"),c("span",{class:"token punctuation"},";"),p(),c("span",{class:"token comment"},"// [{a: 1}]"),p("\nconsole"),c("span",{class:"token punctuation"},"."),c("span",{class:"token function"},"log"),c("span",{class:"token punctuation"},"("),p("array3 "),c("span",{class:"token operator"},"==="),p(" array"),c("span",{class:"token punctuation"},")"),c("span",{class:"token punctuation"},";"),p(),c("span",{class:"token comment"},"// false"),p("\nconsole"),c("span",{class:"token punctuation"},"."),c("span",{class:"token function"},"log"),c("span",{class:"token punctuation"},"("),p("array"),c("span",{class:"token punctuation"},"["),c("span",{class:"token number"},"0"),c("span",{class:"token punctuation"},"]"),p(),c("span",{class:"token operator"},"==="),p(" array3"),c("span",{class:"token punctuation"},"["),c("span",{class:"token number"},"0"),c("span",{class:"token punctuation"},"]"),c("span",{class:"token punctuation"},")"),c("span",{class:"token punctuation"},";"),p(),c("span",{class:"token comment"},"// true，新旧数组第一个元素依旧共用一个同一个对象的引用"),p("\narray"),c("span",{class:"token punctuation"},"["),c("span",{class:"token number"},"0"),c("span",{class:"token punctuation"},"]"),c("span",{class:"token punctuation"},"."),p("a "),c("span",{class:"token operator"},"="),p(),c("span",{class:"token string"},"'sdd'"),c("span",{class:"token punctuation"},";"),p("\nconsole"),c("span",{class:"token punctuation"},"."),c("span",{class:"token function"},"log"),c("span",{class:"token punctuation"},"("),p("array3"),c("span",{class:"token punctuation"},")"),c("span",{class:"token punctuation"},";"),p(),c("span",{class:"token comment"},"// [{a: 'sdd}] 浅复制"),p("\n\n"),c("span",{class:"token keyword"},"var"),p(" arr1 "),c("span",{class:"token operator"},"="),p(),c("span",{class:"token punctuation"},"["),c("span",{class:"token number"},"1"),c("span",{class:"token punctuation"},","),p(),c("span",{class:"token number"},"2"),c("span",{class:"token punctuation"},","),p(),c("span",{class:"token number"},"3"),c("span",{class:"token punctuation"},"]"),c("span",{class:"token punctuation"},";"),p("\n"),c("span",{class:"token keyword"},"var"),p(" arr2 "),c("span",{class:"token operator"},"="),p(" arr1"),c("span",{class:"token punctuation"},"."),c("span",{class:"token function"},"concat"),c("span",{class:"token punctuation"},"("),c("span",{class:"token punctuation"},")"),c("span",{class:"token punctuation"},";"),p("\nconsole"),c("span",{class:"token punctuation"},"."),c("span",{class:"token function"},"log"),c("span",{class:"token punctuation"},"("),p("arr2"),c("span",{class:"token punctuation"},")"),c("span",{class:"token punctuation"},";"),p(),c("span",{class:"token comment"},"// [1, 2, 3];"),p("\narr1"),c("span",{class:"token punctuation"},"["),c("span",{class:"token number"},"0"),c("span",{class:"token punctuation"},"]"),p(),c("span",{class:"token operator"},"="),p(),c("span",{class:"token string"},"'122'"),c("span",{class:"token punctuation"},";"),p("\nconsole"),c("span",{class:"token punctuation"},"."),c("span",{class:"token function"},"log"),c("span",{class:"token punctuation"},"("),p("arr2"),c("span",{class:"token punctuation"},")"),c("span",{class:"token punctuation"},";"),p(),c("span",{class:"token comment"},"// [1, 2, 3]; 浅复制"),p("\n")])]),c("div",{class:"line-numbers-wrapper"},[c("span",{class:"line-number"},"1"),c("br"),c("span",{class:"line-number"},"2"),c("br"),c("span",{class:"line-number"},"3"),c("br"),c("span",{class:"line-number"},"4"),c("br"),c("span",{class:"line-number"},"5"),c("br"),c("span",{class:"line-number"},"6"),c("br"),c("span",{class:"line-number"},"7"),c("br"),c("span",{class:"line-number"},"8"),c("br"),c("span",{class:"line-number"},"9"),c("br"),c("span",{class:"line-number"},"10"),c("br"),c("span",{class:"line-number"},"11"),c("br"),c("span",{class:"line-number"},"12"),c("br"),c("span",{class:"line-number"},"13"),c("br")])],-1),Zs=c("p",null,"concat 一样受益于鸭式辨型，但其效果可能达不到我们的期望",-1),$s=c("div",{class:"language-js line-numbers-mode"},[c("pre",null,[c("code",null,[c("span",{class:"token keyword"},"var"),p(" o "),c("span",{class:"token operator"},"="),p(),c("span",{class:"token punctuation"},"{"),c("span",{class:"token number"},"0"),c("span",{class:"token operator"},":"),c("span",{class:"token string"},'"a"'),c("span",{class:"token punctuation"},","),p(),c("span",{class:"token number"},"1"),c("span",{class:"token operator"},":"),c("span",{class:"token string"},'"b"'),c("span",{class:"token punctuation"},","),p(),c("span",{class:"token number"},"2"),c("span",{class:"token operator"},":"),c("span",{class:"token string"},'"c"'),c("span",{class:"token punctuation"},","),p("length"),c("span",{class:"token operator"},":"),c("span",{class:"token number"},"3"),c("span",{class:"token punctuation"},"}"),c("span",{class:"token punctuation"},";"),p("\n"),c("span",{class:"token keyword"},"var"),p(" o2 "),c("span",{class:"token operator"},"="),p(),c("span",{class:"token class-name"},"Array"),c("span",{class:"token punctuation"},"."),p("prototype"),c("span",{class:"token punctuation"},"."),c("span",{class:"token function"},"concat"),c("span",{class:"token punctuation"},"."),c("span",{class:"token function"},"call"),c("span",{class:"token punctuation"},"("),p("o"),c("span",{class:"token punctuation"},","),c("span",{class:"token string"},"'d'"),c("span",{class:"token punctuation"},","),c("span",{class:"token punctuation"},"{"),c("span",{class:"token number"},"3"),c("span",{class:"token operator"},":"),c("span",{class:"token string"},"'e'"),c("span",{class:"token punctuation"},","),c("span",{class:"token number"},"4"),c("span",{class:"token operator"},":"),c("span",{class:"token string"},"'f'"),c("span",{class:"token punctuation"},","),p("length"),c("span",{class:"token operator"},":"),c("span",{class:"token number"},"2"),c("span",{class:"token punctuation"},"}"),c("span",{class:"token punctuation"},","),c("span",{class:"token punctuation"},"["),c("span",{class:"token string"},"'g'"),c("span",{class:"token punctuation"},","),c("span",{class:"token string"},"'h'"),c("span",{class:"token punctuation"},","),c("span",{class:"token string"},"'i'"),c("span",{class:"token punctuation"},"]"),c("span",{class:"token punctuation"},")"),c("span",{class:"token punctuation"},";"),p("\nconsole"),c("span",{class:"token punctuation"},"."),c("span",{class:"token function"},"log"),c("span",{class:"token punctuation"},"("),p("o2"),c("span",{class:"token punctuation"},")"),c("span",{class:"token punctuation"},";"),p(),c("span",{class:"token comment"},"// [{0:\"a\", 1:\"b\", 2:\"c\", length:3}, 'd', {3:'e', 4:'f', length:2}, 'g', 'h', 'i']"),p("\n"),c("span",{class:"token keyword"},"var"),p(" o3 "),c("span",{class:"token operator"},"="),p(),c("span",{class:"token class-name"},"Array"),c("span",{class:"token punctuation"},"."),p("prototype"),c("span",{class:"token punctuation"},"."),c("span",{class:"token function"},"concat"),c("span",{class:"token punctuation"},"."),c("span",{class:"token function"},"call"),c("span",{class:"token punctuation"},"("),p("o"),c("span",{class:"token punctuation"},")"),c("span",{class:"token punctuation"},";"),p("\nconsole"),c("span",{class:"token punctuation"},"."),c("span",{class:"token function"},"log"),c("span",{class:"token punctuation"},"("),p("o3"),c("span",{class:"token punctuation"},")"),c("span",{class:"token punctuation"},";"),p(),c("span",{class:"token comment"},'// [{0:"a", 1:"b", 2:"c",length:3}]'),p("\n")])]),c("div",{class:"line-numbers-wrapper"},[c("span",{class:"line-number"},"1"),c("br"),c("span",{class:"line-number"},"2"),c("br"),c("span",{class:"line-number"},"3"),c("br"),c("span",{class:"line-number"},"4"),c("br"),c("span",{class:"line-number"},"5"),c("br")])],-1),na=c("p",null,"可见，类数组对象合并后返回的是依然是数组，并不是我们期望的对象",-1),sa=c("h3",{id:"join",tabindex:"-1"},[p("join "),c("a",{class:"header-anchor",href:"#join","aria-hidden":"true"},"#")],-1),aa=c("p",null,"join() 方法将数组中的所有元素连接成一个字符串。",-1),ta=c("p",null,"语法：arr.join([separator = ‘,’]) separator可选，缺省默认为逗号。",-1),oa=c("div",{class:"language-js line-numbers-mode"},[c("pre",null,[c("code",null,[c("span",{class:"token keyword"},"var"),p(" array "),c("span",{class:"token operator"},"="),p(),c("span",{class:"token punctuation"},"["),c("span",{class:"token string"},"'We'"),c("span",{class:"token punctuation"},","),p(),c("span",{class:"token string"},"'are'"),c("span",{class:"token punctuation"},","),p(),c("span",{class:"token string"},"'Chinese'"),c("span",{class:"token punctuation"},"]"),c("span",{class:"token punctuation"},";"),p("\nconsole"),c("span",{class:"token punctuation"},"."),c("span",{class:"token function"},"log"),c("span",{class:"token punctuation"},"("),p("array"),c("span",{class:"token punctuation"},"."),c("span",{class:"token function"},"join"),c("span",{class:"token punctuation"},"("),c("span",{class:"token punctuation"},")"),c("span",{class:"token punctuation"},")"),c("span",{class:"token punctuation"},";"),p(),c("span",{class:"token comment"},'// "We,are,Chinese"'),p("\nconsole"),c("span",{class:"token punctuation"},"."),c("span",{class:"token function"},"log"),c("span",{class:"token punctuation"},"("),p("array"),c("span",{class:"token punctuation"},"."),c("span",{class:"token function"},"join"),c("span",{class:"token punctuation"},"("),c("span",{class:"token string"},"'+'"),c("span",{class:"token punctuation"},")"),c("span",{class:"token punctuation"},")"),c("span",{class:"token punctuation"},";"),p(),c("span",{class:"token comment"},'// "We+are+Chinese"'),p("\nconsole"),c("span",{class:"token punctuation"},"."),c("span",{class:"token function"},"log"),c("span",{class:"token punctuation"},"("),p("array"),c("span",{class:"token punctuation"},"."),c("span",{class:"token function"},"join"),c("span",{class:"token punctuation"},"("),c("span",{class:"token string"},"''"),c("span",{class:"token punctuation"},")"),c("span",{class:"token punctuation"},")"),c("span",{class:"token punctuation"},";"),p(),c("span",{class:"token comment"},'// "WeareChinese"'),p("\n")])]),c("div",{class:"line-numbers-wrapper"},[c("span",{class:"line-number"},"1"),c("br"),c("span",{class:"line-number"},"2"),c("br"),c("span",{class:"line-number"},"3"),c("br"),c("span",{class:"line-number"},"4"),c("br")])],-1),ea=c("p",null,"join 一样受益于鸭式辨型",-1),ca=c("div",{class:"language-js line-numbers-mode"},[c("pre",null,[c("code",null,[c("span",{class:"token keyword"},"var"),p(" o "),c("span",{class:"token operator"},"="),p(),c("span",{class:"token punctuation"},"{"),c("span",{class:"token number"},"0"),c("span",{class:"token operator"},":"),c("span",{class:"token string"},'"We"'),c("span",{class:"token punctuation"},","),p(),c("span",{class:"token number"},"1"),c("span",{class:"token operator"},":"),c("span",{class:"token string"},'"are"'),c("span",{class:"token punctuation"},","),p(),c("span",{class:"token number"},"2"),c("span",{class:"token operator"},":"),c("span",{class:"token string"},'"Chinese"'),c("span",{class:"token punctuation"},","),p(" length"),c("span",{class:"token operator"},":"),c("span",{class:"token number"},"3"),c("span",{class:"token punctuation"},"}"),c("span",{class:"token punctuation"},";"),p("\nconsole"),c("span",{class:"token punctuation"},"."),c("span",{class:"token function"},"log"),c("span",{class:"token punctuation"},"("),c("span",{class:"token class-name"},"Array"),c("span",{class:"token punctuation"},"."),p("prototype"),c("span",{class:"token punctuation"},"."),c("span",{class:"token function"},"join"),c("span",{class:"token punctuation"},"."),c("span",{class:"token function"},"call"),c("span",{class:"token punctuation"},"("),p("o"),c("span",{class:"token punctuation"},","),c("span",{class:"token string"},"'+'"),c("span",{class:"token punctuation"},")"),c("span",{class:"token punctuation"},")"),c("span",{class:"token punctuation"},";"),p(),c("span",{class:"token comment"},'// "We+are+Chinese"'),p("\nconsole"),c("span",{class:"token punctuation"},"."),c("span",{class:"token function"},"log"),c("span",{class:"token punctuation"},"("),c("span",{class:"token class-name"},"Array"),c("span",{class:"token punctuation"},"."),p("prototype"),c("span",{class:"token punctuation"},"."),c("span",{class:"token function"},"join"),c("span",{class:"token punctuation"},"."),c("span",{class:"token function"},"call"),c("span",{class:"token punctuation"},"("),c("span",{class:"token string"},"'abc'"),c("span",{class:"token punctuation"},")"),c("span",{class:"token punctuation"},")"),c("span",{class:"token punctuation"},";"),p(),c("span",{class:"token comment"},'// "a,b,c"'),p("\n")])]),c("div",{class:"line-numbers-wrapper"},[c("span",{class:"line-number"},"1"),c("br"),c("span",{class:"line-number"},"2"),c("br"),c("span",{class:"line-number"},"3"),c("br")])],-1),pa=c("h3",{id:"slice",tabindex:"-1"},[p("slice "),c("a",{class:"header-anchor",href:"#slice","aria-hidden":"true"},"#")],-1),la=c("p",null,"slice() 方法将数组中一部分元素浅复制存入新的数组对象，并且返回这个数组对象。",-1),ua=c("p",null,"语法：arr.slice([start[, end]])",-1),ra=c("p",null,"参数 start 指定复制开始位置的索引，end如果有值则表示复制结束位置的索引（不包括此位置）。",-1),ia=c("p",null,"如果 start 的值为负数，假如数组长度为 length，则表示从 length+start 的位置开始复制，此时参数 end 如果有值，只能是比 start 大的负数，否则将返回空数组。",-1),ka=c("p",null,"slice方法参数为空时，同concat方法一样，都是浅复制生成一个新数组。",-1),ba=c("div",{class:"language-js line-numbers-mode"},[c("pre",null,[c("code",null,[c("span",{class:"token keyword"},"var"),p(" array "),c("span",{class:"token operator"},"="),p(),c("span",{class:"token punctuation"},"["),c("span",{class:"token string"},'"one"'),c("span",{class:"token punctuation"},","),p(),c("span",{class:"token string"},'"two"'),c("span",{class:"token punctuation"},","),p(),c("span",{class:"token string"},'"three"'),c("span",{class:"token punctuation"},","),c("span",{class:"token string"},'"four"'),c("span",{class:"token punctuation"},","),p(),c("span",{class:"token string"},'"five"'),c("span",{class:"token punctuation"},"]"),c("span",{class:"token punctuation"},";"),p("\nconsole"),c("span",{class:"token punctuation"},"."),c("span",{class:"token function"},"log"),c("span",{class:"token punctuation"},"("),p("array"),c("span",{class:"token punctuation"},"."),c("span",{class:"token function"},"slice"),c("span",{class:"token punctuation"},"("),c("span",{class:"token punctuation"},")"),c("span",{class:"token punctuation"},")"),c("span",{class:"token punctuation"},";"),p(),c("span",{class:"token comment"},'// ["one", "two", "three","four", "five"]'),p("\nconsole"),c("span",{class:"token punctuation"},"."),c("span",{class:"token function"},"log"),c("span",{class:"token punctuation"},"("),p("array"),c("span",{class:"token punctuation"},"."),c("span",{class:"token function"},"slice"),c("span",{class:"token punctuation"},"("),c("span",{class:"token number"},"2"),c("span",{class:"token punctuation"},","),c("span",{class:"token number"},"3"),c("span",{class:"token punctuation"},")"),c("span",{class:"token punctuation"},")"),c("span",{class:"token punctuation"},";"),p(),c("span",{class:"token comment"},'// ["three"]'),p("\n")])]),c("div",{class:"line-numbers-wrapper"},[c("span",{class:"line-number"},"1"),c("br"),c("span",{class:"line-number"},"2"),c("br"),c("span",{class:"line-number"},"3"),c("br")])],-1),ma=c("blockquote",null,[c("p",null,"浅复制 是指当对象的被复制时，只是复制了对象的引用，指向的依然是同一个对象。下面来说明slice为什么是浅复制")],-1),da=c("div",{class:"language-js line-numbers-mode"},[c("pre",null,[c("code",null,[c("span",{class:"token keyword"},"var"),p(" array "),c("span",{class:"token operator"},"="),p(),c("span",{class:"token punctuation"},"["),c("span",{class:"token punctuation"},"{"),p("color"),c("span",{class:"token operator"},":"),c("span",{class:"token string"},'"yellow"'),c("span",{class:"token punctuation"},"}"),c("span",{class:"token punctuation"},","),p(),c("span",{class:"token number"},"2"),c("span",{class:"token punctuation"},","),p(),c("span",{class:"token number"},"3"),c("span",{class:"token punctuation"},"]"),c("span",{class:"token punctuation"},";"),p("\n"),c("span",{class:"token keyword"},"var"),p(" array2 "),c("span",{class:"token operator"},"="),p(" array"),c("span",{class:"token punctuation"},"."),c("span",{class:"token function"},"slice"),c("span",{class:"token punctuation"},"("),c("span",{class:"token number"},"0"),c("span",{class:"token punctuation"},","),c("span",{class:"token number"},"1"),c("span",{class:"token punctuation"},")"),c("span",{class:"token punctuation"},";"),p("\nconsole"),c("span",{class:"token punctuation"},"."),c("span",{class:"token function"},"log"),c("span",{class:"token punctuation"},"("),p("array2"),c("span",{class:"token punctuation"},")"),c("span",{class:"token punctuation"},";"),p(),c("span",{class:"token comment"},'// [{color:"yellow"}]'),p("\narray"),c("span",{class:"token punctuation"},"["),c("span",{class:"token number"},"0"),c("span",{class:"token punctuation"},"]"),c("span",{class:"token punctuation"},"["),c("span",{class:"token string"},'"color"'),c("span",{class:"token punctuation"},"]"),p(),c("span",{class:"token operator"},"="),p(),c("span",{class:"token string"},'"blue"'),c("span",{class:"token punctuation"},";"),p("\nconsole"),c("span",{class:"token punctuation"},"."),c("span",{class:"token function"},"log"),c("span",{class:"token punctuation"},"("),p("array2"),c("span",{class:"token punctuation"},")"),c("span",{class:"token punctuation"},";"),p(),c("span",{class:"token comment"},'// [{color:"bule"}]'),p("\n")])]),c("div",{class:"line-numbers-wrapper"},[c("span",{class:"line-number"},"1"),c("br"),c("span",{class:"line-number"},"2"),c("br"),c("span",{class:"line-number"},"3"),c("br"),c("span",{class:"line-number"},"4"),c("br"),c("span",{class:"line-number"},"5"),c("br")])],-1),fa=c("p",null,"由于slice是浅复制，复制到的对象只是一个引用，改变原数组array的值，array2也随之改变。",-1),ga=c("p",null,"同时，稍微利用下 slice 方法第一个参数为负数时的特性，我们可以非常方便的拿到数组的最后一项元素，如下：",-1),ya=c("div",{class:"language-js line-numbers-mode"},[c("pre",null,[c("code",null,[p("console"),c("span",{class:"token punctuation"},"."),c("span",{class:"token function"},"log"),c("span",{class:"token punctuation"},"("),c("span",{class:"token punctuation"},"["),c("span",{class:"token number"},"1"),c("span",{class:"token punctuation"},","),c("span",{class:"token number"},"2"),c("span",{class:"token punctuation"},","),c("span",{class:"token number"},"3"),c("span",{class:"token punctuation"},"]"),c("span",{class:"token punctuation"},"."),c("span",{class:"token function"},"slice"),c("span",{class:"token punctuation"},"("),c("span",{class:"token operator"},"-"),c("span",{class:"token number"},"1"),c("span",{class:"token punctuation"},")"),c("span",{class:"token punctuation"},")"),c("span",{class:"token punctuation"},";"),c("span",{class:"token comment"},"//[3]"),p("\n")])]),c("div",{class:"line-numbers-wrapper"},[c("span",{class:"line-number"},"1"),c("br")])],-1),ha=c("p",null,"slice 一样受益于鸭式辨型",-1),va=c("div",{class:"language-js line-numbers-mode"},[c("pre",null,[c("code",null,[c("span",{class:"token keyword"},"var"),p(" o "),c("span",{class:"token operator"},"="),p(),c("span",{class:"token punctuation"},"{"),c("span",{class:"token number"},"0"),c("span",{class:"token operator"},":"),c("span",{class:"token punctuation"},"{"),c("span",{class:"token string"},'"color"'),c("span",{class:"token operator"},":"),c("span",{class:"token string"},'"yellow"'),c("span",{class:"token punctuation"},"}"),c("span",{class:"token punctuation"},","),p(),c("span",{class:"token number"},"1"),c("span",{class:"token operator"},":"),c("span",{class:"token number"},"2"),c("span",{class:"token punctuation"},","),p(),c("span",{class:"token number"},"2"),c("span",{class:"token operator"},":"),c("span",{class:"token number"},"3"),c("span",{class:"token punctuation"},","),p(" length"),c("span",{class:"token operator"},":"),c("span",{class:"token number"},"3"),c("span",{class:"token punctuation"},"}"),c("span",{class:"token punctuation"},";"),p("\n"),c("span",{class:"token keyword"},"var"),p(" o2 "),c("span",{class:"token operator"},"="),p(),c("span",{class:"token class-name"},"Array"),c("span",{class:"token punctuation"},"."),p("prototype"),c("span",{class:"token punctuation"},"."),c("span",{class:"token function"},"slice"),c("span",{class:"token punctuation"},"."),c("span",{class:"token function"},"call"),c("span",{class:"token punctuation"},"("),p("o"),c("span",{class:"token punctuation"},","),c("span",{class:"token number"},"0"),c("span",{class:"token punctuation"},","),c("span",{class:"token number"},"1"),c("span",{class:"token punctuation"},")"),c("span",{class:"token punctuation"},";"),p("\nconsole"),c("span",{class:"token punctuation"},"."),c("span",{class:"token function"},"log"),c("span",{class:"token punctuation"},"("),p("o2"),c("span",{class:"token punctuation"},")"),c("span",{class:"token punctuation"},";"),p(),c("span",{class:"token comment"},'// [{color:"yellow"}] ,毫无违和感...'),p("\n")])]),c("div",{class:"line-numbers-wrapper"},[c("span",{class:"line-number"},"1"),c("br"),c("span",{class:"line-number"},"2"),c("br"),c("span",{class:"line-number"},"3"),c("br")])],-1),wa=c("h3",{id:"tostring",tabindex:"-1"},[p("toString "),c("a",{class:"header-anchor",href:"#tostring","aria-hidden":"true"},"#")],-1),Aa=c("p",null,"toString() 方法返回数组的字符串形式，该字符串由数组中的每个元素的 toString() 返回值经调用 join() 方法连接（由逗号隔开）组成。",-1),_a=c("p",null,"语法： arr.toString()",-1),ja=c("div",{class:"language-js line-numbers-mode"},[c("pre",null,[c("code",null,[c("span",{class:"token keyword"},"var"),p(" array "),c("span",{class:"token operator"},"="),p(),c("span",{class:"token punctuation"},"["),c("span",{class:"token string"},"'Jan'"),c("span",{class:"token punctuation"},","),p(),c("span",{class:"token string"},"'Feb'"),c("span",{class:"token punctuation"},","),p(),c("span",{class:"token string"},"'Mar'"),c("span",{class:"token punctuation"},","),p(),c("span",{class:"token string"},"'Apr'"),c("span",{class:"token punctuation"},"]"),c("span",{class:"token punctuation"},";"),p("\n"),c("span",{class:"token keyword"},"var"),p(" str "),c("span",{class:"token operator"},"="),p(" array"),c("span",{class:"token punctuation"},"."),c("span",{class:"token function"},"toString"),c("span",{class:"token punctuation"},"("),c("span",{class:"token punctuation"},")"),c("span",{class:"token punctuation"},";"),p("\nconsole"),c("span",{class:"token punctuation"},"."),c("span",{class:"token function"},"log"),c("span",{class:"token punctuation"},"("),p("str"),c("span",{class:"token punctuation"},")"),c("span",{class:"token punctuation"},";"),p(),c("span",{class:"token comment"},"// Jan,Feb,Mar,Apr"),p("\n")])]),c("div",{class:"line-numbers-wrapper"},[c("span",{class:"line-number"},"1"),c("br"),c("span",{class:"line-number"},"2"),c("br"),c("span",{class:"line-number"},"3"),c("br")])],-1),Sa=c("p",null,"当数组直接和字符串作连接操作时，将会自动调用其toString() 方法。",-1),xa=c("div",{class:"language-js line-numbers-mode"},[c("pre",null,[c("code",null,[c("span",{class:"token keyword"},"var"),p(" str "),c("span",{class:"token operator"},"="),p(),c("span",{class:"token punctuation"},"["),c("span",{class:"token string"},"'Jan'"),c("span",{class:"token punctuation"},","),p(),c("span",{class:"token string"},"'Feb'"),c("span",{class:"token punctuation"},","),p(),c("span",{class:"token string"},"'Mar'"),c("span",{class:"token punctuation"},","),p(),c("span",{class:"token string"},"'Apr'"),c("span",{class:"token punctuation"},"]"),p(),c("span",{class:"token operator"},"+"),p(),c("span",{class:"token string"},"',May'"),c("span",{class:"token punctuation"},";"),p("\nconsole"),c("span",{class:"token punctuation"},"."),c("span",{class:"token function"},"log"),c("span",{class:"token punctuation"},"("),p("str"),c("span",{class:"token punctuation"},")"),c("span",{class:"token punctuation"},";"),p(),c("span",{class:"token comment"},'// "Jan,Feb,Mar,Apr,May"'),p("\n"),c("span",{class:"token comment"},"// 下面我们来试试鸭式辨型"),p("\n"),c("span",{class:"token keyword"},"var"),p(" o "),c("span",{class:"token operator"},"="),p(),c("span",{class:"token punctuation"},"{"),c("span",{class:"token number"},"0"),c("span",{class:"token operator"},":"),c("span",{class:"token string"},"'Jan'"),c("span",{class:"token punctuation"},","),p(),c("span",{class:"token number"},"1"),c("span",{class:"token operator"},":"),c("span",{class:"token string"},"'Feb'"),c("span",{class:"token punctuation"},","),p(),c("span",{class:"token number"},"2"),c("span",{class:"token operator"},":"),c("span",{class:"token string"},"'Mar'"),c("span",{class:"token punctuation"},","),p(" length"),c("span",{class:"token operator"},":"),c("span",{class:"token number"},"3"),c("span",{class:"token punctuation"},"}"),c("span",{class:"token punctuation"},";"),p("\n"),c("span",{class:"token keyword"},"var"),p(" o2 "),c("span",{class:"token operator"},"="),p(),c("span",{class:"token class-name"},"Array"),c("span",{class:"token punctuation"},"."),p("prototype"),c("span",{class:"token punctuation"},"."),c("span",{class:"token function"},"toString"),c("span",{class:"token punctuation"},"."),c("span",{class:"token function"},"call"),c("span",{class:"token punctuation"},"("),p("o"),c("span",{class:"token punctuation"},")"),c("span",{class:"token punctuation"},";"),p("\nconsole"),c("span",{class:"token punctuation"},"."),c("span",{class:"token function"},"log"),c("span",{class:"token punctuation"},"("),p("o2"),c("span",{class:"token punctuation"},")"),c("span",{class:"token punctuation"},";"),p(),c("span",{class:"token comment"},"// [object Object]"),p("\nconsole"),c("span",{class:"token punctuation"},"."),c("span",{class:"token function"},"log"),c("span",{class:"token punctuation"},"("),p("o"),c("span",{class:"token punctuation"},"."),c("span",{class:"token function"},"toString"),c("span",{class:"token punctuation"},"("),c("span",{class:"token punctuation"},")"),c("span",{class:"token operator"},"=="),p("o2"),c("span",{class:"token punctuation"},")"),c("span",{class:"token punctuation"},";"),p(),c("span",{class:"token comment"},"// true"),p("\n")])]),c("div",{class:"line-numbers-wrapper"},[c("span",{class:"line-number"},"1"),c("br"),c("span",{class:"line-number"},"2"),c("br"),c("span",{class:"line-number"},"3"),c("br"),c("span",{class:"line-number"},"4"),c("br"),c("span",{class:"line-number"},"5"),c("br"),c("span",{class:"line-number"},"6"),c("br"),c("span",{class:"line-number"},"7"),c("br")])],-1),Ea=c("p",null,"可见，Array.prototype.toString()方法处理类数组对象时，跟类数组对象直接调用Object.prototype.toString()方法结果完全一致",-1),Oa=c("blockquote",null,[c("p",null,"根据ES5语义，toString() 方法是通用的，可被用于任何对象。如果对象有一个join() 方法，将会被调用，其返回值将被返回，没有则调用Object.prototype.toString()，为此，我们给o对象添加一个join方法。如下：")],-1),Ia=c("div",{class:"language-js line-numbers-mode"},[c("pre",null,[c("code",null,[c("span",{class:"token keyword"},"var"),p(" o "),c("span",{class:"token operator"},"="),p(),c("span",{class:"token punctuation"},"{"),p("\n  "),c("span",{class:"token number"},"0"),c("span",{class:"token operator"},":"),c("span",{class:"token string"},"'Jan'"),c("span",{class:"token punctuation"},","),p("\n  "),c("span",{class:"token number"},"1"),c("span",{class:"token operator"},":"),c("span",{class:"token string"},"'Feb'"),c("span",{class:"token punctuation"},","),p("\n  "),c("span",{class:"token number"},"2"),c("span",{class:"token operator"},":"),c("span",{class:"token string"},"'Mar'"),c("span",{class:"token punctuation"},","),p("\n  length"),c("span",{class:"token operator"},":"),c("span",{class:"token number"},"3"),c("span",{class:"token punctuation"},","),p("\n  "),c("span",{class:"token function-variable function"},"join"),c("span",{class:"token operator"},":"),c("span",{class:"token keyword"},"function"),c("span",{class:"token punctuation"},"("),c("span",{class:"token punctuation"},")"),c("span",{class:"token punctuation"},"{"),p("\n    "),c("span",{class:"token keyword"},"return"),p(),c("span",{class:"token class-name"},"Array"),c("span",{class:"token punctuation"},"."),p("prototype"),c("span",{class:"token punctuation"},"."),c("span",{class:"token function"},"join"),c("span",{class:"token punctuation"},"."),c("span",{class:"token function"},"call"),c("span",{class:"token punctuation"},"("),c("span",{class:"token keyword"},"this"),c("span",{class:"token punctuation"},")"),c("span",{class:"token punctuation"},";"),p("\n  "),c("span",{class:"token punctuation"},"}"),p("\n"),c("span",{class:"token punctuation"},"}"),c("span",{class:"token punctuation"},";"),p("\nconsole"),c("span",{class:"token punctuation"},"."),c("span",{class:"token function"},"log"),c("span",{class:"token punctuation"},"("),c("span",{class:"token class-name"},"Array"),c("span",{class:"token punctuation"},"."),p("prototype"),c("span",{class:"token punctuation"},"."),c("span",{class:"token function"},"toString"),c("span",{class:"token punctuation"},"."),c("span",{class:"token function"},"call"),c("span",{class:"token punctuation"},"("),p("o"),c("span",{class:"token punctuation"},")"),c("span",{class:"token punctuation"},")"),c("span",{class:"token punctuation"},";"),p(),c("span",{class:"token comment"},'// "Jan,Feb,Mar"'),p("\n")])]),c("div",{class:"line-numbers-wrapper"},[c("span",{class:"line-number"},"1"),c("br"),c("span",{class:"line-number"},"2"),c("br"),c("span",{class:"line-number"},"3"),c("br"),c("span",{class:"line-number"},"4"),c("br"),c("span",{class:"line-number"},"5"),c("br"),c("span",{class:"line-number"},"6"),c("br"),c("span",{class:"line-number"},"7"),c("br"),c("span",{class:"line-number"},"8"),c("br"),c("span",{class:"line-number"},"9"),c("br"),c("span",{class:"line-number"},"10"),c("br")])],-1),Ta=c("h3",{id:"tolocalestring",tabindex:"-1"},[p("toLocaleString "),c("a",{class:"header-anchor",href:"#tolocalestring","aria-hidden":"true"},"#")],-1),Ca=c("p",null,"toLocaleString() 类似toString()的变型，该字符串由数组中的每个元素的 toLocaleString() 返回值经调用 join() 方法连接（由逗号隔开）组成。",-1),Pa=c("p",null,"语法：arr.toLocaleString()",-1),Va=c("p",null,"数组中的元素将调用各自的 toLocaleString 方法：",-1),qa=c("ul",null,[c("li",null,"Object：Object.prototype.toLocaleString()"),c("li",null,"Number：Number.prototype.toLocaleString()"),c("li",null,"Date：Date.prototype.toLocaleString()")],-1),La=c("div",{class:"language-js line-numbers-mode"},[c("pre",null,[c("code",null,[c("span",{class:"token keyword"},"var"),p(" array"),c("span",{class:"token operator"},"="),p(),c("span",{class:"token punctuation"},"["),c("span",{class:"token punctuation"},"{"),p("name"),c("span",{class:"token operator"},":"),c("span",{class:"token string"},"'zz'"),c("span",{class:"token punctuation"},"}"),c("span",{class:"token punctuation"},","),p(),c("span",{class:"token number"},"123"),c("span",{class:"token punctuation"},","),p(),c("span",{class:"token string"},'"abc"'),c("span",{class:"token punctuation"},","),p(),c("span",{class:"token keyword"},"new"),p(),c("span",{class:"token class-name"},"Date"),c("span",{class:"token punctuation"},"("),c("span",{class:"token punctuation"},")"),c("span",{class:"token punctuation"},"]"),c("span",{class:"token punctuation"},";"),p("\n"),c("span",{class:"token keyword"},"var"),p(" str "),c("span",{class:"token operator"},"="),p(" array"),c("span",{class:"token punctuation"},"."),c("span",{class:"token function"},"toLocaleString"),c("span",{class:"token punctuation"},"("),c("span",{class:"token punctuation"},")"),c("span",{class:"token punctuation"},";"),p("\nconsole"),c("span",{class:"token punctuation"},"."),c("span",{class:"token function"},"log"),c("span",{class:"token punctuation"},"("),p("str"),c("span",{class:"token punctuation"},")"),c("span",{class:"token punctuation"},";"),p(),c("span",{class:"token comment"},"// [object Object],123,abc,2016/1/5 下午1:06:23"),p("\n")])]),c("div",{class:"line-numbers-wrapper"},[c("span",{class:"line-number"},"1"),c("br"),c("span",{class:"line-number"},"2"),c("br"),c("span",{class:"line-number"},"3"),c("br")])],-1),Na=c("p",null,"其鸭式辨型的写法也同toString 保持一致，如下：",-1),Ma=c("div",{class:"language-js line-numbers-mode"},[c("pre",null,[c("code",null,[c("span",{class:"token keyword"},"var"),p(" o "),c("span",{class:"token operator"},"="),p(),c("span",{class:"token punctuation"},"{"),p("\n  "),c("span",{class:"token number"},"0"),c("span",{class:"token operator"},":"),c("span",{class:"token number"},"123"),c("span",{class:"token punctuation"},","),p("\n  "),c("span",{class:"token number"},"1"),c("span",{class:"token operator"},":"),c("span",{class:"token string"},"'abc'"),c("span",{class:"token punctuation"},","),p("\n  "),c("span",{class:"token number"},"2"),c("span",{class:"token operator"},":"),c("span",{class:"token keyword"},"new"),p(),c("span",{class:"token class-name"},"Date"),c("span",{class:"token punctuation"},"("),c("span",{class:"token punctuation"},")"),c("span",{class:"token punctuation"},","),p("\n  length"),c("span",{class:"token operator"},":"),c("span",{class:"token number"},"3"),c("span",{class:"token punctuation"},","),p("\n  "),c("span",{class:"token function-variable function"},"join"),c("span",{class:"token operator"},":"),c("span",{class:"token keyword"},"function"),c("span",{class:"token punctuation"},"("),c("span",{class:"token punctuation"},")"),c("span",{class:"token punctuation"},"{"),p("\n    "),c("span",{class:"token keyword"},"return"),p(),c("span",{class:"token class-name"},"Array"),c("span",{class:"token punctuation"},"."),p("prototype"),c("span",{class:"token punctuation"},"."),c("span",{class:"token function"},"join"),c("span",{class:"token punctuation"},"."),c("span",{class:"token function"},"call"),c("span",{class:"token punctuation"},"("),c("span",{class:"token keyword"},"this"),c("span",{class:"token punctuation"},")"),c("span",{class:"token punctuation"},";"),p("\n  "),c("span",{class:"token punctuation"},"}"),p("\n"),c("span",{class:"token punctuation"},"}"),c("span",{class:"token punctuation"},";"),p("\nconsole"),c("span",{class:"token punctuation"},"."),c("span",{class:"token function"},"log"),c("span",{class:"token punctuation"},"("),c("span",{class:"token class-name"},"Array"),c("span",{class:"token punctuation"},"."),p("prototype"),c("span",{class:"token punctuation"},"."),c("span",{class:"token function"},"toLocaleString"),c("span",{class:"token punctuation"},"."),c("span",{class:"token function"},"call"),c("span",{class:"token punctuation"},"("),p("o"),c("span",{class:"token punctuation"},")"),c("span",{class:"token punctuation"},")"),c("span",{class:"token punctuation"},";"),p(),c("span",{class:"token comment"},"// 123,abc,2016/1/5 下午1:16:50"),p("\n")])]),c("div",{class:"line-numbers-wrapper"},[c("span",{class:"line-number"},"1"),c("br"),c("span",{class:"line-number"},"2"),c("br"),c("span",{class:"line-number"},"3"),c("br"),c("span",{class:"line-number"},"4"),c("br"),c("span",{class:"line-number"},"5"),c("br"),c("span",{class:"line-number"},"6"),c("br"),c("span",{class:"line-number"},"7"),c("br"),c("span",{class:"line-number"},"8"),c("br"),c("span",{class:"line-number"},"9"),c("br"),c("span",{class:"line-number"},"10"),c("br")])],-1),Wa=c("h3",{id:"indexof",tabindex:"-1"},[p("indexOf "),c("a",{class:"header-anchor",href:"#indexof","aria-hidden":"true"},"#")],-1),Ra=c("p",null,"indexOf() 方法用于查找元素在数组中第一次出现时的索引，如果没有，则返回-1。",-1),Da=c("p",null,"语法：arr.indexOf(element, fromIndex=0)",-1),Fa=c("p",null,"element 为需要查找的元素。",-1),Ja=c("p",null,"fromIndex 为开始查找的位置，缺省默认为0。如果超出数组长度，则返回-1。如果为负值，假设数组长度为length，则从数组的第 length + fromIndex项开始往数组末尾查找，如果length + fromIndex<0 则整个数组都会被查找。",-1),za=c("blockquote",null,[c("p",null,"indexOf使用严格相等（即使用 === 去匹配数组中的元素）")],-1),Ba=c("div",{class:"language-js line-numbers-mode"},[c("pre",null,[c("code",null,[c("span",{class:"token keyword"},"var"),p(" array "),c("span",{class:"token operator"},"="),p(),c("span",{class:"token punctuation"},"["),c("span",{class:"token string"},"'abc'"),c("span",{class:"token punctuation"},","),p(),c("span",{class:"token string"},"'def'"),c("span",{class:"token punctuation"},","),p(),c("span",{class:"token string"},"'ghi'"),c("span",{class:"token punctuation"},","),c("span",{class:"token string"},"'123'"),c("span",{class:"token punctuation"},"]"),c("span",{class:"token punctuation"},";"),p("\nconsole"),c("span",{class:"token punctuation"},"."),c("span",{class:"token function"},"log"),c("span",{class:"token punctuation"},"("),p("array"),c("span",{class:"token punctuation"},"."),c("span",{class:"token function"},"indexOf"),c("span",{class:"token punctuation"},"("),c("span",{class:"token string"},"'def'"),c("span",{class:"token punctuation"},")"),c("span",{class:"token punctuation"},")"),c("span",{class:"token punctuation"},";"),p(),c("span",{class:"token comment"},"// 1"),p("\nconsole"),c("span",{class:"token punctuation"},"."),c("span",{class:"token function"},"log"),c("span",{class:"token punctuation"},"("),p("array"),c("span",{class:"token punctuation"},"."),c("span",{class:"token function"},"indexOf"),c("span",{class:"token punctuation"},"("),c("span",{class:"token string"},"'def'"),c("span",{class:"token punctuation"},","),c("span",{class:"token operator"},"-"),c("span",{class:"token number"},"1"),c("span",{class:"token punctuation"},")"),c("span",{class:"token punctuation"},")"),c("span",{class:"token punctuation"},";"),p(),c("span",{class:"token comment"},"// -1 此时表示从最后一个元素往后查找,因此查找失败返回-1"),p("\nconsole"),c("span",{class:"token punctuation"},"."),c("span",{class:"token function"},"log"),c("span",{class:"token punctuation"},"("),p("array"),c("span",{class:"token punctuation"},"."),c("span",{class:"token function"},"indexOf"),c("span",{class:"token punctuation"},"("),c("span",{class:"token string"},"'def'"),c("span",{class:"token punctuation"},","),c("span",{class:"token operator"},"-"),c("span",{class:"token number"},"4"),c("span",{class:"token punctuation"},")"),c("span",{class:"token punctuation"},")"),c("span",{class:"token punctuation"},";"),p(),c("span",{class:"token comment"},"// 1 由于4大于数组长度,此时将查找整个数组,因此返回1"),p("\nconsole"),c("span",{class:"token punctuation"},"."),c("span",{class:"token function"},"log"),c("span",{class:"token punctuation"},"("),p("array"),c("span",{class:"token punctuation"},"."),c("span",{class:"token function"},"indexOf"),c("span",{class:"token punctuation"},"("),c("span",{class:"token number"},"123"),c("span",{class:"token punctuation"},")"),c("span",{class:"token punctuation"},")"),c("span",{class:"token punctuation"},";"),p(),c("span",{class:"token comment"},"// -1, 由于是严格匹配,因此并不会匹配到字符串'123'"),p("\n")])]),c("div",{class:"line-numbers-wrapper"},[c("span",{class:"line-number"},"1"),c("br"),c("span",{class:"line-number"},"2"),c("br"),c("span",{class:"line-number"},"3"),c("br"),c("span",{class:"line-number"},"4"),c("br"),c("span",{class:"line-number"},"5"),c("br")])],-1),Ka=c("p",null,"得益于鸭式辨型，indexOf 可以处理类数组对象",-1),Ga=c("div",{class:"language-js line-numbers-mode"},[c("pre",null,[c("code",null,[c("span",{class:"token keyword"},"var"),p(" o "),c("span",{class:"token operator"},"="),p(),c("span",{class:"token punctuation"},"{"),c("span",{class:"token number"},"0"),c("span",{class:"token operator"},":"),c("span",{class:"token string"},"'abc'"),c("span",{class:"token punctuation"},","),p(),c("span",{class:"token number"},"1"),c("span",{class:"token operator"},":"),c("span",{class:"token string"},"'def'"),c("span",{class:"token punctuation"},","),p(),c("span",{class:"token number"},"2"),c("span",{class:"token operator"},":"),c("span",{class:"token string"},"'ghi'"),c("span",{class:"token punctuation"},","),p(" length"),c("span",{class:"token operator"},":"),c("span",{class:"token number"},"3"),c("span",{class:"token punctuation"},"}"),c("span",{class:"token punctuation"},";"),p("\nconsole"),c("span",{class:"token punctuation"},"."),c("span",{class:"token function"},"log"),c("span",{class:"token punctuation"},"("),c("span",{class:"token class-name"},"Array"),c("span",{class:"token punctuation"},"."),p("prototype"),c("span",{class:"token punctuation"},"."),c("span",{class:"token function"},"indexOf"),c("span",{class:"token punctuation"},"."),c("span",{class:"token function"},"call"),c("span",{class:"token punctuation"},"("),p("o"),c("span",{class:"token punctuation"},","),c("span",{class:"token string"},"'ghi'"),c("span",{class:"token punctuation"},","),c("span",{class:"token operator"},"-"),c("span",{class:"token number"},"4"),c("span",{class:"token punctuation"},")"),c("span",{class:"token punctuation"},")"),c("span",{class:"token punctuation"},";"),c("span",{class:"token comment"},"//2"),p("\n")])]),c("div",{class:"line-numbers-wrapper"},[c("span",{class:"line-number"},"1"),c("br"),c("span",{class:"line-number"},"2"),c("br")])],-1),Ha=e('',13),Ua=c("div",{class:"language-js line-numbers-mode"},[c("pre",null,[c("code",null,[c("span",{class:"token keyword"},"var"),p(" array "),c("span",{class:"token operator"},"="),p(),c("span",{class:"token punctuation"},"["),c("span",{class:"token operator"},"-"),c("span",{class:"token number"},"0"),c("span",{class:"token punctuation"},","),p(),c("span",{class:"token number"},"1"),c("span",{class:"token punctuation"},","),p(),c("span",{class:"token number"},"2"),c("span",{class:"token punctuation"},"]"),c("span",{class:"token punctuation"},";"),p("\nconsole"),c("span",{class:"token punctuation"},"."),c("span",{class:"token function"},"log"),c("span",{class:"token punctuation"},"("),p("array"),c("span",{class:"token punctuation"},"."),c("span",{class:"token function"},"includes"),c("span",{class:"token punctuation"},"("),c("span",{class:"token operator"},"+"),c("span",{class:"token number"},"0"),c("span",{class:"token punctuation"},")"),c("span",{class:"token punctuation"},")"),c("span",{class:"token punctuation"},";"),p(),c("span",{class:"token comment"},"// true"),p("\nconsole"),c("span",{class:"token punctuation"},"."),c("span",{class:"token function"},"log"),c("span",{class:"token punctuation"},"("),p("array"),c("span",{class:"token punctuation"},"."),c("span",{class:"token function"},"includes"),c("span",{class:"token punctuation"},"("),c("span",{class:"token number"},"1"),c("span",{class:"token punctuation"},")"),c("span",{class:"token punctuation"},")"),c("span",{class:"token punctuation"},";"),p(),c("span",{class:"token comment"},"// true"),p("\nconsole"),c("span",{class:"token punctuation"},"."),c("span",{class:"token function"},"log"),c("span",{class:"token punctuation"},"("),p("array"),c("span",{class:"token punctuation"},"."),c("span",{class:"token function"},"includes"),c("span",{class:"token punctuation"},"("),c("span",{class:"token number"},"2"),c("span",{class:"token punctuation"},","),c("span",{class:"token operator"},"-"),c("span",{class:"token number"},"4"),c("span",{class:"token punctuation"},")"),c("span",{class:"token punctuation"},")"),c("span",{class:"token punctuation"},";"),p(),c("span",{class:"token comment"},"// true"),p("\n")])]),c("div",{class:"line-numbers-wrapper"},[c("span",{class:"line-number"},"1"),c("br"),c("span",{class:"line-number"},"2"),c("br"),c("span",{class:"line-number"},"3"),c("br"),c("span",{class:"line-number"},"4"),c("br")])],-1),Qa=c("p",null,"以上，includes似乎忽略了 -0 与 +0 的区别，这不是问题，因为JavaScript一直以来都是不区分 -0 和 +0 的。",-1),Xa=c("p",null,[p("你可能会问，既然有了indexOf方法，为什么又造一个includes方法，arr.indexOf(x)>-1不就等于arr.includes(x)？看起来是的，几乎所有的时候它们都等同，"),c("code",null,"唯一的区别就是includes能够发现NaN，而indexOf不能。")],-1),Ya=c("div",{class:"language-js line-numbers-mode"},[c("pre",null,[c("code",null,[c("span",{class:"token keyword"},"var"),p(" array "),c("span",{class:"token operator"},"="),p(),c("span",{class:"token punctuation"},"["),c("span",{class:"token number"},"NaN"),c("span",{class:"token punctuation"},"]"),c("span",{class:"token punctuation"},";"),p("\nconsole"),c("span",{class:"token punctuation"},"."),c("span",{class:"token function"},"log"),c("span",{class:"token punctuation"},"("),p("array"),c("span",{class:"token punctuation"},"."),c("span",{class:"token function"},"includes"),c("span",{class:"token punctuation"},"("),c("span",{class:"token number"},"NaN"),c("span",{class:"token punctuation"},")"),c("span",{class:"token punctuation"},")"),c("span",{class:"token punctuation"},";"),p(),c("span",{class:"token comment"},"// true"),p("\nconsole"),c("span",{class:"token punctuation"},"."),c("span",{class:"token function"},"log"),c("span",{class:"token punctuation"},"("),p("arra"),c("span",{class:"token punctuation"},"."),c("span",{class:"token function"},"indexOf"),c("span",{class:"token punctuation"},"("),c("span",{class:"token number"},"NaN"),c("span",{class:"token punctuation"},")"),c("span",{class:"token operator"},">"),c("span",{class:"token operator"},"-"),c("span",{class:"token number"},"1"),c("span",{class:"token punctuation"},")"),c("span",{class:"token punctuation"},";"),p(),c("span",{class:"token comment"},"// false"),p("\n")])]),c("div",{class:"line-numbers-wrapper"},[c("span",{class:"line-number"},"1"),c("br"),c("span",{class:"line-number"},"2"),c("br"),c("span",{class:"line-number"},"3"),c("br")])],-1),Za=c("p",null,"该方法同样受益于鸭式辨型",-1),$a=c("div",{class:"language-js line-numbers-mode"},[c("pre",null,[c("code",null,[c("span",{class:"token keyword"},"var"),p(" o "),c("span",{class:"token operator"},"="),p(),c("span",{class:"token punctuation"},"{"),c("span",{class:"token number"},"0"),c("span",{class:"token operator"},":"),c("span",{class:"token string"},"'a'"),c("span",{class:"token punctuation"},","),p(),c("span",{class:"token number"},"1"),c("span",{class:"token operator"},":"),c("span",{class:"token string"},"'b'"),c("span",{class:"token punctuation"},","),p(),c("span",{class:"token number"},"2"),c("span",{class:"token operator"},":"),c("span",{class:"token string"},"'c'"),c("span",{class:"token punctuation"},","),p(" length"),c("span",{class:"token operator"},":"),c("span",{class:"token number"},"3"),c("span",{class:"token punctuation"},"}"),c("span",{class:"token punctuation"},";"),p("\n"),c("span",{class:"token keyword"},"var"),p(" bool "),c("span",{class:"token operator"},"="),p(),c("span",{class:"token class-name"},"Array"),c("span",{class:"token punctuation"},"."),p("prototype"),c("span",{class:"token punctuation"},"."),c("span",{class:"token function"},"includes"),c("span",{class:"token punctuation"},"."),c("span",{class:"token function"},"call"),c("span",{class:"token punctuation"},"("),p("o"),c("span",{class:"token punctuation"},","),p(),c("span",{class:"token string"},"'a'"),c("span",{class:"token punctuation"},")"),c("span",{class:"token punctuation"},";"),p("\nconsole"),c("span",{class:"token punctuation"},"."),c("span",{class:"token function"},"log"),c("span",{class:"token punctuation"},"("),p("bool"),c("span",{class:"token punctuation"},")"),c("span",{class:"token punctuation"},";"),p(),c("span",{class:"token comment"},"// true"),p("\n")])]),c("div",{class:"line-numbers-wrapper"},[c("span",{class:"line-number"},"1"),c("br"),c("span",{class:"line-number"},"2"),c("br"),c("span",{class:"line-number"},"3"),c("br")])],-1),nt=c("blockquote",null,[c("p",null,"该方法只有在Chrome 47、opera 34、Safari 9版本及其更高版本中才被实现")],-1),st=c("h3",{id:"tosource-非标准",tabindex:"-1"},[p("toSource(非标准) "),c("a",{class:"header-anchor",href:"#tosource-非标准","aria-hidden":"true"},"#")],-1),at=c("p",null,"toSource() 方法是非标准的，该方法返回数组的源代码，目前只有 Firefox 实现了它。",-1),tt=c("p",null,"语法：arr.toSource()",-1),ot=c("div",{class:"language-js line-numbers-mode"},[c("pre",null,[c("code",null,[c("span",{class:"token keyword"},"var"),p(" array "),c("span",{class:"token operator"},"="),p(),c("span",{class:"token punctuation"},"["),c("span",{class:"token string"},"'a'"),c("span",{class:"token punctuation"},","),p(),c("span",{class:"token string"},"'b'"),c("span",{class:"token punctuation"},","),p(),c("span",{class:"token string"},"'c'"),c("span",{class:"token punctuation"},"]"),c("span",{class:"token punctuation"},";"),p("\nconsole"),c("span",{class:"token punctuation"},"."),c("span",{class:"token function"},"log"),c("span",{class:"token punctuation"},"("),p("array"),c("span",{class:"token punctuation"},"."),c("span",{class:"token function"},"toSource"),c("span",{class:"token punctuation"},"("),c("span",{class:"token punctuation"},")"),c("span",{class:"token punctuation"},")"),c("span",{class:"token punctuation"},";"),p(),c("span",{class:"token comment"},'// ["a", "b", "c"]'),p("\n"),c("span",{class:"token comment"},"// 测试鸭式辨型"),p("\n"),c("span",{class:"token keyword"},"var"),p(" o "),c("span",{class:"token operator"},"="),p(),c("span",{class:"token punctuation"},"{"),c("span",{class:"token number"},"0"),c("span",{class:"token operator"},":"),c("span",{class:"token string"},"'a'"),c("span",{class:"token punctuation"},","),p(),c("span",{class:"token number"},"1"),c("span",{class:"token operator"},":"),c("span",{class:"token string"},"'b'"),c("span",{class:"token punctuation"},","),p(),c("span",{class:"token number"},"2"),c("span",{class:"token operator"},":"),c("span",{class:"token string"},"'c'"),c("span",{class:"token punctuation"},","),p(" length"),c("span",{class:"token operator"},":"),c("span",{class:"token number"},"3"),c("span",{class:"token punctuation"},"}"),c("span",{class:"token punctuation"},";"),p("\nconsole"),c("span",{class:"token punctuation"},"."),c("span",{class:"token function"},"log"),c("span",{class:"token punctuation"},"("),c("span",{class:"token class-name"},"Array"),c("span",{class:"token punctuation"},"."),p("prototype"),c("span",{class:"token punctuation"},"."),c("span",{class:"token function"},"toSource"),c("span",{class:"token punctuation"},"."),c("span",{class:"token function"},"call"),c("span",{class:"token punctuation"},"("),p("o"),c("span",{class:"token punctuation"},")"),c("span",{class:"token punctuation"},")"),c("span",{class:"token punctuation"},";"),p(),c("span",{class:"token comment"},'// ["a","b","c"]'),p("\n")])]),c("div",{class:"line-numbers-wrapper"},[c("span",{class:"line-number"},"1"),c("br"),c("span",{class:"line-number"},"2"),c("br"),c("span",{class:"line-number"},"3"),c("br"),c("span",{class:"line-number"},"4"),c("br"),c("span",{class:"line-number"},"5"),c("br")])],-1),et=e('',9),ct=c("div",{class:"language-js line-numbers-mode"},[c("pre",null,[c("code",null,[c("span",{class:"token keyword"},"var"),p(" array "),c("span",{class:"token operator"},"="),p(),c("span",{class:"token punctuation"},"["),c("span",{class:"token number"},"1"),c("span",{class:"token punctuation"},","),p(),c("span",{class:"token number"},"3"),c("span",{class:"token punctuation"},","),p(),c("span",{class:"token number"},"5"),c("span",{class:"token punctuation"},"]"),c("span",{class:"token punctuation"},";"),p("\n"),c("span",{class:"token keyword"},"var"),p(" obj "),c("span",{class:"token operator"},"="),p(),c("span",{class:"token punctuation"},"{"),p("name"),c("span",{class:"token operator"},":"),c("span",{class:"token string"},"'cc'"),c("span",{class:"token punctuation"},"}"),c("span",{class:"token punctuation"},";"),p("\n"),c("span",{class:"token keyword"},"var"),p(" sReturn "),c("span",{class:"token operator"},"="),p(" array"),c("span",{class:"token punctuation"},"."),c("span",{class:"token function"},"forEach"),c("span",{class:"token punctuation"},"("),c("span",{class:"token keyword"},"function"),c("span",{class:"token punctuation"},"("),c("span",{class:"token parameter"},[p("value"),c("span",{class:"token punctuation"},","),p(" index"),c("span",{class:"token punctuation"},","),p(" array")]),c("span",{class:"token punctuation"},")"),c("span",{class:"token punctuation"},"{"),p("\n  array"),c("span",{class:"token punctuation"},"["),p("index"),c("span",{class:"token punctuation"},"]"),p(),c("span",{class:"token operator"},"="),p(" value "),c("span",{class:"token operator"},"*"),p(" value"),c("span",{class:"token punctuation"},";"),p("\n  console"),c("span",{class:"token punctuation"},"."),c("span",{class:"token function"},"log"),c("span",{class:"token punctuation"},"("),c("span",{class:"token keyword"},"this"),c("span",{class:"token punctuation"},"."),p("name"),c("span",{class:"token punctuation"},")"),c("span",{class:"token punctuation"},";"),p(),c("span",{class:"token comment"},"// cc被打印了三次"),p("\n"),c("span",{class:"token punctuation"},"}"),c("span",{class:"token punctuation"},","),p("obj"),c("span",{class:"token punctuation"},")"),c("span",{class:"token punctuation"},";"),p("\nconsole"),c("span",{class:"token punctuation"},"."),c("span",{class:"token function"},"log"),c("span",{class:"token punctuation"},"("),p("array"),c("span",{class:"token punctuation"},")"),c("span",{class:"token punctuation"},";"),p(),c("span",{class:"token comment"},"// [1, 9, 25], 可见原数组改变了"),p("\nconsole"),c("span",{class:"token punctuation"},"."),c("span",{class:"token function"},"log"),c("span",{class:"token punctuation"},"("),p("sReturn"),c("span",{class:"token punctuation"},")"),c("span",{class:"token punctuation"},";"),p(),c("span",{class:"token comment"},"// undefined, 可见返回值为undefined"),p("\n")])]),c("div",{class:"line-numbers-wrapper"},[c("span",{class:"line-number"},"1"),c("br"),c("span",{class:"line-number"},"2"),c("br"),c("span",{class:"line-number"},"3"),c("br"),c("span",{class:"line-number"},"4"),c("br"),c("span",{class:"line-number"},"5"),c("br"),c("span",{class:"line-number"},"6"),c("br"),c("span",{class:"line-number"},"7"),c("br"),c("span",{class:"line-number"},"8"),c("br")])],-1),pt=c("p",null,"得益于鸭式辨型，虽然forEach不能直接遍历对象，但它可以通过call方式遍历类数组对象",-1),lt=c("div",{class:"language-js line-numbers-mode"},[c("pre",null,[c("code",null,[c("span",{class:"token keyword"},"var"),p(" o "),c("span",{class:"token operator"},"="),p(),c("span",{class:"token punctuation"},"{"),c("span",{class:"token number"},"0"),c("span",{class:"token operator"},":"),c("span",{class:"token number"},"1"),c("span",{class:"token punctuation"},","),p(),c("span",{class:"token number"},"1"),c("span",{class:"token operator"},":"),c("span",{class:"token number"},"3"),c("span",{class:"token punctuation"},","),p(),c("span",{class:"token number"},"2"),c("span",{class:"token operator"},":"),c("span",{class:"token number"},"5"),c("span",{class:"token punctuation"},","),p(" length"),c("span",{class:"token operator"},":"),c("span",{class:"token number"},"3"),c("span",{class:"token punctuation"},"}"),c("span",{class:"token punctuation"},";"),p("\n"),c("span",{class:"token class-name"},"Array"),c("span",{class:"token punctuation"},"."),p("prototype"),c("span",{class:"token punctuation"},"."),c("span",{class:"token function"},"forEach"),c("span",{class:"token punctuation"},"."),c("span",{class:"token function"},"call"),c("span",{class:"token punctuation"},"("),p("o"),c("span",{class:"token punctuation"},","),c("span",{class:"token keyword"},"function"),c("span",{class:"token punctuation"},"("),c("span",{class:"token parameter"},[p("value"),c("span",{class:"token punctuation"},","),p(" index"),c("span",{class:"token punctuation"},","),p(" obj")]),c("span",{class:"token punctuation"},")"),c("span",{class:"token punctuation"},"{"),p("\n  console"),c("span",{class:"token punctuation"},"."),c("span",{class:"token function"},"log"),c("span",{class:"token punctuation"},"("),p("value"),c("span",{class:"token punctuation"},","),p("index"),c("span",{class:"token punctuation"},","),p("obj"),c("span",{class:"token punctuation"},")"),c("span",{class:"token punctuation"},";"),p("\n  obj"),c("span",{class:"token punctuation"},"["),p("index"),c("span",{class:"token punctuation"},"]"),p(),c("span",{class:"token operator"},"="),p(" value "),c("span",{class:"token operator"},"*"),p(" value"),c("span",{class:"token punctuation"},";"),p("\n"),c("span",{class:"token punctuation"},"}"),c("span",{class:"token punctuation"},","),p("o"),c("span",{class:"token punctuation"},")"),c("span",{class:"token punctuation"},";"),p("\n"),c("span",{class:"token comment"},"// 1 0 Object {0: 1, 1: 3, 2: 5, length: 3}"),p("\n"),c("span",{class:"token comment"},"// 3 1 Object {0: 1, 1: 3, 2: 5, length: 3}"),p("\n"),c("span",{class:"token comment"},"// 5 2 Object {0: 1, 1: 9, 2: 5, length: 3}"),p("\nconsole"),c("span",{class:"token punctuation"},"."),c("span",{class:"token function"},"log"),c("span",{class:"token punctuation"},"("),p("o"),c("span",{class:"token punctuation"},")"),c("span",{class:"token punctuation"},";"),p(),c("span",{class:"token comment"},"// Object {0: 1, 1: 9, 2: 25, length: 3}"),p("\n")])]),c("div",{class:"line-numbers-wrapper"},[c("span",{class:"line-number"},"1"),c("br"),c("span",{class:"line-number"},"2"),c("br"),c("span",{class:"line-number"},"3"),c("br"),c("span",{class:"line-number"},"4"),c("br"),c("span",{class:"line-number"},"5"),c("br"),c("span",{class:"line-number"},"6"),c("br"),c("span",{class:"line-number"},"7"),c("br"),c("span",{class:"line-number"},"8"),c("br"),c("span",{class:"line-number"},"9"),c("br")])],-1),ut=c("blockquote",null,[c("p",null,"参考前面的文章 详解JS遍历 中 forEach的讲解，我们知道，forEach无法直接退出循环，只能使用return 来达到for循环中continue的效果，并且forEach不能在低版本IE（6~8）中使用")],-1),rt=c("h3",{id:"every",tabindex:"-1"},[p("every "),c("a",{class:"header-anchor",href:"#every","aria-hidden":"true"},"#")],-1),it=c("p",null,"every() 方法使用传入的函数测试所有元素，只要其中有一个函数返回值为 false，那么该方法的结果为 false；如果全部返回 true，那么该方法的结果才为 true。",-1),kt=c("ul",null,[c("li",null,"若需检测数组中存在元素大于100 （即 one > 100），那么我们需要在传入的函数中构造 “false” 返回值 （即返回 item <= 100），同时整个方法结果为 false 才表示数组存在元素满足条件；（简单理解为：若是单项判断，可用 one false ===> false）"),c("li",null,"若需检测数组中是否所有元素都大于100 （即all > 100）那么我们需要在传入的函数中构造 “true” 返回值 （即返回 item > 100），同时整个方法结果为 true 才表示数组所有元素均满足条件。(简单理解为：若是全部判断，可用 all true ===> true）")],-1),bt=c("p",null,"以下是鸭式辨型的写法：",-1),mt=c("div",{class:"language-js line-numbers-mode"},[c("pre",null,[c("code",null,[c("span",{class:"token keyword"},"var"),p(" o "),c("span",{class:"token operator"},"="),p(),c("span",{class:"token punctuation"},"{"),c("span",{class:"token number"},"0"),c("span",{class:"token operator"},":"),c("span",{class:"token number"},"10"),c("span",{class:"token punctuation"},","),p(),c("span",{class:"token number"},"1"),c("span",{class:"token operator"},":"),c("span",{class:"token number"},"8"),c("span",{class:"token punctuation"},","),p(),c("span",{class:"token number"},"2"),c("span",{class:"token operator"},":"),c("span",{class:"token number"},"25"),c("span",{class:"token punctuation"},","),p(" length"),c("span",{class:"token operator"},":"),c("span",{class:"token number"},"3"),c("span",{class:"token punctuation"},"}"),c("span",{class:"token punctuation"},";"),p("\n"),c("span",{class:"token keyword"},"var"),p(" bool "),c("span",{class:"token operator"},"="),p(),c("span",{class:"token class-name"},"Array"),c("span",{class:"token punctuation"},"."),p("prototype"),c("span",{class:"token punctuation"},"."),c("span",{class:"token function"},"every"),c("span",{class:"token punctuation"},"."),c("span",{class:"token function"},"call"),c("span",{class:"token punctuation"},"("),p("o"),c("span",{class:"token punctuation"},","),c("span",{class:"token keyword"},"function"),c("span",{class:"token punctuation"},"("),c("span",{class:"token parameter"},[p("value"),c("span",{class:"token punctuation"},","),p(" index"),c("span",{class:"token punctuation"},","),p(" obj")]),c("span",{class:"token punctuation"},")"),c("span",{class:"token punctuation"},"{"),p("\n  "),c("span",{class:"token keyword"},"return"),p(" value "),c("span",{class:"token operator"},">="),p(),c("span",{class:"token number"},"8"),c("span",{class:"token punctuation"},";"),p("\n"),c("span",{class:"token punctuation"},"}"),c("span",{class:"token punctuation"},","),p("o"),c("span",{class:"token punctuation"},")"),c("span",{class:"token punctuation"},";"),p("\nconsole"),c("span",{class:"token punctuation"},"."),c("span",{class:"token function"},"log"),c("span",{class:"token punctuation"},"("),p("bool"),c("span",{class:"token punctuation"},")"),c("span",{class:"token punctuation"},";"),p(),c("span",{class:"token comment"},"// true"),p("\n")])]),c("div",{class:"line-numbers-wrapper"},[c("span",{class:"line-number"},"1"),c("br"),c("span",{class:"line-number"},"2"),c("br"),c("span",{class:"line-number"},"3"),c("br"),c("span",{class:"line-number"},"4"),c("br"),c("span",{class:"line-number"},"5"),c("br")])],-1),dt=e('',9),ft=c("div",{class:"language-js line-numbers-mode"},[c("pre",null,[c("code",null,[c("span",{class:"token keyword"},"var"),p(" array "),c("span",{class:"token operator"},"="),p(),c("span",{class:"token punctuation"},"["),c("span",{class:"token number"},"18"),c("span",{class:"token punctuation"},","),p(),c("span",{class:"token number"},"9"),c("span",{class:"token punctuation"},","),p(),c("span",{class:"token number"},"10"),c("span",{class:"token punctuation"},","),p(),c("span",{class:"token number"},"35"),c("span",{class:"token punctuation"},","),p(),c("span",{class:"token number"},"80"),c("span",{class:"token punctuation"},"]"),c("span",{class:"token punctuation"},";"),p("\n"),c("span",{class:"token keyword"},"var"),p(" array2 "),c("span",{class:"token operator"},"="),p(" array"),c("span",{class:"token punctuation"},"."),c("span",{class:"token function"},"filter"),c("span",{class:"token punctuation"},"("),c("span",{class:"token keyword"},"function"),c("span",{class:"token punctuation"},"("),c("span",{class:"token parameter"},[p("value"),c("span",{class:"token punctuation"},","),p(" index"),c("span",{class:"token punctuation"},","),p(" array")]),c("span",{class:"token punctuation"},")"),c("span",{class:"token punctuation"},"{"),p("\n  "),c("span",{class:"token keyword"},"return"),p(" value "),c("span",{class:"token operator"},">"),p(),c("span",{class:"token number"},"20"),c("span",{class:"token punctuation"},";"),p("\n"),c("span",{class:"token punctuation"},"}"),c("span",{class:"token punctuation"},")"),c("span",{class:"token punctuation"},";"),p("\nconsole"),c("span",{class:"token punctuation"},"."),c("span",{class:"token function"},"log"),c("span",{class:"token punctuation"},"("),p("array2"),c("span",{class:"token punctuation"},")"),c("span",{class:"token punctuation"},";"),p(),c("span",{class:"token comment"},"// [35, 80]"),p("\n")])]),c("div",{class:"line-numbers-wrapper"},[c("span",{class:"line-number"},"1"),c("br"),c("span",{class:"line-number"},"2"),c("br"),c("span",{class:"line-number"},"3"),c("br"),c("span",{class:"line-number"},"4"),c("br"),c("span",{class:"line-number"},"5"),c("br")])],-1),gt=e('',13),yt=c("div",{class:"language-js line-numbers-mode"},[c("pre",null,[c("code",null,[c("span",{class:"token keyword"},"var"),p(" array "),c("span",{class:"token operator"},"="),p(),c("span",{class:"token punctuation"},"["),c("span",{class:"token number"},"1"),c("span",{class:"token punctuation"},","),p(),c("span",{class:"token number"},"2"),c("span",{class:"token punctuation"},","),p(),c("span",{class:"token number"},"3"),c("span",{class:"token punctuation"},","),p(),c("span",{class:"token number"},"4"),c("span",{class:"token punctuation"},"]"),c("span",{class:"token punctuation"},";"),p("\n"),c("span",{class:"token keyword"},"var"),p(" s "),c("span",{class:"token operator"},"="),p(" array"),c("span",{class:"token punctuation"},"."),c("span",{class:"token function"},"reduce"),c("span",{class:"token punctuation"},"("),c("span",{class:"token keyword"},"function"),c("span",{class:"token punctuation"},"("),c("span",{class:"token parameter"},[p("previousValue"),c("span",{class:"token punctuation"},","),p(" value"),c("span",{class:"token punctuation"},","),p(" index"),c("span",{class:"token punctuation"},","),p(" array")]),c("span",{class:"token punctuation"},")"),c("span",{class:"token punctuation"},"{"),p("\n  "),c("span",{class:"token keyword"},"return"),p(" previousValue "),c("span",{class:"token operator"},"*"),p(" value"),c("span",{class:"token punctuation"},";"),p("\n"),c("span",{class:"token punctuation"},"}"),c("span",{class:"token punctuation"},","),c("span",{class:"token number"},"1"),c("span",{class:"token punctuation"},")"),c("span",{class:"token punctuation"},";"),p("\nconsole"),c("span",{class:"token punctuation"},"."),c("span",{class:"token function"},"log"),c("span",{class:"token punctuation"},"("),p("s"),c("span",{class:"token punctuation"},")"),c("span",{class:"token punctuation"},";"),p(),c("span",{class:"token comment"},"// 24"),p("\n"),c("span",{class:"token comment"},"// ES6写法更加简洁"),p("\narray"),c("span",{class:"token punctuation"},"."),c("span",{class:"token function"},"reduce"),c("span",{class:"token punctuation"},"("),c("span",{class:"token punctuation"},"("),c("span",{class:"token parameter"},[p("p"),c("span",{class:"token punctuation"},","),p(" v")]),c("span",{class:"token punctuation"},")"),p(),c("span",{class:"token operator"},"=>"),p(" p "),c("span",{class:"token operator"},"*"),p(" v"),c("span",{class:"token punctuation"},")"),c("span",{class:"token punctuation"},";"),p(),c("span",{class:"token comment"},"// 24"),p("\n")])]),c("div",{class:"line-numbers-wrapper"},[c("span",{class:"line-number"},"1"),c("br"),c("span",{class:"line-number"},"2"),c("br"),c("span",{class:"line-number"},"3"),c("br"),c("span",{class:"line-number"},"4"),c("br"),c("span",{class:"line-number"},"5"),c("br"),c("span",{class:"line-number"},"6"),c("br"),c("span",{class:"line-number"},"7"),c("br")])],-1),ht=c("p",null,"reduce 一样支持鸭式辨型，具体请参考every方法鸭式辨型写法。profill写法：",-1),vt=c("div",{class:"language-js line-numbers-mode"},[c("pre",null,[c("code",null,[p("When the reduce method is called "),c("span",{class:"token keyword"},"with"),p(" one or two arguments"),c("span",{class:"token punctuation"},","),p(" the following steps are taken"),c("span",{class:"token operator"},":"),p("\n\n  "),c("span",{class:"token number"},"1"),p("、Let "),c("span",{class:"token constant"},"O"),p(" be the result "),c("span",{class:"token keyword"},"of"),p(" calling ToObject passing the "),c("span",{class:"token keyword"},"this"),p(" value "),c("span",{class:"token keyword"},"as"),p(" the argument"),c("span",{class:"token punctuation"},"."),p("\n  "),c("span",{class:"token number"},"2"),p("、Let lenValue be the result "),c("span",{class:"token keyword"},"of"),p(" calling the "),c("span",{class:"token punctuation"},"["),c("span",{class:"token punctuation"},"["),p("Get"),c("span",{class:"token punctuation"},"]"),c("span",{class:"token punctuation"},"]"),p(" internal method "),c("span",{class:"token keyword"},"of"),p(),c("span",{class:"token constant"},"O"),p(),c("span",{class:"token keyword"},"with"),p(" the argument "),c("span",{class:"token string"},'"length"'),c("span",{class:"token punctuation"},"."),p("\n  "),c("span",{class:"token number"},"3"),p("、Let len be "),c("span",{class:"token function"},"ToUint32"),c("span",{class:"token punctuation"},"("),p("lenValue "),c("span",{class:"token punctuation"},")"),c("span",{class:"token punctuation"},"."),p("\n  "),c("span",{class:"token number"},"4"),p("、If "),c("span",{class:"token function"},"IsCallable"),c("span",{class:"token punctuation"},"("),p("callbackfn"),c("span",{class:"token punctuation"},")"),p(" is "),c("span",{class:"token boolean"},"false"),c("span",{class:"token punctuation"},","),p(),c("span",{class:"token keyword"},"throw"),p(" a TypeError exception"),c("span",{class:"token punctuation"},"."),p("\n  "),c("span",{class:"token number"},"5"),p("、If len is "),c("span",{class:"token number"},"0"),p(" and initialValue is not present"),c("span",{class:"token punctuation"},","),p(),c("span",{class:"token keyword"},"throw"),p(" a TypeError exception"),c("span",{class:"token punctuation"},"."),p("\n  "),c("span",{class:"token number"},"6"),p("、Let k be "),c("span",{class:"token number"},"0."),p("\n  "),c("span",{class:"token number"},"7"),p("、If initialValue is present"),c("span",{class:"token punctuation"},","),p(" then\n    "),c("span",{class:"token number"},"7.1"),p("、Set accumulator to initialValue"),c("span",{class:"token punctuation"},"."),p("\n  "),c("span",{class:"token number"},"8"),p("、Else"),c("span",{class:"token punctuation"},","),p(" initialValue is not present\n    "),c("span",{class:"token number"},"8.1"),p("、Let kPresent be "),c("span",{class:"token boolean"},"false"),c("span",{class:"token punctuation"},"."),p("\n    "),c("span",{class:"token number"},"8.2"),p("、Repeat"),c("span",{class:"token punctuation"},","),p(),c("span",{class:"token keyword"},"while"),p(" kPresent is "),c("span",{class:"token boolean"},"false"),p(" and k "),c("span",{class:"token operator"},"<"),p(" len\n      "),c("span",{class:"token number"},"8.2"),c("span",{class:"token number"},".1"),p("、Let Pk be "),c("span",{class:"token function"},"ToString"),c("span",{class:"token punctuation"},"("),p("k"),c("span",{class:"token punctuation"},")"),c("span",{class:"token punctuation"},"."),p("\n      "),c("span",{class:"token number"},"8.2"),c("span",{class:"token number"},".2"),p("、Let kPresent be the result "),c("span",{class:"token keyword"},"of"),p(" calling the "),c("span",{class:"token punctuation"},"["),c("span",{class:"token punctuation"},"["),p("HasProperty"),c("span",{class:"token punctuation"},"]"),c("span",{class:"token punctuation"},"]"),p(" internal method "),c("span",{class:"token keyword"},"of"),p(),c("span",{class:"token constant"},"O"),p(),c("span",{class:"token keyword"},"with"),p(" argument Pk"),c("span",{class:"token punctuation"},"."),p("\n      "),c("span",{class:"token number"},"8.2"),c("span",{class:"token number"},".3"),p("、If kPresent is "),c("span",{class:"token boolean"},"true"),c("span",{class:"token punctuation"},","),p(" then\n        "),c("span",{class:"token number"},"8.2"),c("span",{class:"token number"},".3"),c("span",{class:"token number"},".1"),p("、Let accumulator be the result "),c("span",{class:"token keyword"},"of"),p(" calling the "),c("span",{class:"token punctuation"},"["),c("span",{class:"token punctuation"},"["),p("Get"),c("span",{class:"token punctuation"},"]"),c("span",{class:"token punctuation"},"]"),p(" internal method "),c("span",{class:"token keyword"},"of"),p(),c("span",{class:"token constant"},"O"),p(),c("span",{class:"token keyword"},"with"),p(" argument Pk"),c("span",{class:"token punctuation"},"."),p("\n      "),c("span",{class:"token number"},"8.2"),c("span",{class:"token number"},".4"),p("、Increase k by "),c("span",{class:"token number"},"1."),p("\n    "),c("span",{class:"token number"},"8.3"),p("、If kPresent is "),c("span",{class:"token boolean"},"false"),c("span",{class:"token punctuation"},","),p(),c("span",{class:"token keyword"},"throw"),p(" a TypeError exception"),c("span",{class:"token punctuation"},"."),p("\n  "),c("span",{class:"token number"},"9"),p("、Repeat"),c("span",{class:"token punctuation"},","),p(),c("span",{class:"token keyword"},"while"),p(" k "),c("span",{class:"token operator"},"<"),p(" len\n    "),c("span",{class:"token number"},"9.1"),p("、Let Pk be "),c("span",{class:"token function"},"ToString"),c("span",{class:"token punctuation"},"("),p("k"),c("span",{class:"token punctuation"},")"),c("span",{class:"token punctuation"},"."),p("\n    "),c("span",{class:"token number"},"9.2"),p("、Let kPresent be the result "),c("span",{class:"token keyword"},"of"),p(" calling the "),c("span",{class:"token punctuation"},"["),c("span",{class:"token punctuation"},"["),p("HasProperty"),c("span",{class:"token punctuation"},"]"),c("span",{class:"token punctuation"},"]"),p(" internal method "),c("span",{class:"token keyword"},"of"),p(),c("span",{class:"token constant"},"O"),p(),c("span",{class:"token keyword"},"with"),p(" argument Pk"),c("span",{class:"token punctuation"},"."),p("\n    "),c("span",{class:"token number"},"9.3"),p("、If kPresent is "),c("span",{class:"token boolean"},"true"),c("span",{class:"token punctuation"},","),p(" then\n      "),c("span",{class:"token number"},"9.3"),c("span",{class:"token number"},".1"),p("、Let kValue be the result "),c("span",{class:"token keyword"},"of"),p(" calling the "),c("span",{class:"token punctuation"},"["),c("span",{class:"token punctuation"},"["),p("Get"),c("span",{class:"token punctuation"},"]"),c("span",{class:"token punctuation"},"]"),p(" internal method "),c("span",{class:"token keyword"},"of"),p(),c("span",{class:"token constant"},"O"),p(),c("span",{class:"token keyword"},"with"),p(" argument Pk"),c("span",{class:"token punctuation"},"."),p("\n      "),c("span",{class:"token number"},"9.3"),c("span",{class:"token number"},".2"),p("、Let accumulator be the result "),c("span",{class:"token keyword"},"of"),p(" calling the "),c("span",{class:"token punctuation"},"["),c("span",{class:"token punctuation"},"["),p("Call"),c("span",{class:"token punctuation"},"]"),c("span",{class:"token punctuation"},"]"),p(" internal method "),c("span",{class:"token keyword"},"of"),p(" callbackfn "),c("span",{class:"token keyword"},"with"),p(),c("span",{class:"token keyword"},"undefined"),p(),c("span",{class:"token keyword"},"as"),p(" the "),c("span",{class:"token keyword"},"this"),p(" value and argument list containing accumulator"),c("span",{class:"token punctuation"},","),p(" kValue"),c("span",{class:"token punctuation"},","),p(" k"),c("span",{class:"token punctuation"},","),p(" and "),c("span",{class:"token constant"},"O"),c("span",{class:"token punctuation"},"."),p("\n    "),c("span",{class:"token number"},"9.4"),p("、Increase k by "),c("span",{class:"token number"},"1."),p("\n  "),c("span",{class:"token number"},"10"),p("、Return accumulator"),c("span",{class:"token punctuation"},"."),p("\n\nThe length property "),c("span",{class:"token keyword"},"of"),p(" the reduce method is "),c("span",{class:"token number"},"1."),p("\n")])]),c("div",{class:"line-numbers-wrapper"},[c("span",{class:"line-number"},"1"),c("br"),c("span",{class:"line-number"},"2"),c("br"),c("span",{class:"line-number"},"3"),c("br"),c("span",{class:"line-number"},"4"),c("br"),c("span",{class:"line-number"},"5"),c("br"),c("span",{class:"line-number"},"6"),c("br"),c("span",{class:"line-number"},"7"),c("br"),c("span",{class:"line-number"},"8"),c("br"),c("span",{class:"line-number"},"9"),c("br"),c("span",{class:"line-number"},"10"),c("br"),c("span",{class:"line-number"},"11"),c("br"),c("span",{class:"line-number"},"12"),c("br"),c("span",{class:"line-number"},"13"),c("br"),c("span",{class:"line-number"},"14"),c("br"),c("span",{class:"line-number"},"15"),c("br"),c("span",{class:"line-number"},"16"),c("br"),c("span",{class:"line-number"},"17"),c("br"),c("span",{class:"line-number"},"18"),c("br"),c("span",{class:"line-number"},"19"),c("br"),c("span",{class:"line-number"},"20"),c("br"),c("span",{class:"line-number"},"21"),c("br"),c("span",{class:"line-number"},"22"),c("br"),c("span",{class:"line-number"},"23"),c("br"),c("span",{class:"line-number"},"24"),c("br"),c("span",{class:"line-number"},"25"),c("br"),c("span",{class:"line-number"},"26"),c("br"),c("span",{class:"line-number"},"27"),c("br"),c("span",{class:"line-number"},"28"),c("br"),c("span",{class:"line-number"},"29"),c("br")])],-1),wt=c("h3",{id:"reduceright",tabindex:"-1"},[p("reduceRight "),c("a",{class:"header-anchor",href:"#reduceright","aria-hidden":"true"},"#")],-1),At=c("p",null,"reduceRight() 方法接收一个方法作为累加器，数组中的每个值（从右至左）开始合并，最终为一个值。除了与reduce执行方向相反外，其他完全与其一致，请参考上述 reduce 方法介绍。",-1),_t=c("h3",{id:"entries-es6",tabindex:"-1"},[p("entries(ES6) "),c("a",{class:"header-anchor",href:"#entries-es6","aria-hidden":"true"},"#")],-1),jt=c("p",null,"entries() 方法基于ECMAScript 2015（ES6）规范，返回一个数组迭代器对象，该对象包含数组中每个索引的键值对。",-1),St=c("p",null,"语法：arr.entries()",-1),xt=c("div",{class:"language-js line-numbers-mode"},[c("pre",null,[c("code",null,[c("span",{class:"token keyword"},"var"),p(" array "),c("span",{class:"token operator"},"="),p(),c("span",{class:"token punctuation"},"["),c("span",{class:"token string"},'"a"'),c("span",{class:"token punctuation"},","),p(),c("span",{class:"token string"},'"b"'),c("span",{class:"token punctuation"},","),p(),c("span",{class:"token string"},'"c"'),c("span",{class:"token punctuation"},"]"),c("span",{class:"token punctuation"},";"),p("\n"),c("span",{class:"token keyword"},"var"),p(" iterator "),c("span",{class:"token operator"},"="),p(" array"),c("span",{class:"token punctuation"},"."),c("span",{class:"token function"},"entries"),c("span",{class:"token punctuation"},"("),c("span",{class:"token punctuation"},")"),c("span",{class:"token punctuation"},";"),p("\nconsole"),c("span",{class:"token punctuation"},"."),c("span",{class:"token function"},"log"),c("span",{class:"token punctuation"},"("),p("iterator"),c("span",{class:"token punctuation"},"."),c("span",{class:"token function"},"next"),c("span",{class:"token punctuation"},"("),c("span",{class:"token punctuation"},")"),c("span",{class:"token punctuation"},"."),p("value"),c("span",{class:"token punctuation"},")"),c("span",{class:"token punctuation"},";"),p(),c("span",{class:"token comment"},'// [0, "a"]'),p("\nconsole"),c("span",{class:"token punctuation"},"."),c("span",{class:"token function"},"log"),c("span",{class:"token punctuation"},"("),p("iterator"),c("span",{class:"token punctuation"},"."),c("span",{class:"token function"},"next"),c("span",{class:"token punctuation"},"("),c("span",{class:"token punctuation"},")"),c("span",{class:"token punctuation"},"."),p("value"),c("span",{class:"token punctuation"},")"),c("span",{class:"token punctuation"},";"),p(),c("span",{class:"token comment"},'// [1, "b"]'),p("\nconsole"),c("span",{class:"token punctuation"},"."),c("span",{class:"token function"},"log"),c("span",{class:"token punctuation"},"("),p("iterator"),c("span",{class:"token punctuation"},"."),c("span",{class:"token function"},"next"),c("span",{class:"token punctuation"},"("),c("span",{class:"token punctuation"},")"),c("span",{class:"token punctuation"},"."),p("value"),c("span",{class:"token punctuation"},")"),c("span",{class:"token punctuation"},";"),p(),c("span",{class:"token comment"},'// [2, "c"]'),p("\nconsole"),c("span",{class:"token punctuation"},"."),c("span",{class:"token function"},"log"),c("span",{class:"token punctuation"},"("),p("iterator"),c("span",{class:"token punctuation"},"."),c("span",{class:"token function"},"next"),c("span",{class:"token punctuation"},"("),c("span",{class:"token punctuation"},")"),c("span",{class:"token punctuation"},"."),p("value"),c("span",{class:"token punctuation"},")"),c("span",{class:"token punctuation"},";"),p(),c("span",{class:"token comment"},"// undefined, 迭代器处于数组末尾时, 再迭代就会返回undefined"),p("\n")])]),c("div",{class:"line-numbers-wrapper"},[c("span",{class:"line-number"},"1"),c("br"),c("span",{class:"line-number"},"2"),c("br"),c("span",{class:"line-number"},"3"),c("br"),c("span",{class:"line-number"},"4"),c("br"),c("span",{class:"line-number"},"5"),c("br"),c("span",{class:"line-number"},"6"),c("br")])],-1),Et=c("p",null,"很明显，entries 也受益于鸭式辨型",-1),Ot=c("div",{class:"language-js line-numbers-mode"},[c("pre",null,[c("code",null,[c("span",{class:"token keyword"},"var"),p(" o "),c("span",{class:"token operator"},"="),p(),c("span",{class:"token punctuation"},"{"),c("span",{class:"token number"},"0"),c("span",{class:"token operator"},":"),c("span",{class:"token string"},'"a"'),c("span",{class:"token punctuation"},","),p(),c("span",{class:"token number"},"1"),c("span",{class:"token operator"},":"),c("span",{class:"token string"},'"b"'),c("span",{class:"token punctuation"},","),p(),c("span",{class:"token number"},"2"),c("span",{class:"token operator"},":"),c("span",{class:"token string"},'"c"'),c("span",{class:"token punctuation"},","),p(" length"),c("span",{class:"token operator"},":"),c("span",{class:"token number"},"3"),c("span",{class:"token punctuation"},"}"),c("span",{class:"token punctuation"},";"),p("\n"),c("span",{class:"token keyword"},"var"),p(" iterator "),c("span",{class:"token operator"},"="),p(),c("span",{class:"token class-name"},"Array"),c("span",{class:"token punctuation"},"."),p("prototype"),c("span",{class:"token punctuation"},"."),c("span",{class:"token function"},"entries"),c("span",{class:"token punctuation"},"."),c("span",{class:"token function"},"call"),c("span",{class:"token punctuation"},"("),p("o"),c("span",{class:"token punctuation"},")"),c("span",{class:"token punctuation"},";"),p("\nconsole"),c("span",{class:"token punctuation"},"."),c("span",{class:"token function"},"log"),c("span",{class:"token punctuation"},"("),p("iterator"),c("span",{class:"token punctuation"},"."),c("span",{class:"token function"},"next"),c("span",{class:"token punctuation"},"("),c("span",{class:"token punctuation"},")"),c("span",{class:"token punctuation"},"."),p("value"),c("span",{class:"token punctuation"},")"),c("span",{class:"token punctuation"},";"),p(),c("span",{class:"token comment"},'// [0, "a"]'),p("\nconsole"),c("span",{class:"token punctuation"},"."),c("span",{class:"token function"},"log"),c("span",{class:"token punctuation"},"("),p("iterator"),c("span",{class:"token punctuation"},"."),c("span",{class:"token function"},"next"),c("span",{class:"token punctuation"},"("),c("span",{class:"token punctuation"},")"),c("span",{class:"token punctuation"},"."),p("value"),c("span",{class:"token punctuation"},")"),c("span",{class:"token punctuation"},";"),p(),c("span",{class:"token comment"},'// [1, "b"]'),p("\nconsole"),c("span",{class:"token punctuation"},"."),c("span",{class:"token function"},"log"),c("span",{class:"token punctuation"},"("),p("iterator"),c("span",{class:"token punctuation"},"."),c("span",{class:"token function"},"next"),c("span",{class:"token punctuation"},"("),c("span",{class:"token punctuation"},")"),c("span",{class:"token punctuation"},"."),p("value"),c("span",{class:"token punctuation"},")"),c("span",{class:"token punctuation"},";"),p(),c("span",{class:"token comment"},'// [2, "c"]'),p("\n")])]),c("div",{class:"line-numbers-wrapper"},[c("span",{class:"line-number"},"1"),c("br"),c("span",{class:"line-number"},"2"),c("br"),c("span",{class:"line-number"},"3"),c("br"),c("span",{class:"line-number"},"4"),c("br"),c("span",{class:"line-number"},"5"),c("br")])],-1),It=c("blockquote",null,[c("p",null,"由于该方法基于ES6，因此目前并不支持所有浏览器")],-1),Tt=c("h3",{id:"find-findindex-es6",tabindex:"-1"},[p("find&findIndex(ES6) "),c("a",{class:"header-anchor",href:"#find-findindex-es6","aria-hidden":"true"},"#")],-1),Ct=c("p",null,"find() 方法基于ECMAScript 2015（ES6）规范，返回数组中第一个满足条件的元素（如果有的话）， 如果没有，则返回undefined。",-1),Pt=c("p",null,"findIndex() 方法也基于ECMAScript 2015（ES6）规范，它返回数组中第一个满足条件的元素的索引（如果有的话）否则返回-1。",-1),Vt=c("p",null,"语法：arr.find(fn, thisArg)，arr.findIndex(fn, thisArg)",-1),qt=c("p",null,"我们发现它们的语法与forEach等十分相似，其实不光语法，find（或findIndex）在参数及其使用注意事项上，均与forEach一致。因此此处将略去 find（或findIndex）的参数介绍。下面我们来看个例子",-1),Lt=c("div",{class:"language-js line-numbers-mode"},[c("pre",null,[c("code",null,[c("span",{class:"token keyword"},"var"),p(" array "),c("span",{class:"token operator"},"="),p(),c("span",{class:"token punctuation"},"["),c("span",{class:"token number"},"1"),c("span",{class:"token punctuation"},","),p(),c("span",{class:"token number"},"3"),c("span",{class:"token punctuation"},","),p(),c("span",{class:"token number"},"5"),c("span",{class:"token punctuation"},","),p(),c("span",{class:"token number"},"7"),c("span",{class:"token punctuation"},","),p(),c("span",{class:"token number"},"8"),c("span",{class:"token punctuation"},","),p(),c("span",{class:"token number"},"9"),c("span",{class:"token punctuation"},","),p(),c("span",{class:"token number"},"10"),c("span",{class:"token punctuation"},"]"),c("span",{class:"token punctuation"},";"),p("\n"),c("span",{class:"token keyword"},"function"),p(),c("span",{class:"token function"},"f"),c("span",{class:"token punctuation"},"("),c("span",{class:"token parameter"},[p("value"),c("span",{class:"token punctuation"},","),p(" index"),c("span",{class:"token punctuation"},","),p(" array")]),c("span",{class:"token punctuation"},")"),c("span",{class:"token punctuation"},"{"),p("\n  "),c("span",{class:"token keyword"},"return"),p(" value"),c("span",{class:"token operator"},"%"),c("span",{class:"token number"},"2"),c("span",{class:"token operator"},"=="),c("span",{class:"token number"},"0"),c("span",{class:"token punctuation"},";"),p(),c("span",{class:"token comment"},"// 返回偶数"),p("\n"),c("span",{class:"token punctuation"},"}"),p("\n"),c("span",{class:"token keyword"},"function"),p(),c("span",{class:"token function"},"f2"),c("span",{class:"token punctuation"},"("),c("span",{class:"token parameter"},[p("value"),c("span",{class:"token punctuation"},","),p(" index"),c("span",{class:"token punctuation"},","),p(" array")]),c("span",{class:"token punctuation"},")"),c("span",{class:"token punctuation"},"{"),p("\n  "),c("span",{class:"token keyword"},"return"),p(" value "),c("span",{class:"token operator"},">"),p(),c("span",{class:"token number"},"20"),c("span",{class:"token punctuation"},";"),p(),c("span",{class:"token comment"},"// 返回大于20的数"),p("\n"),c("span",{class:"token punctuation"},"}"),p("\nconsole"),c("span",{class:"token punctuation"},"."),c("span",{class:"token function"},"log"),c("span",{class:"token punctuation"},"("),p("array"),c("span",{class:"token punctuation"},"."),c("span",{class:"token function"},"find"),c("span",{class:"token punctuation"},"("),p("f"),c("span",{class:"token punctuation"},")"),c("span",{class:"token punctuation"},")"),c("span",{class:"token punctuation"},";"),p(),c("span",{class:"token comment"},"// 8"),p("\nconsole"),c("span",{class:"token punctuation"},"."),c("span",{class:"token function"},"log"),c("span",{class:"token punctuation"},"("),p("array"),c("span",{class:"token punctuation"},"."),c("span",{class:"token function"},"find"),c("span",{class:"token punctuation"},"("),p("f2"),c("span",{class:"token punctuation"},")"),c("span",{class:"token punctuation"},")"),c("span",{class:"token punctuation"},";"),p(),c("span",{class:"token comment"},"// undefined"),p("\nconsole"),c("span",{class:"token punctuation"},"."),c("span",{class:"token function"},"log"),c("span",{class:"token punctuation"},"("),p("array"),c("span",{class:"token punctuation"},"."),c("span",{class:"token function"},"findIndex"),c("span",{class:"token punctuation"},"("),p("f"),c("span",{class:"token punctuation"},")"),c("span",{class:"token punctuation"},")"),c("span",{class:"token punctuation"},";"),p(),c("span",{class:"token comment"},"// 4"),p("\nconsole"),c("span",{class:"token punctuation"},"."),c("span",{class:"token function"},"log"),c("span",{class:"token punctuation"},"("),p("array"),c("span",{class:"token punctuation"},"."),c("span",{class:"token function"},"findIndex"),c("span",{class:"token punctuation"},"("),p("f2"),c("span",{class:"token punctuation"},")"),c("span",{class:"token punctuation"},")"),c("span",{class:"token punctuation"},";"),p(),c("span",{class:"token comment"},"// -1"),p("\n")])]),c("div",{class:"line-numbers-wrapper"},[c("span",{class:"line-number"},"1"),c("br"),c("span",{class:"line-number"},"2"),c("br"),c("span",{class:"line-number"},"3"),c("br"),c("span",{class:"line-number"},"4"),c("br"),c("span",{class:"line-number"},"5"),c("br"),c("span",{class:"line-number"},"6"),c("br"),c("span",{class:"line-number"},"7"),c("br"),c("span",{class:"line-number"},"8"),c("br"),c("span",{class:"line-number"},"9"),c("br"),c("span",{class:"line-number"},"10"),c("br"),c("span",{class:"line-number"},"11"),c("br")])],-1),Nt=c("blockquote",null,[c("p",null,"其鸭式辨型写法也与forEach方法一致")],-1),Mt=c("h3",{id:"keys-es6",tabindex:"-1"},[p("keys(ES6) "),c("a",{class:"header-anchor",href:"#keys-es6","aria-hidden":"true"},"#")],-1),Wt=c("p",null,"keys() 方法基于ECMAScript 2015（ES6）规范，返回一个数组索引的迭代器。（浏览器实际实现可能会有调整）",-1),Rt=c("p",null,"语法：arr.keys()",-1),Dt=c("div",{class:"language-js line-numbers-mode"},[c("pre",null,[c("code",null,[c("span",{class:"token keyword"},"var"),p(" array "),c("span",{class:"token operator"},"="),p(),c("span",{class:"token punctuation"},"["),c("span",{class:"token string"},'"abc"'),c("span",{class:"token punctuation"},","),p(),c("span",{class:"token string"},'"xyz"'),c("span",{class:"token punctuation"},"]"),c("span",{class:"token punctuation"},";"),p("\n"),c("span",{class:"token keyword"},"var"),p(" iterator "),c("span",{class:"token operator"},"="),p(" array"),c("span",{class:"token punctuation"},"."),c("span",{class:"token function"},"keys"),c("span",{class:"token punctuation"},"("),c("span",{class:"token punctuation"},")"),c("span",{class:"token punctuation"},";"),p("\nconsole"),c("span",{class:"token punctuation"},"."),c("span",{class:"token function"},"log"),c("span",{class:"token punctuation"},"("),p("iterator"),c("span",{class:"token punctuation"},"."),c("span",{class:"token function"},"next"),c("span",{class:"token punctuation"},"("),c("span",{class:"token punctuation"},")"),c("span",{class:"token punctuation"},")"),c("span",{class:"token punctuation"},";"),p(),c("span",{class:"token comment"},"// Object {value: 0, done: false}"),p("\nconsole"),c("span",{class:"token punctuation"},"."),c("span",{class:"token function"},"log"),c("span",{class:"token punctuation"},"("),p("iterator"),c("span",{class:"token punctuation"},"."),c("span",{class:"token function"},"next"),c("span",{class:"token punctuation"},"("),c("span",{class:"token punctuation"},")"),c("span",{class:"token punctuation"},")"),c("span",{class:"token punctuation"},";"),p(),c("span",{class:"token comment"},"// Object {value: 1, done: false}"),p("\nconsole"),c("span",{class:"token punctuation"},"."),c("span",{class:"token function"},"log"),c("span",{class:"token punctuation"},"("),p("iterator"),c("span",{class:"token punctuation"},"."),c("span",{class:"token function"},"next"),c("span",{class:"token punctuation"},"("),c("span",{class:"token punctuation"},")"),c("span",{class:"token punctuation"},")"),c("span",{class:"token punctuation"},";"),p(),c("span",{class:"token comment"},"// Object {value: undefined, done: false}"),p("\n")])]),c("div",{class:"line-numbers-wrapper"},[c("span",{class:"line-number"},"1"),c("br"),c("span",{class:"line-number"},"2"),c("br"),c("span",{class:"line-number"},"3"),c("br"),c("span",{class:"line-number"},"4"),c("br"),c("span",{class:"line-number"},"5"),c("br")])],-1),Ft=c("blockquote",null,[c("p",null,"索引迭代器会包含那些没有对应元素的索引")],-1),Jt=c("div",{class:"language-js line-numbers-mode"},[c("pre",null,[c("code",null,[c("span",{class:"token keyword"},"var"),p(" array "),c("span",{class:"token operator"},"="),p(),c("span",{class:"token punctuation"},"["),c("span",{class:"token string"},'"abc"'),c("span",{class:"token punctuation"},","),p(),c("span",{class:"token punctuation"},","),p(),c("span",{class:"token string"},'"xyz"'),c("span",{class:"token punctuation"},"]"),c("span",{class:"token punctuation"},";"),p("\n"),c("span",{class:"token keyword"},"var"),p(" sparseKeys "),c("span",{class:"token operator"},"="),p(" Object"),c("span",{class:"token punctuation"},"."),c("span",{class:"token function"},"keys"),c("span",{class:"token punctuation"},"("),p("array"),c("span",{class:"token punctuation"},")"),c("span",{class:"token punctuation"},";"),p("\n"),c("span",{class:"token keyword"},"var"),p(" denseKeys "),c("span",{class:"token operator"},"="),p(),c("span",{class:"token punctuation"},"["),c("span",{class:"token operator"},"..."),p("array"),c("span",{class:"token punctuation"},"."),c("span",{class:"token function"},"keys"),c("span",{class:"token punctuation"},"("),c("span",{class:"token punctuation"},")"),c("span",{class:"token punctuation"},"]"),c("span",{class:"token punctuation"},";"),p(),c("span",{class:"token comment"},"// 类似Array.from(array.keys())"),p("\nconsole"),c("span",{class:"token punctuation"},"."),c("span",{class:"token function"},"log"),c("span",{class:"token punctuation"},"("),p("sparseKeys"),c("span",{class:"token punctuation"},")"),c("span",{class:"token punctuation"},";"),p(),c("span",{class:"token comment"},'// ["0", "2"]'),p("\nconsole"),c("span",{class:"token punctuation"},"."),c("span",{class:"token function"},"log"),c("span",{class:"token punctuation"},"("),p("denseKeys"),c("span",{class:"token punctuation"},")"),c("span",{class:"token punctuation"},";"),p("  "),c("span",{class:"token comment"},"// [0, 1, 2]"),p("\n")])]),c("div",{class:"line-numbers-wrapper"},[c("span",{class:"line-number"},"1"),c("br"),c("span",{class:"line-number"},"2"),c("br"),c("span",{class:"line-number"},"3"),c("br"),c("span",{class:"line-number"},"4"),c("br"),c("span",{class:"line-number"},"5"),c("br")])],-1),zt=c("p",null,"其鸭式辨型写法请参考上述 entries 方法",-1),Bt=c("p",null,"前面我们用Array.from生成一个从0到指定数字的新数组，利用keys也很容易实现。",-1),Kt=c("div",{class:"language-js line-numbers-mode"},[c("pre",null,[c("code",null,[c("span",{class:"token punctuation"},"["),c("span",{class:"token operator"},"..."),c("span",{class:"token function"},"Array"),c("span",{class:"token punctuation"},"("),c("span",{class:"token number"},"10"),c("span",{class:"token punctuation"},")"),c("span",{class:"token punctuation"},"."),c("span",{class:"token function"},"keys"),c("span",{class:"token punctuation"},"("),c("span",{class:"token punctuation"},")"),c("span",{class:"token punctuation"},"]"),c("span",{class:"token punctuation"},";"),p(),c("span",{class:"token comment"},"// [0, 1, 2, 3, 4, 5, 6, 7, 8, 9]"),p("\n"),c("span",{class:"token punctuation"},"["),c("span",{class:"token operator"},"..."),c("span",{class:"token keyword"},"new"),p(),c("span",{class:"token class-name"},"Array"),c("span",{class:"token punctuation"},"("),c("span",{class:"token number"},"10"),c("span",{class:"token punctuation"},")"),c("span",{class:"token punctuation"},"."),c("span",{class:"token function"},"keys"),c("span",{class:"token punctuation"},"("),c("span",{class:"token punctuation"},")"),c("span",{class:"token punctuation"},"]"),c("span",{class:"token punctuation"},";"),p(),c("span",{class:"token comment"},"// [0, 1, 2, 3, 4, 5, 6, 7, 8, 9]"),p("\nArray"),c("span",{class:"token punctuation"},"."),c("span",{class:"token function"},"from"),c("span",{class:"token punctuation"},"("),c("span",{class:"token punctuation"},"{"),p("length"),c("span",{class:"token operator"},":"),p(),c("span",{class:"token number"},"10"),c("span",{class:"token punctuation"},"}"),c("span",{class:"token punctuation"},","),p(),c("span",{class:"token punctuation"},"("),c("span",{class:"token parameter"},[p("v"),c("span",{class:"token punctuation"},","),p(" i")]),c("span",{class:"token punctuation"},")"),p(),c("span",{class:"token operator"},"=>"),p(" i"),c("span",{class:"token punctuation"},")"),c("span",{class:"token punctuation"},";"),p(),c("span",{class:"token comment"},"// [0, 1, 2, 3, 4, 5, 6, 7, 8, 9]"),p("\n")])]),c("div",{class:"line-numbers-wrapper"},[c("span",{class:"line-number"},"1"),c("br"),c("span",{class:"line-number"},"2"),c("br"),c("span",{class:"line-number"},"3"),c("br")])],-1),Gt=c("blockquote",null,[c("p",null,"keys基于ES6，并未完全支持")],-1),Ht=c("h3",{id:"values-es6",tabindex:"-1"},[p("values(ES6) "),c("a",{class:"header-anchor",href:"#values-es6","aria-hidden":"true"},"#")],-1),Ut=c("p",null,"values() 方法基于ECMAScript 2015（ES6）规范，返回一个数组迭代器对象，该对象包含数组中每个索引的值。其用法基本与上述 entries 方法一致。",-1),Qt=c("p",null,"语法：arr.values()",-1),Xt=c("div",{class:"language-js line-numbers-mode"},[c("pre",null,[c("code",null,[c("span",{class:"token keyword"},"var"),p(" array "),c("span",{class:"token operator"},"="),p(),c("span",{class:"token punctuation"},"["),c("span",{class:"token string"},'"abc"'),c("span",{class:"token punctuation"},","),p(),c("span",{class:"token string"},'"xyz"'),c("span",{class:"token punctuation"},"]"),c("span",{class:"token punctuation"},";"),p("\n"),c("span",{class:"token keyword"},"var"),p(" iterator "),c("span",{class:"token operator"},"="),p(" array"),c("span",{class:"token punctuation"},"."),c("span",{class:"token function"},"values"),c("span",{class:"token punctuation"},"("),c("span",{class:"token punctuation"},")"),c("span",{class:"token punctuation"},";"),p("\nconsole"),c("span",{class:"token punctuation"},"."),c("span",{class:"token function"},"log"),c("span",{class:"token punctuation"},"("),p("iterator"),c("span",{class:"token punctuation"},"."),c("span",{class:"token function"},"next"),c("span",{class:"token punctuation"},"("),c("span",{class:"token punctuation"},")"),c("span",{class:"token punctuation"},"."),p("value"),c("span",{class:"token punctuation"},")"),c("span",{class:"token punctuation"},";"),c("span",{class:"token comment"},"//abc"),p("\nconsole"),c("span",{class:"token punctuation"},"."),c("span",{class:"token function"},"log"),c("span",{class:"token punctuation"},"("),p("iterator"),c("span",{class:"token punctuation"},"."),c("span",{class:"token function"},"next"),c("span",{class:"token punctuation"},"("),c("span",{class:"token punctuation"},")"),c("span",{class:"token punctuation"},"."),p("value"),c("span",{class:"token punctuation"},")"),c("span",{class:"token punctuation"},";"),c("span",{class:"token comment"},"//xyz"),p("\n")])]),c("div",{class:"line-numbers-wrapper"},[c("span",{class:"line-number"},"1"),c("br"),c("span",{class:"line-number"},"2"),c("br"),c("span",{class:"line-number"},"3"),c("br"),c("span",{class:"line-number"},"4"),c("br")])],-1),Yt=c("h3",{id:"symbol-iterator-es6",tabindex:"-1"},[p("Symbol.iterator(ES6) "),c("a",{class:"header-anchor",href:"#symbol-iterator-es6","aria-hidden":"true"},"#")],-1),Zt=c("p",null,"该方法基于ECMAScript 2015（ES6）规范，同 values 方法功能相同。",-1),$t=c("p",null,[p("语法："),c("code",null,"arr[Symbol.iterator]()")],-1),no=c("div",{class:"language-js line-numbers-mode"},[c("pre",null,[c("code",null,[c("span",{class:"token keyword"},"var"),p(" array "),c("span",{class:"token operator"},"="),p(),c("span",{class:"token punctuation"},"["),c("span",{class:"token string"},'"abc"'),c("span",{class:"token punctuation"},","),p(),c("span",{class:"token string"},'"xyz"'),c("span",{class:"token punctuation"},"]"),c("span",{class:"token punctuation"},";"),p("\n"),c("span",{class:"token keyword"},"var"),p(" iterator "),c("span",{class:"token operator"},"="),p(" array"),c("span",{class:"token punctuation"},"["),p("Symbol"),c("span",{class:"token punctuation"},"."),p("iterator"),c("span",{class:"token punctuation"},"]"),c("span",{class:"token punctuation"},"("),c("span",{class:"token punctuation"},")"),c("span",{class:"token punctuation"},";"),p("\nconsole"),c("span",{class:"token punctuation"},"."),c("span",{class:"token function"},"log"),c("span",{class:"token punctuation"},"("),p("iterator"),c("span",{class:"token punctuation"},"."),c("span",{class:"token function"},"next"),c("span",{class:"token punctuation"},"("),c("span",{class:"token punctuation"},")"),c("span",{class:"token punctuation"},"."),p("value"),c("span",{class:"token punctuation"},")"),c("span",{class:"token punctuation"},";"),p(),c("span",{class:"token comment"},"// abc"),p("\nconsole"),c("span",{class:"token punctuation"},"."),c("span",{class:"token function"},"log"),c("span",{class:"token punctuation"},"("),p("iterator"),c("span",{class:"token punctuation"},"."),c("span",{class:"token function"},"next"),c("span",{class:"token punctuation"},"("),c("span",{class:"token punctuation"},")"),c("span",{class:"token punctuation"},"."),p("value"),c("span",{class:"token punctuation"},")"),c("span",{class:"token punctuation"},";"),p(),c("span",{class:"token comment"},"// xyz"),p("\n")])]),c("div",{class:"line-numbers-wrapper"},[c("span",{class:"line-number"},"1"),c("br"),c("span",{class:"line-number"},"2"),c("br"),c("span",{class:"line-number"},"3"),c("br"),c("span",{class:"line-number"},"4"),c("br")])],-1),so=e('',7);var ao=n(r,[["render",function(n,e,c,p,u,r){const ao=s("code-block");return l(),a("div",null,[i,t(ao,{showAction:!1},{default:o((()=>[k])),_:1}),b,m,d,f,t(ao,{showAction:!1},{default:o((()=>[g])),_:1}),y,h,v,w,A,t(ao,{showAction:!1},{default:o((()=>[_])),_:1}),j,t(ao,{showAction:!1},{default:o((()=>[S])),_:1}),x,t(ao,{showAction:!1},{default:o((()=>[E])),_:1}),O,I,T,C,P,t(ao,{showAction:!1},{default:o((()=>[V])),_:1}),q,L,N,t(ao,{showAction:!1},{default:o((()=>[M])),_:1}),W,t(ao,{showAction:!1},{default:o((()=>[R])),_:1}),D,t(ao,{showAction:!1},{default:o((()=>[F])),_:1}),J,t(ao,{showAction:!1},{default:o((()=>[z])),_:1}),B,t(ao,{showAction:!1},{default:o((()=>[K])),_:1}),G,H,U,t(ao,{showAction:!1},{default:o((()=>[Q])),_:1}),X,t(ao,{showAction:!1},{default:o((()=>[Y])),_:1}),Z,$,nn,t(ao,{showAction:!1},{default:o((()=>[sn])),_:1}),an,tn,on,t(ao,{showAction:!1},{default:o((()=>[en])),_:1}),cn,pn,ln,un,rn,t(ao,{showAction:!1},{default:o((()=>[kn])),_:1}),bn,t(ao,{showAction:!1},{default:o((()=>[mn])),_:1}),dn,t(ao,{showAction:!1},{default:o((()=>[fn])),_:1}),gn,yn,hn,t(ao,{showAction:!1},{default:o((()=>[vn])),_:1}),wn,t(ao,{showAction:!1},{default:o((()=>[An])),_:1}),_n,t(ao,{showAction:!1},{default:o((()=>[jn])),_:1}),Sn,t(ao,{showAction:!1},{default:o((()=>[xn])),_:1}),En,On,In,t(ao,{showAction:!1},{default:o((()=>[Tn])),_:1}),Cn,t(ao,{showAction:!1},{default:o((()=>[Pn])),_:1}),Vn,t(ao,{showAction:!1},{default:o((()=>[qn])),_:1}),Ln,Nn,Mn,t(ao,{showAction:!1},{default:o((()=>[Wn])),_:1}),Rn,t(ao,{showAction:!1},{default:o((()=>[Dn])),_:1}),Fn,t(ao,{showAction:!1},{default:o((()=>[Jn])),_:1}),zn,Bn,Kn,Gn,t(ao,{showAction:!1},{default:o((()=>[Hn])),_:1}),Un,Qn,Xn,t(ao,{showAction:!1},{default:o((()=>[Yn])),_:1}),Zn,t(ao,{showAction:!1},{default:o((()=>[$n])),_:1}),ns,ss,as,t(ao,{showAction:!1},{default:o((()=>[ts])),_:1}),os,t(ao,{showAction:!1},{default:o((()=>[es])),_:1}),cs,ps,t(ao,{showAction:!1},{default:o((()=>[ls])),_:1}),us,rs,is,ks,t(ao,{showAction:!1},{default:o((()=>[bs])),_:1}),ms,t(ao,{showAction:!1},{default:o((()=>[ds])),_:1}),fs,gs,t(ao,{showAction:!1},{default:o((()=>[ys])),_:1}),hs,vs,ws,t(ao,{showAction:!1},{default:o((()=>[As])),_:1}),_s,t(ao,{showAction:!1},{default:o((()=>[js])),_:1}),Ss,t(ao,{showAction:!1},{default:o((()=>[xs])),_:1}),Es,Os,Is,Ts,Cs,t(ao,{showAction:!1},{default:o((()=>[Ps])),_:1}),Vs,t(ao,{showAction:!1},{default:o((()=>[qs])),_:1}),Ls,Ns,Ms,Ws,Rs,t(ao,{showAction:!1},{default:o((()=>[Ds])),_:1}),Fs,t(ao,{showAction:!1},{default:o((()=>[Js])),_:1}),zs,Bs,Ks,Gs,Hs,Us,t(ao,{showAction:!1},{default:o((()=>[Qs])),_:1}),Xs,t(ao,{showAction:!1},{default:o((()=>[Ys])),_:1}),Zs,t(ao,{showAction:!1},{default:o((()=>[$s])),_:1}),na,sa,aa,ta,t(ao,{showAction:!1},{default:o((()=>[oa])),_:1}),ea,t(ao,{showAction:!1},{default:o((()=>[ca])),_:1}),pa,la,ua,ra,ia,ka,t(ao,{showAction:!1},{default:o((()=>[ba])),_:1}),ma,t(ao,{showAction:!1},{default:o((()=>[da])),_:1}),fa,ga,t(ao,{showAction:!1},{default:o((()=>[ya])),_:1}),ha,t(ao,{showAction:!1},{default:o((()=>[va])),_:1}),wa,Aa,_a,t(ao,{showAction:!1},{default:o((()=>[ja])),_:1}),Sa,t(ao,{showAction:!1},{default:o((()=>[xa])),_:1}),Ea,Oa,t(ao,{showAction:!1},{default:o((()=>[Ia])),_:1}),Ta,Ca,Pa,Va,qa,t(ao,{showAction:!1},{default:o((()=>[La])),_:1}),Na,t(ao,{showAction:!1},{default:o((()=>[Ma])),_:1}),Wa,Ra,Da,Fa,Ja,za,t(ao,{showAction:!1},{default:o((()=>[Ba])),_:1}),Ka,t(ao,{showAction:!1},{default:o((()=>[Ga])),_:1}),Ha,t(ao,{showAction:!1},{default:o((()=>[Ua])),_:1}),Qa,Xa,t(ao,{showAction:!1},{default:o((()=>[Ya])),_:1}),Za,t(ao,{showAction:!1},{default:o((()=>[$a])),_:1}),nt,st,at,tt,t(ao,{showAction:!1},{default:o((()=>[ot])),_:1}),et,t(ao,{showAction:!1},{default:o((()=>[ct])),_:1}),pt,t(ao,{showAction:!1},{default:o((()=>[lt])),_:1}),ut,rt,it,kt,bt,t(ao,{showAction:!1},{default:o((()=>[mt])),_:1}),dt,t(ao,{showAction:!1},{default:o((()=>[ft])),_:1}),gt,t(ao,{showAction:!1},{default:o((()=>[yt])),_:1}),ht,t(ao,{showAction:!1},{default:o((()=>[vt])),_:1}),wt,At,_t,jt,St,t(ao,{showAction:!1},{default:o((()=>[xt])),_:1}),Et,t(ao,{showAction:!1},{default:o((()=>[Ot])),_:1}),It,Tt,Ct,Pt,Vt,qt,t(ao,{showAction:!1},{default:o((()=>[Lt])),_:1}),Nt,Mt,Wt,Rt,t(ao,{showAction:!1},{default:o((()=>[Dt])),_:1}),Ft,t(ao,{showAction:!1},{default:o((()=>[Jt])),_:1}),zt,Bt,t(ao,{showAction:!1},{default:o((()=>[Kt])),_:1}),Gt,Ht,Ut,Qt,t(ao,{showAction:!1},{default:o((()=>[Xt])),_:1}),Yt,Zt,$t,t(ao,{showAction:!1},{default:o((()=>[no])),_:1}),so])}]]);export{u as __pageData,ao as default};
